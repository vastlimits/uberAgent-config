name: Transpile Script

on:
  push:
    branches-ignore:
      - 'main'
      - 'version/7.0'
      - 'version/6.2'

jobs:
  transpile:
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Run transpiler script
        shell: bash
        run: python config-dev/transpile.py
      
      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.1
        with:
          path: "config/Security inventory/Windows"
          recurse: true
          output: config-dev/generated/psscriptanalyzer_log.sarif

      - name: Run PSScriptAnalyzer log analyzer script
        shell: bash
        run: python config-dev/analyzeLog.py --log_level note --fail_level error
      
      - name: Import code signing certificate
        if: success()
        shell: powershell
        run: |
          $pfxCertFilePath = Join-Path -Path $PSScriptRoot -ChildPath "CodeSigningCertificate.pfx"
          Set-Content -Value $([System.Convert]::FromBase64String($env:BASE64_PFX)) -Path $pfxCertFilePath -Encoding Byte
          $codeSigningCert = Import-PfxCertificate -FilePath $pfxCertFilePath -Password $($env:PFX_PASSWORD | ConvertTo-SecureString -AsPlainText -Force) -CertStoreLocation Cert:\CurrentUser\My
        env:
          BASE64_PFX: ${{ secrets.CERT_BASE64_PFX }}
          PFX_PASSWORD: ${{ secrets.CERT_PFX_PASSWORD }}
  
      - name: Sign PowerShell Scripts
        if: success()
        shell: powershell
        run: |
          $scripts = Get-ChildItem -Path $env:SCRIPT_DIR -Filter "*.ps1" -Recurse -ErrorAction Stop
 
          $codeSigningCert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
 
          foreach ($script in $scripts) {
            try {
              $scriptContent = Get-Content -Path $script.FullName
              Write-Output "Signing script `"$($script.Name)`" with certificate `"$($codeSigningCert.Thumbprint)`""
              # sign script
              $null = Set-AuthenticodeSignature -Certificate $codeSigningCert -FilePath $script.FullName -TimestampServer "http://timestamp.comodoca.com/rfc3161"
            }
            catch {
              Write-Error $_
            }
          }
        env:
          SCRIPT_DIR: "./config/Security inventory/Windows"

      - name: Run badge update script
        if: success() || failure()
        run: python config-dev/updateBadge.py
        shell: bash
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Commit everything
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated transpiled output
          commit_user_name: vastlimits

      - name: Commit only README.md
        if: failure()
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated status in README.md
          file_pattern: '*.md'
          commit_user_name: vastlimits
          commit_user_email: devops@vastlimits.com
