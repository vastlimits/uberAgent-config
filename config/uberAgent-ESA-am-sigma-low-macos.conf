
#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# To generate the ruleset, please follow the instructions provided in the repository: https://github.com/vastlimits/pySigma-backend-uberAgent/
#
# The command used to generate the ruleset is:
#    sigma convert -s -f conf -p uberagent-7.1.0 -t uberagent /home/runner/work/uberAgent-config/uberAgent-config/build/sigma-low-macos >> uberAgent-ESA-am-sigma-low-macos.conf
#

[ActivityMonitoringRule platform=MacOS]
# Detects enumeration of local or remote network services.
# Author: Alejandro Ortuno, oscd.community
RuleId = 84bae5d4-b518-4ae0-b331-6d4afd34d00f
RuleName = MacOS Network Service Scanning
EventType = Process.Start
Tag = proc-start-macos-network-service-scanning
RiskScore = 25
Annotation = {"mitre_attack": ["T1046"]}
Query = (iendswith(Process.Path, "/nc") or iendswith(Process.Path, "/netcat")) and not icontains(Process.CommandLine, "l") or iendswith(Process.Path, "/nmap") or iendswith(Process.Path, "/telnet")


[ActivityMonitoringRule platform=MacOS]
# Detects macOS Gatekeeper bypass via xattr utility
# Author: Daniil Yugoslavskiy, oscd.community
RuleId = f5141b6d-9f42-41c6-a7bf-2a780678b29b
RuleName = Gatekeeper Bypass via Xattr
EventType = Process.Start
Tag = proc-start-gatekeeper-bypass-via-xattr
RiskScore = 25
Annotation = {"mitre_attack": ["T1553.001"]}
Query = iendswith(Process.Path, "/xattr") and icontains(Process.CommandLine, "-r") and icontains(Process.CommandLine, "com.apple.quarantine")


[ActivityMonitoringRule platform=MacOS]
# Detects the creation of a new user account. Such accounts may be used for persistence that do not require persistent remote access tools to be deployed on the system.
# Author: Alejandro Ortuno, oscd.community
RuleId = 51719bf5-e4fd-4e44-8ba8-b830e7ac0731
RuleName = Creation Of A Local User Account
EventType = Process.Start
Tag = proc-start-creation-of-a-local-user-account
RiskScore = 25
Annotation = {"mitre_attack": ["T1136.001"]}
Query = iendswith(Process.Path, "/dscl") and icontains(Process.CommandLine, "create") or iendswith(Process.Path, "/sysadminctl") and icontains(Process.CommandLine, "addUser")


[ActivityMonitoringRule platform=MacOS]
# Detects enumeration of local systeam accounts on MacOS
# Author: Alejandro Ortuno, oscd.community
RuleId = ddf36b67-e872-4507-ab2e-46bda21b842c
RuleName = Local System Accounts Discovery - MacOs
EventType = Process.Start
Tag = proc-start-local-system-accounts-discovery-macos
RiskScore = 25
Annotation = {"mitre_attack": ["T1087.001"]}
Query = iendswith(Process.Path, "/dscl") and icontains(Process.CommandLine, "list") and icontains(Process.CommandLine, "/users") or iendswith(Process.Path, "/dscacheutil") and icontains(Process.CommandLine, "-q") and icontains(Process.CommandLine, "user") or icontains(Process.CommandLine, "'x:0:'") or iendswith(Process.Path, "/cat") and (icontains(Process.CommandLine, "/etc/passwd") or icontains(Process.CommandLine, "/etc/sudoers")) or iendswith(Process.Path, "/id") or iendswith(Process.Path, "/lsof") and icontains(Process.CommandLine, "-u")


[ActivityMonitoringRule platform=MacOS]
# Detects creation of startup item plist files that automatically get executed at boot initialization to establish persistence.
# Author: Alejandro Ortuno, oscd.community
RuleId = dfe8b941-4e54-4242-b674-6b613d521962
RuleName = Startup Items
EventType = File.Create
Tag = startup-items
RiskScore = 25
Annotation = {"mitre_attack": ["T1037.005"]}
Query = icontains(File.Path, "/Library/StartupItems/") or iendswith(File.Path, ".plist")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=MacOS]
# Detects attempts to masquerade as legitimate files by adding a space to the end of the filename.
# Author: remotephone
RuleId = b6e2a2e3-2d30-43b1-a4ea-071e36595690
RuleName = Space After Filename - macOS
EventType = Process.Start
Tag = proc-start-space-after-filename-macos
RiskScore = 25
Annotation = {"mitre_attack": ["T1036.006"]}
Query = iendswith(Process.CommandLine, " ") or iendswith(Process.Path, " ")


[ActivityMonitoringRule platform=MacOS]
# Detects attempts to enable the guest account using the sysadminctl utility
# Author: Sohan G (D4rkCiph3r)
RuleId = d7329412-13bd-44ba-a072-3387f804a106
RuleName = Guest Account Enabled Via Sysadminctl
EventType = Process.Start
Tag = proc-start-guest-account-enabled-via-sysadminctl
RiskScore = 25
Annotation = {"mitre_attack": ["T1078", "T1078.001"]}
Query = iendswith(Process.Path, "/sysadminctl") and icontains(Process.CommandLine, " -guestAccount") and icontains(Process.CommandLine, " on")


[ActivityMonitoringRule platform=MacOS]
# Detection use of the command "split" to split files into parts and possible transfer.
# Author: Igor Fits, Mikhail Larin, oscd.community
RuleId = 7f2bb9d5-6395-4de5-969c-70c11fbe6b12
RuleName = Split A File Into Pieces
EventType = Process.Start
Tag = proc-start-split-a-file-into-pieces
RiskScore = 25
Annotation = {"mitre_attack": ["T1030"]}
Query = iendswith(Process.Path, "/split")


[ActivityMonitoringRule platform=MacOS]
# Detects attempts to use screencapture to collect macOS screenshots
# Author: remotephone, oscd.community
RuleId = 0877ed01-da46-4c49-8476-d49cdd80dfa7
RuleName = Screen Capture - macOS
EventType = Process.Start
Tag = proc-start-screen-capture-macos
RiskScore = 25
Annotation = {"mitre_attack": ["T1113"]}
Query = Process.Path == "/usr/sbin/screencapture"


[ActivityMonitoringRule platform=MacOS]
# Detects execution of the "jamf" binary to create user accounts and run commands. For example, the binary can be abused by attackers on the system in order to bypass security controls or remove application control polices.
# Author: Jay Pandit
RuleId = be2e3a5c-9cc7-4d02-842a-68e9cb26ec49
RuleName = JAMF MDM Execution
EventType = Process.Start
Tag = proc-start-jamf-mdm-execution
RiskScore = 25
Query = iendswith(Process.Path, "/jamf") and (icontains(Process.CommandLine, "createAccount") or icontains(Process.CommandLine, "manage") or icontains(Process.CommandLine, "removeFramework") or icontains(Process.CommandLine, "removeMdmProfile") or icontains(Process.CommandLine, "resetPassword") or icontains(Process.CommandLine, "setComputerName"))


[ActivityMonitoringRule platform=MacOS]
# Detects usage of base64 utility to decode arbitrary base64-encoded text
# Author: Daniil Yugoslavskiy, oscd.community
RuleId = 719c22d7-c11a-4f2c-93a6-2cfdd5412f68
RuleName = Decode Base64 Encoded Text -MacOs
EventType = Process.Start
Tag = proc-start-decode-base64-encoded-text-macos
RiskScore = 25
Annotation = {"mitre_attack": ["T1027"]}
Query = Process.Path == "/usr/bin/base64" and icontains(Process.CommandLine, "-d")


[ActivityMonitoringRule platform=MacOS]
# Detects attempts to use system dialog prompts to capture user credentials
# Author: remotephone, oscd.community
RuleId = 60f1ce20-484e-41bd-85f4-ac4afec2c541
RuleName = GUI Input Capture - macOS
EventType = Process.Start
Tag = proc-start-gui-input-capture-macos
RiskScore = 25
Annotation = {"mitre_attack": ["T1056.002"]}
Query = Process.Path == "/usr/sbin/osascript" and icontains(Process.CommandLine, "-e") and icontains(Process.CommandLine, "display") and icontains(Process.CommandLine, "dialog") and icontains(Process.CommandLine, "answer") and (icontains(Process.CommandLine, "admin") or icontains(Process.CommandLine, "administrator") or icontains(Process.CommandLine, "authenticate") or icontains(Process.CommandLine, "authentication") or icontains(Process.CommandLine, "credentials") or icontains(Process.CommandLine, "pass") or icontains(Process.CommandLine, "password") or icontains(Process.CommandLine, "unlock"))

