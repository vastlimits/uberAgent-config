
#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# To generate the ruleset, please follow the instructions provided in the repository: https://github.com/vastlimits/pySigma-backend-uberAgent/
#
# The command used to generate the ruleset is:
#    sigma convert -s -f conf -p uberagent-7.0.0 -t uberagent /home/runner/work/uberAgent-config/uberAgent-config/build/sigma-low >> uberAgent-ESA-am-sigma-low.conf
#

[ActivityMonitoringRule]
# Detects the execution of "attrib" with the "+s" flag to mark files as system files
# Author: frack113
RuleId = bb19e94c-59ae-4c15-8c12-c563d23fe52b
RuleName = Set Files as System Files Using Attrib.EXE
EventType = Process.Start
Tag = proc-start-set-files-as-system-files-using-attrib.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1564.001"]}
Query = (iendswith(Process.Path, "\\attrib.exe") or Process.Name == "ATTRIB.EXE") and icontains(Process.CommandLine, " +s ")


[ActivityMonitoringRule]
# Detects the execution of "wmic" with the "group" flag.
# Adversaries may attempt to find local system groups and permission settings.
# The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
# Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.
# Author: frack113
RuleId = 164eda96-11b2-430b-85ff-6a265c15bf32
RuleName = Local Groups Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-local-groups-reconnaissance-via-wmic.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1069.001"]}
Query = (iendswith(Process.Path, "\\wmic.exe") or Process.Name == "wmic.exe") and icontains(Process.CommandLine, " group")


[ActivityMonitoringRule]
# Detects potential RDP connection via Mstsc using a local ".rdp" file
# Author: Nasreddine Bencherchali (Nextron Systems), Christopher Peacock @securepeacock
RuleId = 5fdce3ac-e7f9-4ecd-a3aa-a4d78ebbf0af
RuleName = Mstsc.EXE Execution With Local RDP File
EventType = Process.Start
Tag = proc-start-mstsc.exe-execution-with-local-rdp-file
RiskScore = 25
Annotation = {"mitre_attack": ["T1219"]}
Query = (iendswith(Process.Path, "\\mstsc.exe") or Process.Name == "mstsc.exe") and (iendswith(Process.CommandLine, ".rdp") or iendswith(Process.CommandLine, ".rdp\"")) and not (Parent.Path == "C:\\Windows\\System32\\lxss\\wslhost.exe" and icontains(Process.CommandLine, "C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects execution of the builtin "rmdir" command in order to delete directories.
# Adversaries may delete files left behind by the actions of their intrusion activity.
# Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
# Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.
# Author: frack113
RuleId = 41ca393d-538c-408a-ac27-cf1e038be80c
RuleName = Directory Removal Via Rmdir
EventType = Process.Start
Tag = proc-start-directory-removal-via-rmdir
RiskScore = 25
Annotation = {"mitre_attack": ["T1070.004"]}
Query = (iendswith(Process.Path, "\\cmd.exe") or Process.Name == "Cmd.Exe") and icontains(Process.CommandLine, "rmdir") and (icontains(Process.CommandLine, "/s") or icontains(Process.CommandLine, "/q"))


[ActivityMonitoringRule]
# Detects the execution of clip.exe in order to copy data to the clipboard. Adversaries may collect data stored in the clipboard from users copying information within or between applications.
# Author: frack113
RuleId = ddeff553-5233-4ae9-bbab-d64d2bd634be
RuleName = Data Copied To Clipboard Via Clip.EXE
EventType = Process.Start
Tag = proc-start-data-copied-to-clipboard-via-clip.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1115"]}
Query = iendswith(Process.Path, "\\clip.exe") or Process.Name == "clip.exe"


[ActivityMonitoringRule]
# Detects nltest commands that can be used for information discovery
# Author: Arun Chauhan
RuleId = 903076ff-f442-475a-b667-4f246bcc203b
RuleName = Nltest.EXE Execution
EventType = Process.Start
Tag = proc-start-nltest.exe-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1016", "T1018", "T1482"]}
Query = iendswith(Process.Path, "\\nltest.exe") or Process.Name == "nltestrk.exe"


[ActivityMonitoringRule]
# Detects file association changes using the builtin "assoc" command.
# When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.
# Author: Timur Zinniatullin, oscd.community
RuleId = 3d3aa6cd-6272-44d6-8afc-7e88dfef7061
RuleName = Change Default File Association Via Assoc
EventType = Process.Start
Tag = proc-start-change-default-file-association-via-assoc
RiskScore = 25
Annotation = {"mitre_attack": ["T1546.001"]}
Query = (iendswith(Process.Path, "\\cmd.exe") or Process.Name == "Cmd.Exe") and icontains(Process.CommandLine, "assoc")


[ActivityMonitoringRule]
# Detects execution of Net.exe, whether suspicious or benign.
# Author: Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)
RuleId = 183e7ea8-ac4b-4c23-9aec-b3dac4e401ac
RuleName = Net.exe Execution
EventType = Process.Start
Tag = proc-start-net.exe-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1007", "T1049", "T1018", "T1135", "T1201", "T1069.001", "T1069.002", "T1087.001", "T1087.002", "T1021.002"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and (icontains(Process.CommandLine, " group") or icontains(Process.CommandLine, " localgroup") or icontains(Process.CommandLine, " user") or icontains(Process.CommandLine, " view") or icontains(Process.CommandLine, " share") or icontains(Process.CommandLine, " accounts") or icontains(Process.CommandLine, " stop ") or icontains(Process.CommandLine, " start"))


[ActivityMonitoringRule]
# Detects execution of "sc.exe" to query information about registered services on the system
# Author: frack113
RuleId = 57712d7a-679c-4a41-a913-87e7175ae429
RuleName = SC.EXE Query Execution
EventType = Process.Start
Tag = proc-start-sc.exe-query-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1007"]}
Query = iendswith(Process.Path, "\\sc.exe") and iendswith(Process.Name, "sc.exe") and icontains(Process.CommandLine, " query")


[ActivityMonitoringRule]
# Detects the stopping of a Windows service
# Author: Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = c49c5062-0966-4170-9efd-9968c913a6cf
RuleName = Stop Windows Service Via PowerShell Stop-Service
EventType = Process.Start
Tag = proc-start-stop-windows-service-via-powershell-stop-service
RiskScore = 25
Annotation = {"mitre_attack": ["T1489"]}
Query = (Process.Name in ["PowerShell.EXE", "pwsh.dll"] or iendswith(Process.Path, "\\powershell.exe") or iendswith(Process.Path, "\\pwsh.exe")) and icontains(Process.CommandLine, "Stop-Service ")


[ActivityMonitoringRule]
# Detects usage of "rar" to add files to an archive for potential compression. An adversary may compress data (e.g. sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.
# Author: Timur Zinniatullin, E.M. Anhaus, oscd.community
RuleId = 6f3e2987-db24-4c78-a860-b4f4095a7095
RuleName = Files Added To An Archive Using Rar.EXE
EventType = Process.Start
Tag = proc-start-files-added-to-an-archive-using-rar.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1560.001"]}
Query = iendswith(Process.Path, "\\rar.exe") and icontains(Process.CommandLine, " a ")


[ActivityMonitoringRule]
# Attackers can use explorer.exe for evading defense mechanisms
# Author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative
RuleId = 9eb271b9-24ae-4cd4-9465-19cfc1047f3e
RuleName = Proxy Execution Via Explorer.exe
EventType = Process.Start
Tag = proc-start-proxy-execution-via-explorer.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1218"]}
Query = iendswith(Process.Path, "\\explorer.exe") and iendswith(Parent.Path, "\\cmd.exe") and icontains(Process.CommandLine, "explorer.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects execution of the builtin "del"/"erase" commands in order to delete files.
# Adversaries may delete files left behind by the actions of their intrusion activity.
# Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
# Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.
# Author: frack113
RuleId = 379fa130-190e-4c3f-b7bc-6c8e834485f3
RuleName = File Deletion Via Del
EventType = Process.Start
Tag = proc-start-file-deletion-via-del
RiskScore = 25
Annotation = {"mitre_attack": ["T1070.004"]}
Query = (iendswith(Process.Path, "\\cmd.exe") or Process.Name == "Cmd.Exe") and (icontains(Process.CommandLine, "del ") or icontains(Process.CommandLine, "erase ")) and (icontains(Process.CommandLine, " /f") or icontains(Process.CommandLine, " /s") or icontains(Process.CommandLine, " /q"))


[ActivityMonitoringRule]
# Local accounts, System Owner/User discovery using operating systems utilities
# Author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community
RuleId = 502b42de-4306-40b4-9596-6f590c81f073
RuleName = Local Accounts Discovery
EventType = Process.Start
Tag = proc-start-local-accounts-discovery
RiskScore = 25
Annotation = {"mitre_attack": ["T1033", "T1087.001"]}
Query = iendswith(Process.Path, "\\cmd.exe") and icontains(Process.CommandLine, " /c") and icontains(Process.CommandLine, "dir ") and icontains(Process.CommandLine, "\\Users\\") and not icontains(Process.CommandLine, " rmdir ") or (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe")) and icontains(Process.CommandLine, "user") and not (icontains(Process.CommandLine, "/domain") or icontains(Process.CommandLine, "/add") or icontains(Process.CommandLine, "/delete") or icontains(Process.CommandLine, "/active") or icontains(Process.CommandLine, "/expires") or icontains(Process.CommandLine, "/passwordreq") or icontains(Process.CommandLine, "/scriptpath") or icontains(Process.CommandLine, "/times") or icontains(Process.CommandLine, "/workstations")) or iendswith(Process.Path, "\\whoami.exe") or iendswith(Process.Path, "\\quser.exe") or iendswith(Process.Path, "\\qwinsta.exe") or iendswith(Process.Path, "\\wmic.exe") and icontains(Process.CommandLine, "useraccount") and icontains(Process.CommandLine, "get") or iendswith(Process.Path, "\\cmdkey.exe") and icontains(Process.CommandLine, " /l")


[ActivityMonitoringRule]
# Detects a non-browser process communicating with the Notion API. This could indicate potential use of a covert C2 channel such as "OffensiveNotion C2"
# Author: Gavin Knapp
RuleId = 7e9cf7b6-e827-11ed-a05b-15959c120003
RuleName = Potentially Suspicious Network Connection To Notion API
EventType = Net.Any
Tag = potentially-suspicious-network-connection-to-notion-api
RiskScore = 25
Annotation = {"mitre_attack": ["T1102"]}
Query = icontains(Net.Target.Name, "api.notion.com") and not (iendswith(Process.Path, "\\AppData\\Local\\Programs\\Notion\\Notion.exe") or iendswith(Process.Path, "\\brave.exe") or Process.Path in ["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"] or Process.Path in ["C:\\Program Files\\Mozilla Firefox\\firefox.exe", "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"] or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or iendswith(Process.Path, "\\maxthon.exe") or istartswith(Process.Path, "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\") or iendswith(Process.Path, "\\WindowsApps\\MicrosoftEdge.exe") or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (istartswith(Process.Path, "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\") or istartswith(Process.Path, "C:\\Program Files\\Microsoft\\EdgeCore\\")) and (iendswith(Process.Path, "\\msedge.exe") or iendswith(Process.Path, "\\msedgewebview2.exe")) or iendswith(Process.Path, "\\opera.exe") or iendswith(Process.Path, "\\safari.exe") or iendswith(Process.Path, "\\seamonkey.exe") or iendswith(Process.Path, "\\vivaldi.exe") or iendswith(Process.Path, "\\whale.exe"))
GenericProperty1 = Net.Target.Name


[ActivityMonitoringRule]
# Detects the creation of a process from Windows task manager
# Author: Florian Roth (Nextron Systems)
RuleId = 3d7679bd-0c00-440c-97b0-3f204273e6c7
RuleName = Taskmgr as Parent
EventType = Process.Start
Tag = proc-start-taskmgr-as-parent
RiskScore = 25
Annotation = {"mitre_attack": ["T1036"]}
Query = iendswith(Parent.Path, "\\taskmgr.exe") and not (iendswith(Process.Path, "\\resmon.exe") or iendswith(Process.Path, "\\mmc.exe") or iendswith(Process.Path, "\\taskmgr.exe"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects the creation of a new service using powershell.
# Author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community
RuleId = c02e96b7-c63a-4c47-bd83-4a9f74afcfb2
RuleName = New Service Creation Using PowerShell
EventType = Process.Start
Tag = proc-start-new-service-creation-using-powershell
RiskScore = 25
Annotation = {"mitre_attack": ["T1543.003"]}
Query = icontains(Process.CommandLine, "New-Service") and icontains(Process.CommandLine, "-BinaryPathName")


[ActivityMonitoringRule]
# Detects when a share is mounted using the "net.exe" utility
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f117933c-980c-4f78-b384-e3d838111165
RuleName = Windows Share Mount Via Net.EXE
EventType = Process.Start
Tag = proc-start-windows-share-mount-via-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1021.002"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and (icontains(Process.CommandLine, " use ") or icontains(Process.CommandLine, " \\\\"))


[ActivityMonitoringRule]
# Detects specific combinations of encoding methods in PowerShell via the commandline
# Author: Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton
RuleId = cdf05894-89e7-4ead-b2b0-0a5f97a90f2f
RuleName = Potential Encoded PowerShell Patterns In CommandLine
EventType = Process.Start
Tag = proc-start-potential-encoded-powershell-patterns-in-commandline
RiskScore = 25
Annotation = {"mitre_attack": ["T1027", "T1059.001"]}
Query = (iendswith(Process.Path, "\\powershell.exe") or iendswith(Process.Path, "\\pwsh.exe") or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and ((icontains(Process.CommandLine, "ToInt") or icontains(Process.CommandLine, "ToDecimal") or icontains(Process.CommandLine, "ToByte") or icontains(Process.CommandLine, "ToUint") or icontains(Process.CommandLine, "ToSingle") or icontains(Process.CommandLine, "ToSByte")) and (icontains(Process.CommandLine, "ToChar") or icontains(Process.CommandLine, "ToString") or icontains(Process.CommandLine, "String")) or icontains(Process.CommandLine, "char") and icontains(Process.CommandLine, "join") or icontains(Process.CommandLine, "split") and icontains(Process.CommandLine, "join"))


[ActivityMonitoringRule]
# Use of hostname to get information
# Author: frack113
RuleId = 7be5fb68-f9ef-476d-8b51-0256ebece19e
RuleName = Suspicious Execution of Hostname
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-hostname
RiskScore = 25
Annotation = {"mitre_attack": ["T1082"]}
Query = iendswith(Process.Path, "\\HOSTNAME.EXE")


[ActivityMonitoringRule]
# Detects changes to the AppInstaller (winget) admin settings. Such as enabling local manifest installations or disabling installer hash checks
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 6db5eaf9-88f7-4ed9-af7d-9ef2ad12f236
RuleName = Winget Admin Settings Modification
EventType = Reg.Any
Tag = winget-admin-settings-modification
RiskScore = 25
Query = iendswith(Process.Path, "\\winget.exe") and istartswith(Reg.Key.Target, "\\REGISTRY\\A\\") and iendswith(Reg.Key.Target, "\\LocalState\\admin_settings")
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Target


[ActivityMonitoringRule]
# Detects the execution of regini.exe which can be used to modify registry keys, the changes are imported from one or more text files.
# Author: Eli Salem, Sander Wiebing, oscd.community
RuleId = 5f60740a-f57b-4e76-82a1-15b6ff2cb134
RuleName = Registry Modification Via Regini.EXE
EventType = Process.Start
Tag = proc-start-registry-modification-via-regini.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1112"]}
Query = (iendswith(Process.Path, "\\regini.exe") or Process.Name == "REGINI.EXE") and not regex_match(Process.CommandLine, r":[^ \\\\]")


[ActivityMonitoringRule]
# Detect the usage of "DirLister.exe" a utility for quickly listing folder or drive contents. It was seen used by BlackCat ransomware to create a list of accessible directories and files.
# Author: frack113
RuleId = b4dc61f5-6cce-468e-a608-b48b469feaa2
RuleName = DirLister Execution
EventType = Process.Start
Tag = proc-start-dirlister-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1083"]}
Query = Process.Name == "DirLister.exe" or iendswith(Process.Path, "\\dirlister.exe")


[ActivityMonitoringRule]
# Detects a WMI modules being loaded by an uncommon process
# Author: Roberto Rodriguez @Cyb3rWard0g
RuleId = 671bb7e3-a020-4824-a00e-2ee5b55f385e
RuleName = WMI Module Loaded By Non Uncommon Process
EventType = Image.Load
Tag = wmi-module-loaded-by-non-uncommon-process
RiskScore = 25
Annotation = {"mitre_attack": ["T1047"]}
Query = (iendswith(Image.Path, "\\fastprox.dll") or iendswith(Image.Path, "\\wbemcomn.dll") or iendswith(Image.Path, "\\wbemprox.dll") or iendswith(Image.Path, "\\wbemsvc.dll") or iendswith(Image.Path, "\\WmiApRpl.dll") or iendswith(Image.Path, "\\wmiclnt.dll") or iendswith(Image.Path, "\\WMINet_Utils.dll") or iendswith(Image.Path, "\\wmiprov.dll") or iendswith(Image.Path, "\\wmiutils.dll")) and not (icontains(Process.Path, ":\\Microsoft\\Teams\\current\\Teams.exe") or icontains(Process.Path, ":\\Microsoft\\Teams\\Update.exe") or icontains(Process.Path, ":\\Windows\\explorer.exe") or icontains(Process.Path, ":\\Windows\\Sysmon.exe") or icontains(Process.Path, ":\\Windows\\Sysmon64.exe") or icontains(Process.Path, ":\\Windows\\System32\\") or icontains(Process.Path, ":\\Windows\\SysWOW64\\")) and not (iendswith(Process.Path, "\\WindowsAzureGuestAgent.exe") or iendswith(Process.Path, "\\WaAppAgent.exe") or iendswith(Process.Path, "\\thor.exe") or iendswith(Process.Path, "\\thor64.exe") or iendswith(Process.Path, "\\MsMpEng.exe") or (icontains(Process.Path, ":\\Windows\\Microsoft.NET\\Framework\\") or icontains(Process.Path, ":\\Windows\\Microsoft.NET\\Framework64\\")) and iendswith(Process.Path, "\\ngentask.exe") or icontains(Process.Path, ":\\Program Files\\") or icontains(Process.Path, ":\\Program Files (x86)\\"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule]
# Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.
# Author: frack113
RuleId = 1c67a717-32ba-409b-a45d-0fb704a73a81
RuleName = System Network Connections Discovery Via Net.EXE
EventType = Process.Start
Tag = proc-start-system-network-connections-discovery-via-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1049"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and (iendswith(Process.CommandLine, " use") or iendswith(Process.CommandLine, " sessions") or icontains(Process.CommandLine, " use ") or icontains(Process.CommandLine, " sessions "))


[ActivityMonitoringRule]
# This tool enables enumeration and exporting of all DNS records in the zone for recon purposes of internal networks Python 3 and python.exe must be installed,
# Usee to Query/modify DNS records for Active Directory integrated DNS via LDAP
# Author: frack113
RuleId = 26d3f0a2-f514-4a3f-a8a7-e7e48a8d9160
RuleName = PUA - Adidnsdump Execution
EventType = Process.Start
Tag = proc-start-pua-adidnsdump-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1018"]}
Query = iendswith(Process.Path, "\\python.exe") and icontains(Process.CommandLine, "adidnsdump")


[ActivityMonitoringRule]
# Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces
# Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
# Author: Agro (@agro_sev) oscd.community
RuleId = 634b00d5-ccc3-4a06-ae3b-0ec8444dd51b
RuleName = Malicious Windows Script Components File Execution by TAEF Detection
EventType = Process.Start
Tag = proc-start-malicious-windows-script-components-file-execution-by-taef-detection
RiskScore = 25
Annotation = {"mitre_attack": ["T1218"]}
Query = iendswith(Process.Path, "\\te.exe") or iendswith(Parent.Path, "\\te.exe") or Process.Name == "\\te.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects the creation of scheduled tasks in user session
# Author: Florian Roth (Nextron Systems)
RuleId = 92626ddd-662c-49e3-ac59-f6535f12d189
RuleName = Scheduled Task Creation
EventType = Process.Start
Tag = proc-start-scheduled-task-creation
RiskScore = 25
Annotation = {"mitre_attack": ["T1053.005"]}
Query = iendswith(Process.Path, "\\schtasks.exe") and icontains(Process.CommandLine, " /create ") and not (icontains(Process.User, "AUTHORI") or icontains(Process.User, "AUTORI"))
GenericProperty1 = Process.User


[ActivityMonitoringRule]
# Detects the stopping of a Windows service
# Author: Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 81bcb81b-5b1f-474b-b373-52c871aaa7b1
RuleName = Stop Windows Service Via Sc.EXE
EventType = Process.Start
Tag = proc-start-stop-windows-service-via-sc.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1489"]}
Query = (Process.Name == "sc.exe" or iendswith(Process.Path, "\\sc.exe")) and icontains(Process.CommandLine, " stop ") and not ((Process.CommandLine in ["sc  stop KSCWebConsoleMessageQueue", "sc  stop LGHUBUpdaterService"]) and (icontains(Process.User, "AUTHORI") or icontains(Process.User, "AUTORI")))
GenericProperty1 = Process.User


[ActivityMonitoringRule]
# Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.
# An attacker can use this to authenticate to Azure AD in a browser as that user.
# Author: Den Iuzvyk
RuleId = 50f852e6-af22-4c78-9ede-42ef36aa3453
RuleName = Potential Azure Browser SSO Abuse
EventType = Image.Load
Tag = potential-azure-browser-sso-abuse
RiskScore = 25
Annotation = {"mitre_attack": ["T1574.002"]}
Query = Image.Path == "C:\\Windows\\System32\\MicrosoftAccountTokenProvider.dll" and not ((istartswith(Process.Path, "C:\\Windows\\System32\\") or istartswith(Process.Path, "C:\\Windows\\SysWOW64\\")) and iendswith(Process.Path, "\\BackgroundTaskHost.exe")) and not ((istartswith(Process.Path, "C:\\Program Files\\Microsoft Visual Studio\\") or istartswith(Process.Path, "C:\\Program Files (x86)\\Microsoft Visual Studio\\")) and iendswith(Process.Path, "\\IDE\\devenv.exe") or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or istartswith(Process.Path, "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\") or iendswith(Process.Path, "\\WindowsApps\\MicrosoftEdge.exe") or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (istartswith(Process.Path, "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\") or istartswith(Process.Path, "C:\\Program Files\\Microsoft\\EdgeCore\\")) and (iendswith(Process.Path, "\\msedge.exe") or iendswith(Process.Path, "\\msedgewebview2.exe")) or iendswith(Process.Path, "\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe") or isnull(Process.Path))
GenericProperty1 = Image.Path


[ActivityMonitoringRule]
# Detects the stopping of a Windows service
# Author: Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 88872991-7445-4a22-90b2-a3adadb0e827
RuleName = Stop Windows Service Via Net.EXE
EventType = Process.Start
Tag = proc-start-stop-windows-service-via-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1489"]}
Query = (Process.Name in ["net.exe", "net1.exe"] or iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe")) and icontains(Process.CommandLine, " stop ")


[ActivityMonitoringRule]
# Detect suspicious parent processes of well-known Windows processes
# Author: vburov
RuleId = 96036718-71cc-4027-a538-d1587e0006a7
RuleName = Windows Processes Suspicious Parent Directory
EventType = Process.Start
Tag = proc-start-windows-processes-suspicious-parent-directory
RiskScore = 25
Annotation = {"mitre_attack": ["T1036.003", "T1036.005"]}
Query = (iendswith(Process.Path, "\\svchost.exe") or iendswith(Process.Path, "\\taskhost.exe") or iendswith(Process.Path, "\\lsm.exe") or iendswith(Process.Path, "\\lsass.exe") or iendswith(Process.Path, "\\services.exe") or iendswith(Process.Path, "\\lsaiso.exe") or iendswith(Process.Path, "\\csrss.exe") or iendswith(Process.Path, "\\wininit.exe") or iendswith(Process.Path, "\\winlogon.exe")) and not (iendswith(Parent.Path, "\\SavService.exe") or iendswith(Parent.Path, "\\ngen.exe") or icontains(Parent.Path, "\\System32\\") or icontains(Parent.Path, "\\SysWOW64\\") or (icontains(Parent.Path, "\\Windows Defender\\") or icontains(Parent.Path, "\\Microsoft Security Client\\")) and iendswith(Parent.Path, "\\MsMpEng.exe") or isnull(Parent.Path) or Parent.Path == "-")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems
# Author: frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'
RuleId = 0e4164da-94bc-450d-a7be-a4b176179f1f
RuleName = Suspicious Firewall Configuration Discovery Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-suspicious-firewall-configuration-discovery-via-netsh.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1016"]}
Query = (iendswith(Process.Path, "\\netsh.exe") or Process.Name == "netsh.exe") and icontains(Process.CommandLine, "netsh ") and icontains(Process.CommandLine, "show ") and icontains(Process.CommandLine, "firewall ") and (icontains(Process.CommandLine, "config ") or icontains(Process.CommandLine, "state ") or icontains(Process.CommandLine, "rule ") or icontains(Process.CommandLine, "name=all"))


[ActivityMonitoringRule]
# Detects the usage of the "net.exe" command to start a service using the "start" flag
# Author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community
RuleId = 2a072a96-a086-49fa-bcb5-15cc5a619093
RuleName = Start Windows Service Via Net.EXE
EventType = Process.Start
Tag = proc-start-start-windows-service-via-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1569.002"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and icontains(Process.CommandLine, " start ")


[ActivityMonitoringRule]
# Detects command lines that contain the 'accepteula' flag which could be a sign of execution of one of the Sysinternals tools
# Author: Markus Neis
RuleId = 7cccd811-7ae9-4ebe-9afd-cb5c406b824b
RuleName = Potential Execution of Sysinternals Tools
EventType = Process.Start
Tag = proc-start-potential-execution-of-sysinternals-tools
RiskScore = 25
Annotation = {"mitre_attack": ["T1588.002"]}
Query = icontains(Process.CommandLine, " -accepteula") or icontains(Process.CommandLine, " /accepteula")


[ActivityMonitoringRule]
# Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation
# Author: oscd.community, @redcanary, Zach Stanford @svch0st
RuleId = cb7c4a03-2871-43c0-9bbb-18bbdb079896
RuleName = Unmount Share Via Net.EXE
EventType = Process.Start
Tag = proc-start-unmount-share-via-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1070.005"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and icontains(Process.CommandLine, "share") and icontains(Process.CommandLine, "/delete")


[ActivityMonitoringRule]
# Detects execution of findstr with the "s" and "i" flags for a "subfolder" and "insensitive" search respectively. Attackers sometimes leverage this built-in utility to search the system for interesting files or filter through results of commands.
# Author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali (Nextron Systems)
RuleId = 04936b66-3915-43ad-a8e5-809eadfd1141
RuleName = Insensitive Subfolder Search Via Findstr.EXE
EventType = Process.Start
Tag = proc-start-insensitive-subfolder-search-via-findstr.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1218", "T1564.004", "T1552.001", "T1105"]}
Query = (icontains(Process.CommandLine, "findstr") or iendswith(Process.Path, "findstr.exe") or Process.Name == "FINDSTR.EXE") and (icontains(Process.CommandLine, " /s ") or icontains(Process.CommandLine, " -s ")) and (icontains(Process.CommandLine, " /i ") or icontains(Process.CommandLine, " -i "))


[ActivityMonitoringRule]
# Detect indirect command execution via Program Compatibility Assistant pcwrun.exe
# Author: A. Sungurov , oscd.community
RuleId = b97cd4b1-30b8-4a9d-bd72-6293928d52bc
RuleName = Indirect Command Execution By Program Compatibility Wizard
EventType = Process.Start
Tag = proc-start-indirect-command-execution-by-program-compatibility-wizard
RiskScore = 25
Annotation = {"mitre_attack": ["T1218"]}
Query = iendswith(Parent.Path, "\\pcwrun.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.
# Author: E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community
RuleId = b243b280-65fe-48df-ba07-6ddea7646427
RuleName = Discovery of a System Time
EventType = Process.Start
Tag = proc-start-discovery-of-a-system-time
RiskScore = 25
Annotation = {"mitre_attack": ["T1124"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe")) and icontains(Process.CommandLine, "time") or iendswith(Process.Path, "\\w32tm.exe") and icontains(Process.CommandLine, "tz")


[ActivityMonitoringRule]
# Detects DNS server discovery via LDAP query requests from uncommon applications
# Author: frack113
RuleId = a21bcd7e-38ec-49ad-b69a-9ea17e69509e
RuleName = DNS Server Discovery Via LDAP Query
EventType = Dns.Query
Tag = dns-server-discovery-via-ldap-query
RiskScore = 25
Annotation = {"mitre_attack": ["T1482"]}
Query = istartswith(Dns.QueryRequest, "_ldap.") and not (icontains(Process.Path, ":\\Program Files\\") or icontains(Process.Path, ":\\Program Files (x86)\\") or icontains(Process.Path, ":\\Windows\\") or icontains(Process.Path, ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\") and iendswith(Process.Path, "\\MsMpEng.exe") or Process.Path == "<unknown process>" or isnull(Process.Path)) and not (istartswith(Process.Path, "C:\\WindowsAzure\\GuestAgent") or iendswith(Process.Path, "\\chrome.exe") or iendswith(Process.Path, "\\firefox.exe") or iendswith(Process.Path, "\\opera.exe"))
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule]
# Attackers may leverage fsutil to enumerated connected drives.
# Author: Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'
RuleId = 63de06b9-a385-40b5-8b32-73f2b9ef84b6
RuleName = Fsutil Drive Enumeration
EventType = Process.Start
Tag = proc-start-fsutil-drive-enumeration
RiskScore = 25
Annotation = {"mitre_attack": ["T1120"]}
Query = (iendswith(Process.Path, "\\fsutil.exe") or Process.Name == "fsutil.exe") and icontains(Process.CommandLine, "drives")


[ActivityMonitoringRule]
# Detects the creation of a new service using the "sc.exe" utility.
# Author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community
RuleId = 85ff530b-261d-48c6-a441-facaa2e81e48
RuleName = New Service Creation Using Sc.EXE
EventType = Process.Start
Tag = proc-start-new-service-creation-using-sc.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1543.003"]}
Query = iendswith(Process.Path, "\\sc.exe") and icontains(Process.CommandLine, "create") and icontains(Process.CommandLine, "binPath")


[ActivityMonitoringRule]
# Detects usage of the "systeminfo" command to retrieve information
# Author: frack113
RuleId = 0ef56343-059e-4cb6-adc1-4c3c967c5e46
RuleName = Suspicious Execution of Systeminfo
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-systeminfo
RiskScore = 25
Annotation = {"mitre_attack": ["T1082"]}
Query = iendswith(Process.Path, "\\systeminfo.exe") or Process.Name == "sysinfo.exe"


[ActivityMonitoringRule]
# Detects the export of the target Registry key to a file.
# Author: Oddvar Moe, Sander Wiebing, oscd.community
RuleId = f0e53e89-8d22-46ea-9db5-9d4796ee2f8a
RuleName = Exports Registry Key To a File
EventType = Process.Start
Tag = proc-start-exports-registry-key-to-a-file
RiskScore = 25
Annotation = {"mitre_attack": ["T1012"]}
Query = (iendswith(Process.Path, "\\regedit.exe") or Process.Name == "REGEDIT.EXE") and (icontains(Process.CommandLine, " /E ") or icontains(Process.CommandLine, " -E ")) and not ((icontains(Process.CommandLine, "hklm") or icontains(Process.CommandLine, "hkey_local_machine")) and (iendswith(Process.CommandLine, "\\system") or iendswith(Process.CommandLine, "\\sam") or iendswith(Process.CommandLine, "\\security")))


[ActivityMonitoringRule]
# Detects usage of the "dir" command that is part of Windows batch/cmd to collect information about directories
# Author: frack113
RuleId = 7c9340a9-e2ee-4e43-94c5-c54ebbea1006
RuleName = Files And Subdirectories Listing Using Dir
EventType = Process.Start
Tag = proc-start-files-and-subdirectories-listing-using-dir
RiskScore = 25
Annotation = {"mitre_attack": ["T1217"]}
Query = icontains(Process.CommandLine, "dir ") and icontains(Process.CommandLine, " /s") and icontains(Process.CommandLine, " /b")


[ActivityMonitoringRule]
# Detects potential DLL sideloading of "7za.dll"
# Author: X__Junior
RuleId = 4f6edb78-5c21-42ab-a558-fd2a6fc1fd57
RuleName = Potential 7za.DLL Sideloading
EventType = Image.Load
Tag = potential-7za.dll-sideloading
RiskScore = 25
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"]}
Query = iendswith(Image.Path, "\\7za.dll") and not ((istartswith(Process.Path, "C:\\Program Files (x86)\\") or istartswith(Process.Path, "C:\\Program Files\\")) and (istartswith(Image.Path, "C:\\Program Files (x86)\\") or istartswith(Image.Path, "C:\\Program Files\\")))
GenericProperty1 = Image.Path


[ActivityMonitoringRule]
# Detects non-interactive PowerShell activity by looking at the "powershell" process with a non-user GUI process such as "explorer.exe" as a parent.
# Author: Roberto Rodriguez @Cyb3rWard0g (rule), oscd.community (improvements)
RuleId = f4bbd493-b796-416e-bbf2-121235348529
RuleName = Non Interactive PowerShell Process Spawned
EventType = Process.Start
Tag = proc-start-non-interactive-powershell-process-spawned
RiskScore = 25
Annotation = {"mitre_attack": ["T1059.001"]}
Query = (iendswith(Process.Path, "\\powershell.exe") or iendswith(Process.Path, "\\pwsh.exe") or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and not (iendswith(Parent.Path, ":\\Windows\\explorer.exe") or iendswith(Parent.Path, ":\\Windows\\System32\\CompatTelRunner.exe") or iendswith(Parent.Path, ":\\Windows\\SysWOW64\\explorer.exe") or Parent.Path == ":\\$WINDOWS.~BT\\Sources\\SetupHost.exe") and not (iendswith(Parent.Path, "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe") and icontains(Parent.CommandLine, " --ms-enable-electron-run-as-node ") or icontains(Parent.Path, ":\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal_") and iendswith(Parent.Path, "\\WindowsTerminal.exe"))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule]
# Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM.
# Author: Janantha Marasinghe
RuleId = bab049ca-7471-4828-9024-38279a4c04da
RuleName = Detect Virtualbox Driver Installation OR Starting Of VMs
EventType = Process.Start
Tag = proc-start-detect-virtualbox-driver-installation-or-starting-of-vms
RiskScore = 25
Annotation = {"mitre_attack": ["T1564.006", "T1564"]}
Query = icontains(Process.CommandLine, "VBoxRT.dll,RTR3Init") or icontains(Process.CommandLine, "VBoxC.dll") or icontains(Process.CommandLine, "VBoxDrv.sys") or icontains(Process.CommandLine, "startvm") or icontains(Process.CommandLine, "controlvm")


[ActivityMonitoringRule]
# Detects the use of the redirection character ">" to redicrect information in commandline
# Author: frack113
RuleId = 4f4eaa9f-5ad4-410c-a4be-bc6132b0175a
RuleName = CMD Shell Output Redirect
EventType = Process.Start
Tag = proc-start-cmd-shell-output-redirect
RiskScore = 25
Annotation = {"mitre_attack": ["T1082"]}
Query = (Process.Name == "Cmd.Exe" or iendswith(Process.Path, "\\cmd.exe")) and icontains(Process.CommandLine, ">") and not (icontains(Process.CommandLine, "C:\\Program Files (x86)\\Internet Download Manager\\IDMMsgHost.exe") or icontains(Process.CommandLine, "chrome-extension://") or icontains(Process.CommandLine, "\\.\\pipe\\chrome.nativeMessaging"))


[ActivityMonitoringRule]
# Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
# Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
# internal network resources such as servers, tools/dashboards, or other related infrastructure.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 725a9768-0f5e-4cb3-aec2-bc5719c6831a
RuleName = Suspicious Where Execution
EventType = Process.Start
Tag = proc-start-suspicious-where-execution
RiskScore = 25
Annotation = {"mitre_attack": ["T1217"]}
Query = (iendswith(Process.Path, "\\where.exe") or Process.Name == "where.exe") and (icontains(Process.CommandLine, "places.sqlite") or icontains(Process.CommandLine, "cookies.sqlite") or icontains(Process.CommandLine, "formhistory.sqlite") or icontains(Process.CommandLine, "logins.json") or icontains(Process.CommandLine, "key4.db") or icontains(Process.CommandLine, "key3.db") or icontains(Process.CommandLine, "sessionstore.jsonlz4") or icontains(Process.CommandLine, "History") or icontains(Process.CommandLine, "Bookmarks") or icontains(Process.CommandLine, "Cookies") or icontains(Process.CommandLine, "Login Data"))


[ActivityMonitoringRule]
# Detects loading of Amsi.dll by uncommon processes
# Author: frack113
RuleId = facd1549-e416-48e0-b8c4-41d7215eedc8
RuleName = Amsi.DLL Load By Uncommon Process
EventType = Image.Load
Tag = amsi.dll-load-by-uncommon-process
RiskScore = 25
Annotation = {"mitre_attack": ["T1490"]}
Query = iendswith(Image.Path, "\\amsi.dll") and not (Process.Path in ["C:\\Windows\\explorer.exe", "C:\\Windows\\Sysmon64.exe"] or istartswith(Process.Path, "C:\\Program Files (x86)\\") or istartswith(Process.Path, "C:\\Program Files\\") or istartswith(Process.Path, "C:\\Windows\\System32\\") or istartswith(Process.Path, "C:\\Windows\\SysWOW64\\") or istartswith(Process.Path, "C:\\Windows\\WinSxS\\") or istartswith(Process.Path, "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\") and iendswith(Process.Path, "\\MsMpEng.exe") or (istartswith(Process.Path, "C:\\Windows\\Microsoft.NET\\Framework\\") or istartswith(Process.Path, "C:\\Windows\\Microsoft.NET\\Framework64\\")) and iendswith(Process.Path, "\\ngentask.exe") or isnull(Process.Path) or Process.Path == "")
GenericProperty1 = Image.Path


[ActivityMonitoringRule]
# Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems
# Author: frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'
RuleId = a29c1813-ab1f-4dde-b489-330b952e91ae
RuleName = Suspicious Network Command
EventType = Process.Start
Tag = proc-start-suspicious-network-command
RiskScore = 25
Annotation = {"mitre_attack": ["T1016"]}
Query = icontains(Process.CommandLine, "ipconfig /all") or icontains(Process.CommandLine, "netsh interface show interface") or icontains(Process.CommandLine, "arp -a") or icontains(Process.CommandLine, "nbtstat -n") or icontains(Process.CommandLine, "net config") or icontains(Process.CommandLine, "route print")


[ActivityMonitoringRule]
# Detects attempts to enumerate file shares, printer shares and sessions using "net.exe" with the "view" flag.
# Author: Endgame, JHasenbusch (ported for oscd.community)
RuleId = 62510e69-616b-4078-b371-847da438cc03
RuleName = Share And Session Enumeration Using Net.EXE
EventType = Process.Start
Tag = proc-start-share-and-session-enumeration-using-net.exe
RiskScore = 25
Annotation = {"mitre_attack": ["T1018"]}
Query = (iendswith(Process.Path, "\\net.exe") or iendswith(Process.Path, "\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and icontains(Process.CommandLine, "view") and not icontains(Process.CommandLine, "\\\\")


[ActivityMonitoringRule]
# Detects DNS queries to "ufile.io", which was seen abused by malware and threat actors as a method for data exfiltration
# Author: yatinwad, TheDFIRReport
RuleId = 1cbbeaaf-3c8c-4e4c-9d72-49485b6a176b
RuleName = DNS Query To Ufile.io
EventType = Dns.Query
Tag = dns-query-to-ufile.io
RiskScore = 25
Annotation = {"mitre_attack": ["T1567.002"]}
Query = icontains(Dns.QueryRequest, "ufile.io")
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule]
# Use of reg to get MachineGuid information
# Author: frack113
RuleId = f5240972-3938-4e56-8e4b-e33893176c1f
RuleName = Suspicious Query of MachineGUID
EventType = Process.Start
Tag = proc-start-suspicious-query-of-machineguid
RiskScore = 25
Annotation = {"mitre_attack": ["T1082"]}
Query = iendswith(Process.Path, "\\reg.exe") and icontains(Process.CommandLine, "SOFTWARE\\Microsoft\\Cryptography") and icontains(Process.CommandLine, "/v ") and icontains(Process.CommandLine, "MachineGuid")

