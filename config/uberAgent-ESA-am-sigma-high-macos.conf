
#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# To generate the ruleset, please follow the instructions provided in the repository: https://github.com/vastlimits/pySigma-backend-uberAgent/
#
# The command used to generate the ruleset is:
#    sigma convert -s -f conf -p uberagent-7.1.0 -t uberagent /home/runner/work/uberAgent-config/uberAgent-config/build/sigma-high-macos >> uberAgent-ESA-am-sigma-high-macos.conf
#

[ActivityMonitoringRule platform=MacOS]
# Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This rule detect using dd and truncate to add a junk data to file.
# Author: Igor Fits, Mikhail Larin, oscd.community
RuleId = 95361ce5-c891-4b0a-87ca-e24607884a96
RuleName = Binary Padding - MacOS
EventType = Process.Start
Tag = proc-start-binary-padding-macos
RiskScore = 75
Annotation = {"mitre_attack": ["T1027.001"]}
Query = iendswith(Process.Path, "/truncate") and icontains(Process.CommandLine, "-s +") or iendswith(Process.Path, "/dd") and (icontains(Process.CommandLine, "if=/dev/zero") or icontains(Process.CommandLine, "if=/dev/random") or icontains(Process.CommandLine, "if=/dev/urandom"))


[ActivityMonitoringRule platform=MacOS]
# Detects potential suspicious run-only executions compiled using OSACompile
# Author: Sohan G (D4rkCiph3r)
RuleId = b9d9b652-d8ed-4697-89a2-a1186ee680ac
RuleName = OSACompile Run-Only Execution
EventType = Process.Start
Tag = proc-start-osacompile-run-only-execution
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002"]}
Query = icontains(Process.CommandLine, "osacompile") and icontains(Process.CommandLine, " -x ") and icontains(Process.CommandLine, " -e ")


[ActivityMonitoringRule platform=MacOS]
# Detects possible collection of data from the clipboard via execution of the osascript binary
# Author: Sohan G (D4rkCiph3r)
RuleId = 7794fa3c-edea-4cff-bec7-267dd4770fd7
RuleName = Clipboard Data Collection Via OSAScript
EventType = Process.Start
Tag = proc-start-clipboard-data-collection-via-osascript
RiskScore = 75
Annotation = {"mitre_attack": ["T1115", "T1059.002"]}
Query = icontains(Process.CommandLine, "osascript") and icontains(Process.CommandLine, " -e ") and icontains(Process.CommandLine, "clipboard")


[ActivityMonitoringRule platform=MacOS]
# Detecting attempts to extract passwords with grep and laZagne
# Author: Igor Fits, Mikhail Larin, oscd.community
RuleId = 53b1b378-9b06-4992-b972-dde6e423d2b4
RuleName = Credentials In Files
EventType = Process.Start
Tag = proc-start-credentials-in-files
RiskScore = 75
Annotation = {"mitre_attack": ["T1552.001"]}
Query = iendswith(Process.Path, "/grep") and icontains(Process.CommandLine, "password") or icontains(Process.CommandLine, "laZagne")


[ActivityMonitoringRule platform=MacOS]
# Detects suspicious child processes spawning from microsoft office suite applications such as word or excel. This could indicates malicious macro execution
# Author: Sohan G (D4rkCiph3r)
RuleId = 69483748-1525-4a6c-95ca-90dc8d431b68
RuleName = Suspicious Microsoft Office Child Process - MacOS
EventType = Process.Start
Tag = proc-start-suspicious-microsoft-office-child-process-macos
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002", "T1137.002", "T1204.002"]}
Query = (icontains(Parent.Path, "Microsoft Word") or icontains(Parent.Path, "Microsoft Excel") or icontains(Parent.Path, "Microsoft PowerPoint") or icontains(Parent.Path, "Microsoft OneNote")) and (iendswith(Process.Path, "/bash") or iendswith(Process.Path, "/curl") or iendswith(Process.Path, "/dash") or iendswith(Process.Path, "/fish") or iendswith(Process.Path, "/osacompile") or iendswith(Process.Path, "/osascript") or iendswith(Process.Path, "/sh") or iendswith(Process.Path, "/zsh") or iendswith(Process.Path, "/python") or iendswith(Process.Path, "/python3") or iendswith(Process.Path, "/wget"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=MacOS]
# Detects possible malicious execution of JXA in-memory via OSAScript
# Author: Sohan G (D4rkCiph3r)
RuleId = f1408a58-0e94-4165-b80a-da9f96cf6fc3
RuleName = JXA In-memory Execution Via OSAScript
EventType = Process.Start
Tag = proc-start-jxa-in-memory-execution-via-osascript
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002", "T1059.007"]}
Query = icontains(Process.CommandLine, "osascript") and icontains(Process.CommandLine, " -e ") and icontains(Process.CommandLine, "eval") and icontains(Process.CommandLine, "NSData.dataWithContentsOfURL") and (icontains(Process.CommandLine, " -l ") and icontains(Process.CommandLine, "JavaScript") or icontains(Process.CommandLine, ".js"))


[ActivityMonitoringRule platform=MacOS]
# Detects the execution traces of the WizardUpdate malware. WizardUpdate is a macOS trojan that attempts to infiltrate macOS machines to steal data and it is associated with other types of malicious payloads, increasing the chances of multiple infections on a device.
# Author: Tim Rauch (rule), Elastic (idea)
RuleId = f68c4a4f-19ef-4817-952c-50dce331f4b0
RuleName = Potential WizardUpdate Malware Infection
EventType = Process.Start
Tag = proc-start-potential-wizardupdate-malware-infection
RiskScore = 75
Query = iendswith(Process.Path, "/sh") and icontains(Process.CommandLine, "=$(curl ") and icontains(Process.CommandLine, "eval") or iendswith(Process.Path, "/curl") and icontains(Process.CommandLine, "_intermediate_agent_")


[ActivityMonitoringRule platform=MacOS]
# Detects potential persistence activity using LaunchAgents or LaunchDaemons via the PlistBuddy utility
# Author: Sohan G (D4rkCiph3r)
RuleId = 65d506d3-fcfe-4071-b4b2-bcefe721bbbb
RuleName = Potential Persistence Via PlistBuddy
EventType = Process.Start
Tag = proc-start-potential-persistence-via-plistbuddy
RiskScore = 75
Annotation = {"mitre_attack": ["T1543.001", "T1543.004"]}
Query = iendswith(Process.Path, "/PlistBuddy") and icontains(Process.CommandLine, "RunAtLoad") and icontains(Process.CommandLine, "true") and (icontains(Process.CommandLine, "LaunchAgents") or icontains(Process.CommandLine, "LaunchDaemons"))

