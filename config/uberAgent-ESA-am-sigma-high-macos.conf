#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# Follow these steps to get the latest rules from the repository with Python
#    1. Clone the repository locally
#    2. Using a commandline, change working directory to the just cloned repository
#    3. Run sigmac -I --target uberagent -r rules/
#
# The rules in this file are marked with sigma-level: high
#

[ActivityMonitoringRule platform=MacOS]
# Detects possible malicious execution of JXA in-memory via OSAScript
# Author: Sohan G (D4rkCiph3r)
RuleId = f1408a58-0e94-4165-b80a-da9f96cf6fc3
RuleName = JXA In-memory Execution Via OSAScript
EventType = Process.Start
Tag = proc-start-jxa-in-memory-execution-via-osascript
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002", "T1059.007"]}
Query = ((Process.CommandLine like r"%osascript%" and Process.CommandLine like r"% -e %" and Process.CommandLine like r"%eval%" and Process.CommandLine like r"%NSData.dataWithContentsOfURL%") and ((Process.CommandLine like r"% -l %" and Process.CommandLine like r"%JavaScript%") or Process.CommandLine like r"%.js%"))

[ActivityMonitoringRule platform=MacOS]
# Detects possible collection of data from the clipboard via execution of the osascript binary
# Author: Sohan G (D4rkCiph3r)
RuleId = 7794fa3c-edea-4cff-bec7-267dd4770fd7
RuleName = Clipboard Data Collection Via OSAScript
EventType = Process.Start
Tag = proc-start-clipboard-data-collection-via-osascript
RiskScore = 75
Annotation = {"mitre_attack": ["T1115", "T1059.002"]}
Query = (Process.CommandLine like r"%osascript%" and Process.CommandLine like r"% -e %" and Process.CommandLine like r"%clipboard%")

[ActivityMonitoringRule platform=MacOS]
# Detects potential suspicious run-only executions compiled using OSACompile
# Author: Sohan G (D4rkCiph3r)
RuleId = b9d9b652-d8ed-4697-89a2-a1186ee680ac
RuleName = OSACompile Run-Only Execution
EventType = Process.Start
Tag = proc-start-osacompile-run-only-execution
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002"]}
Query = (Process.CommandLine like r"%osacompile%" and Process.CommandLine like r"% -x %" and Process.CommandLine like r"% -e %")

[ActivityMonitoringRule platform=MacOS]
# Detects potential persistence activity using LaunchAgents or LaunchDaemons via the PlistBuddy utility
# Author: Sohan G (D4rkCiph3r)
RuleId = 65d506d3-fcfe-4071-b4b2-bcefe721bbbb
RuleName = Potential Persistence Via PlistBuddy
EventType = Process.Start
Tag = proc-start-potential-persistence-via-plistbuddy
RiskScore = 75
Annotation = {"mitre_attack": ["T1543.001", "T1543.004"]}
Query = (Process.Path like r"%/PlistBuddy" and Process.CommandLine like r"%RunAtLoad%" and Process.CommandLine like r"%true%" and (Process.CommandLine like r"%LaunchAgents%" or Process.CommandLine like r"%LaunchDaemons%"))

[ActivityMonitoringRule platform=MacOS]
# Detecting attempts to extract passwords with grep and laZagne
# Author: Igor Fits, Mikhail Larin, oscd.community
RuleId = 53b1b378-9b06-4992-b972-dde6e423d2b4
RuleName = Credentials In Files
EventType = Process.Start
Tag = proc-start-credentials-in-files
RiskScore = 75
Annotation = {"mitre_attack": ["T1552.001"]}
Query = ((Process.Path like r"%/grep" and Process.CommandLine like r"%password%") or Process.CommandLine like r"%laZagne%")

[ActivityMonitoringRule platform=MacOS]
# Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This rule detect using dd and truncate to add a junk data to file.
# Author: Igor Fits, Mikhail Larin, oscd.community
RuleId = 95361ce5-c891-4b0a-87ca-e24607884a96
RuleName = Binary Padding - MacOS
EventType = Process.Start
Tag = proc-start-binary-padding-macos
RiskScore = 75
Annotation = {"mitre_attack": ["T1027.001"]}
Query = ((Process.Path like r"%/truncate" and Process.CommandLine like r"%-s +%") or (Process.Path like r"%/dd" and (Process.CommandLine like r"%if=/dev/zero%" or Process.CommandLine like r"%if=/dev/random%" or Process.CommandLine like r"%if=/dev/urandom%")))

[ActivityMonitoringRule platform=MacOS]
# Detects suspicious child processes spawning from microsoft office suite applications such as word or excel. This could indicates malicious macro execution
# Author: Sohan G (D4rkCiph3r)
RuleId = 69483748-1525-4a6c-95ca-90dc8d431b68
RuleName = Suspicious Microsoft Office Child Process - MacOS
EventType = Process.Start
Tag = proc-start-suspicious-microsoft-office-child-process-macos
RiskScore = 75
Annotation = {"mitre_attack": ["T1059.002", "T1137.002", "T1204.002"]}
Query = ((Parent.Path like r"%Microsoft Word%" or Parent.Path like r"%Microsoft Excel%" or Parent.Path like r"%Microsoft PowerPoint%" or Parent.Path like r"%Microsoft OneNote%") and (Process.Path like r"%/bash" or Process.Path like r"%/curl" or Process.Path like r"%/dash" or Process.Path like r"%/fish" or Process.Path like r"%/osacompile" or Process.Path like r"%/osascript" or Process.Path like r"%/sh" or Process.Path like r"%/zsh" or Process.Path like r"%/python" or Process.Path like r"%/python3" or Process.Path like r"%/wget"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule platform=MacOS]
# Detects the execution traces of the WizardUpdate malware. WizardUpdate is a macOS trojan that attempts to infiltrate macOS machines to steal data and it is associated with other types of malicious payloads, increasing the chances of multiple infections on a device.
# Author: Tim Rauch (rule), Elastic (idea)
RuleId = f68c4a4f-19ef-4817-952c-50dce331f4b0
RuleName = Potential WizardUpdate Malware Infection
EventType = Process.Start
Tag = proc-start-potential-wizardupdate-malware-infection
RiskScore = 75
Query = ((Process.Path like r"%/sh" and Process.CommandLine like r"%=$(curl %" and Process.CommandLine like r"%eval%") or (Process.Path like r"%/curl" and Process.CommandLine like r"%\_intermediate\_agent\_%"))

