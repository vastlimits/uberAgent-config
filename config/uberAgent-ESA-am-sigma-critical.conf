
#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# To generate the ruleset, please follow the instructions provided in the repository: https://github.com/vastlimits/pySigma-backend-uberAgent/
#
# The command used to generate the ruleset is:
#    sigma convert -s -f conf -p uberagent-7.0.0 -O backend_version=7.0.0 -t uberagent /home/runner/work/uberAgent-config/uberAgent-config/build/sigma-critical >> uberAgent-ESA-am-sigma-critical.conf
#

[ActivityMonitoringRule]
# Detects a WMI backdoor in Exchange Transport Agents via WMI event filters
# Author: Florian Roth (Nextron Systems)
RuleId = 797011dc-44f4-4e6f-9f10-a8ceefbe566b
RuleName = WMI Backdoor Exchange Transport Agent
EventType = Process.Start
Tag = proc-start-wmi-backdoor-exchange-transport-agent
RiskScore = 100
Annotation = {"mitre_attack": ["T1546.003"]}
Query = Parent.Path like r"%\\EdgeTransport.exe" and not (Process.Path == "C:\\Windows\\System32\\conhost.exe" or Process.Path like r"C:\\Program Files\\Microsoft\\Exchange Server\\%" and Process.Path like r"%\\Bin\\OleConverter.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns
# Author: Florian Roth (Nextron Systems), @blu3_team (idea), Nasreddine Bencherchali (Nextron Systems)
RuleId = 1cdd9a09-06c9-4769-99ff-626e2b3991b8
RuleName = Suspicious Double Extension File Execution
EventType = Process.Start
Tag = proc-start-suspicious-double-extension-file-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1566.001"]}
Query = (Process.Path like r"%.doc.exe" or Process.Path like r"%.docx.exe" or Process.Path like r"%.xls.exe" or Process.Path like r"%.xlsx.exe" or Process.Path like r"%.ppt.exe" or Process.Path like r"%.pptx.exe" or Process.Path like r"%.rtf.exe" or Process.Path like r"%.pdf.exe" or Process.Path like r"%.txt.exe" or Process.Path like r"%      .exe" or Process.Path like r"%\_\_\_\_\_\_.exe" or Process.Path like r"%.doc.js" or Process.Path like r"%.docx.js" or Process.Path like r"%.xls.js" or Process.Path like r"%.xlsx.js" or Process.Path like r"%.ppt.js" or Process.Path like r"%.pptx.js" or Process.Path like r"%.rtf.js" or Process.Path like r"%.pdf.js" or Process.Path like r"%.txt.js") and (Process.CommandLine like r"%.doc.exe%" or Process.CommandLine like r"%.docx.exe%" or Process.CommandLine like r"%.xls.exe%" or Process.CommandLine like r"%.xlsx.exe%" or Process.CommandLine like r"%.ppt.exe%" or Process.CommandLine like r"%.pptx.exe%" or Process.CommandLine like r"%.rtf.exe%" or Process.CommandLine like r"%.pdf.exe%" or Process.CommandLine like r"%.txt.exe%" or Process.CommandLine like r"%      .exe%" or Process.CommandLine like r"%\_\_\_\_\_\_.exe%" or Process.CommandLine like r"%.doc.js%" or Process.CommandLine like r"%.docx.js%" or Process.CommandLine like r"%.xls.js%" or Process.CommandLine like r"%.xlsx.js%" or Process.CommandLine like r"%.ppt.js%" or Process.CommandLine like r"%.pptx.js%" or Process.CommandLine like r"%.rtf.js%" or Process.CommandLine like r"%.pdf.js%" or Process.CommandLine like r"%.txt.js%")


[ActivityMonitoringRule]
# Detects some Empire PowerShell UAC bypass methods
# Author: Ecco
RuleId = 3268b746-88d8-4cd3-bffc-30077d02c787
RuleName = HackTool - Empire PowerShell UAC Bypass
EventType = Process.Start
Tag = proc-start-hacktool-empire-powershell-uac-bypass
RiskScore = 100
Annotation = {"mitre_attack": ["T1548.002"]}
Query = Process.CommandLine like r"% -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)%" or Process.CommandLine like r"% -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);%"


[ActivityMonitoringRule]
# Detects a suspicious LSASS process process clone that could be a sign of credential dumping activity
# Author: Florian Roth (Nextron Systems), Samir Bousseaden
RuleId = c8da0dfd-4ed0-4b68-962d-13c9c884384e
RuleName = Potential Credential Dumping Via LSASS Process Clone
EventType = Process.Start
Tag = proc-start-potential-credential-dumping-via-lsass-process-clone
RiskScore = 100
Annotation = {"mitre_attack": ["T1003", "T1003.001"]}
Query = Parent.Path like r"%\\Windows\\System32\\lsass.exe" and Process.Path like r"%\\Windows\\System32\\lsass.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects the execution of the PoC that can be used to exploit Sysmon CVE-2022-41120
# Author: Florian Roth (Nextron Systems)
RuleId = 8a7e90c5-fe6e-45dc-889e-057fe4378bd9
RuleName = HackTool - SysmonEOP Execution
EventType = Process.Start
Tag = proc-start-hacktool-sysmoneop-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1068"]}
Query = Process.Path like r"%\\SysmonEOP.exe" or Process.Hashes like r"%IMPHASH=22F4089EB8ABA31E1BB162C6D9BF72E5%" or Process.Hashes like r"%IMPHASH=5123FA4C4384D431CD0D893EEB49BBEC%" or Process.Hash.IMP in ["22f4089eb8aba31e1bb162c6d9bf72e5", "5123fa4c4384d431cd0d893eeb49bbec"]
GenericProperty1 = Process.Hash.IMP
GenericProperty2 = Process.Hashes


[ActivityMonitoringRule]
# Detects indicators of a UAC bypass method by mocking directories
# Author: Florian Roth (Nextron Systems)
RuleId = 4ac47ed3-44c2-4b1f-9d51-bf46e8914126
RuleName = TrustedPath UAC Bypass Pattern
EventType = Process.Start
Tag = proc-start-trustedpath-uac-bypass-pattern
RiskScore = 100
Annotation = {"mitre_attack": ["T1548.002"]}
Query = Process.Path like r"%C:\\Windows \\System32\\%"


[ActivityMonitoringRule]
# Detects usage of the powerShell New-MailboxExportRequest Cmdlet to exports a mailbox to a remote or local share, as used in ProxyShell exploitations
# Author: Florian Roth (Nextron Systems)
RuleId = 889719ef-dd62-43df-86c3-768fb08dc7c0
RuleName = Suspicious PowerShell Mailbox Export to Share
EventType = Process.Start
Tag = proc-start-suspicious-powershell-mailbox-export-to-share
RiskScore = 100
Query = Process.CommandLine like r"%New-MailboxExportRequest%" and Process.CommandLine like r"% -Mailbox %" and Process.CommandLine like r"% -FilePath \\\\%"


[ActivityMonitoringRule]
# Detects potential DLL hijack of "iertutil.dll" found in the DCOM InternetExplorer.Application Class
# Author: Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR), wagga
RuleId = f354eba5-623b-450f-b073-0b5b2773b6aa
RuleName = Potential DCOM InternetExplorer.Application DLL Hijack - Image Load
EventType = Image.Load
Tag = potential-dcom-internetexplorer.application-dll-hijack-image-load
RiskScore = 100
Annotation = {"mitre_attack": ["T1021.002", "T1021.003"]}
Query = Process.Path like r"%\\Internet Explorer\\iexplore.exe" and Image.Path like r"%\\Internet Explorer\\iertutil.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule]
# Detects the execution of SecurityXploded Tools
# Author: Florian Roth (Nextron Systems)
RuleId = 7679d464-4f74-45e2-9e01-ac66c5eb041a
RuleName = HackTool - SecurityXploded Execution
EventType = Process.Start
Tag = proc-start-hacktool-securityxploded-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1555"]}
Query = Process.Company == "SecurityXploded" or Process.Path like r"%PasswordDump.exe" or Process.Name like r"%PasswordDump.exe"
GenericProperty1 = Process.Company


[ActivityMonitoringRule]
# Detects process activity patterns as seen being used by Sliver C2 framework implants
# Author: Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)
RuleId = 42333b2c-b425-441c-b70e-99404a17170f
RuleName = HackTool - Sliver C2 Implant Activity Pattern
EventType = Process.Start
Tag = proc-start-hacktool-sliver-c2-implant-activity-pattern
RiskScore = 100
Annotation = {"mitre_attack": ["T1059"]}
Query = Process.CommandLine like r"%-NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8%"


[ActivityMonitoringRule]
# Detects the execution of different Windows based hacktools via their import hash (imphash) even if the files have been renamed
# Author: Florian Roth (Nextron Systems)
RuleId = 24e3e58a-646b-4b50-adef-02ef935b9fc8
RuleName = Hacktool Execution - Imphash
EventType = Process.Start
Tag = proc-start-hacktool-execution-imphash
RiskScore = 100
Annotation = {"mitre_attack": ["T1588.002", "T1003"]}
Query = Process.Hash.IMP in ["bcca3c247b619dcd13c8cdff5f123932", "3a19059bd7688cb88e70005f18efc439", "bf6223a49e45d99094406777eb6004ba", "23867a89c2b8fc733be6cf5ef902f2d1", "a37ff327f8d48e8a4d2f757e1b6e70bc", "f9a28c458284584a93b14216308d31bd", "6118619783fc175bc7ebecff0769b46e", "959a83047e80ab68b368fdb3f4c6e4ea", "563233bfa169acc7892451f71ad5850a", "87575cb7a0e0700eb37f2e3668671a08", "13f08707f759af6003837a150a371ba1", "1781f06048a7e58b323f0b9259be798b", "233f85f2d4bc9d6521a6caae11a1e7f5", "24af2584cbf4d60bbe5c6d1b31b3be6d", "632969ddf6dbf4e0f53424b75e4b91f2", "713c29b396b907ed71a72482759ed757", "749a7bb1f0b4c4455949c0b2bf7f9e9f", "8628b2608957a6b0c6330ac3de28ce2e", "8b114550386e31895dfab371e741123d", "94cb940a1a6b65bed4d5a8f849ce9793", "9d68781980370e00e0bd939ee5e6c141", "b18a1401ff8f444056d29450fbc0a6ce", "cb567f9498452721d77a451374955f5f", "730073214094cd328547bf1f72289752", "17b461a082950fc6332228572138b80c", "dc25ee78e2ef4d36faa0badf1e7461c9", "819b19d53ca6736448f9325a85736792", "829da329ce140d873b4a8bde2cbfaa7e", "c547f2e66061a8dffb6f5a3ff63c0a74", "0588081ab0e63ba785938467e1b10cca", "0d9ec08bac6c07d9987dfd0f1506587c", "bc129092b71c89b4d4c8cdf8ea590b29", "4da924cf622d039d58bce71cdf05d242", "e7a3a5c377e2d29324093377d7db1c66", "9a9dbec5c62f0380b4fa5fd31deffedf", "af8a3976ad71e5d5fdfb67ddb8dadfce", "0c477898bbf137bbd6f2a54e3b805ff4", "0ca9f02b537bcea20d4ea5eb1a9fe338", "3ab3655e5a14d4eefc547f4781bf7f9e", "e6f9d5152da699934b30daab206471f6", "3ad59991ccf1d67339b319b15a41b35d", "ffdd59e0318b85a3e480874d9796d872", "0cf479628d7cc1ea25ec7998a92f5051", "07a2d4dcbd6cb2c6a45e6b101f0b6d51", "d6d0f80386e1380d05cb78e871bc72b1", "38d9e015591bbfd4929e0d0f47fa0055", "0e2216679ca6e1094d63322e3412d650", "ada161bf41b8e5e9132858cb54cab5fb", "2a1bc4913cd5ecb0434df07cb675b798", "11083e75553baae21dc89ce8f9a195e4", "a23d29c9e566f2fa8ffbb79267f5df80", "4a07f944a83e8a7c2525efa35dd30e2f", "767637c23bb42cd5d7397cf58b0be688", "14c4e4c72ba075e9069ee67f39188ad8", "3c782813d4afce07bbfc5a9772acdbdc", "7d010c6bb6a3726f327f7e239166d127", "89159ba4dd04e4ce5559f132a9964eb3", "6f33f4a5fc42b8cec7314947bd13f30f", "5834ed4291bdeb928270428ebbaf7604", "5a8a8a43f25485e7ee1b201edcbc7a38", "dc7d30b90b2d8abf664fbed2b1b59894", "41923ea1f824fe63ea5beb84db7a3e74", "3de09703c8e79ed2ca3f01074719906b", "a53a02b997935fd8eedcb5f7abab9b9f", "e96a73c7bf33a464c510ede582318bf2", "32089b8851bbf8bc2d014e9f37288c83", "09D278F9DE118EF09163C6140255C690", "03866661686829d806989e2fc5a72606", "e57401fbdadcd4571ff385ab82bd5d6d", "84B763C45C0E4A3E7CA5548C710DB4EE", "19584675d94829987952432e018d5056", "330768a4f172e10acb6287b87289d83b", "885c99ccfbe77d1cbfcb9c4e7c1a3313", "22a22bc9e4e0d2f189f1ea01748816ac", "7fa30e6bb7e8e8a69155636e50bf1b28", "96df3a3731912449521f6f8d183279b1", "7e6cf3ff4576581271ac8a313b2aab46", "51791678f351c03a0eb4e2a7b05c6e17", "25ce42b079282632708fc846129e98a5", "021bcca20ba3381b11bdde26b4e62f20", "59223b5f52d8799d38e0754855cbdf42", "81e75d8f1d276c156653d3d8813e4a43", "17244e8b6b8227e57fe709ccad421420", "5b76da3acdedc8a5cdf23a798b5936b4", "cb2b65bb77d995cc1c0e5df1c860133c", "40445337761d80cf465136fafb1f63e6", "8a790f401b29fa87bc1e56f7272b3aa6", "b50199e952c875241b9ce06c971ce3c1"] or Process.Hashes like r"%IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932%" or Process.Hashes like r"%IMPHASH=3A19059BD7688CB88E70005F18EFC439%" or Process.Hashes like r"%IMPHASH=bf6223a49e45d99094406777eb6004ba%" or Process.Hashes like r"%IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1%" or Process.Hashes like r"%IMPHASH=A37FF327F8D48E8A4D2F757E1B6E70BC%" or Process.Hashes like r"%IMPHASH=F9A28C458284584A93B14216308D31BD%" or Process.Hashes like r"%IMPHASH=6118619783FC175BC7EBECFF0769B46E%" or Process.Hashes like r"%IMPHASH=959A83047E80AB68B368FDB3F4C6E4EA%" or Process.Hashes like r"%IMPHASH=563233BFA169ACC7892451F71AD5850A%" or Process.Hashes like r"%IMPHASH=87575CB7A0E0700EB37F2E3668671A08%" or Process.Hashes like r"%IMPHASH=13F08707F759AF6003837A150A371BA1%" or Process.Hashes like r"%IMPHASH=1781F06048A7E58B323F0B9259BE798B%" or Process.Hashes like r"%IMPHASH=233F85F2D4BC9D6521A6CAAE11A1E7F5%" or Process.Hashes like r"%IMPHASH=24AF2584CBF4D60BBE5C6D1B31B3BE6D%" or Process.Hashes like r"%IMPHASH=632969DDF6DBF4E0F53424B75E4B91F2%" or Process.Hashes like r"%IMPHASH=713C29B396B907ED71A72482759ED757%" or Process.Hashes like r"%IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F%" or Process.Hashes like r"%IMPHASH=8628B2608957A6B0C6330AC3DE28CE2E%" or Process.Hashes like r"%IMPHASH=8B114550386E31895DFAB371E741123D%" or Process.Hashes like r"%IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793%" or Process.Hashes like r"%IMPHASH=9D68781980370E00E0BD939EE5E6C141%" or Process.Hashes like r"%IMPHASH=B18A1401FF8F444056D29450FBC0A6CE%" or Process.Hashes like r"%IMPHASH=CB567F9498452721D77A451374955F5F%" or Process.Hashes like r"%IMPHASH=730073214094CD328547BF1F72289752%" or Process.Hashes like r"%IMPHASH=17B461A082950FC6332228572138B80C%" or Process.Hashes like r"%IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9%" or Process.Hashes like r"%IMPHASH=819B19D53CA6736448F9325A85736792%" or Process.Hashes like r"%IMPHASH=829DA329CE140D873B4A8BDE2CBFAA7E%" or Process.Hashes like r"%IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74%" or Process.Hashes like r"%IMPHASH=0588081AB0E63BA785938467E1B10CCA%" or Process.Hashes like r"%IMPHASH=0D9EC08BAC6C07D9987DFD0F1506587C%" or Process.Hashes like r"%IMPHASH=BC129092B71C89B4D4C8CDF8EA590B29%" or Process.Hashes like r"%IMPHASH=4DA924CF622D039D58BCE71CDF05D242%" or Process.Hashes like r"%IMPHASH=E7A3A5C377E2D29324093377D7DB1C66%" or Process.Hashes like r"%IMPHASH=9A9DBEC5C62F0380B4FA5FD31DEFFEDF%" or Process.Hashes like r"%IMPHASH=AF8A3976AD71E5D5FDFB67DDB8DADFCE%" or Process.Hashes like r"%IMPHASH=0C477898BBF137BBD6F2A54E3B805FF4%" or Process.Hashes like r"%IMPHASH=0CA9F02B537BCEA20D4EA5EB1A9FE338%" or Process.Hashes like r"%IMPHASH=3AB3655E5A14D4EEFC547F4781BF7F9E%" or Process.Hashes like r"%IMPHASH=E6F9D5152DA699934B30DAAB206471F6%" or Process.Hashes like r"%IMPHASH=3AD59991CCF1D67339B319B15A41B35D%" or Process.Hashes like r"%IMPHASH=FFDD59E0318B85A3E480874D9796D872%" or Process.Hashes like r"%IMPHASH=0CF479628D7CC1EA25EC7998A92F5051%" or Process.Hashes like r"%IMPHASH=07A2D4DCBD6CB2C6A45E6B101F0B6D51%" or Process.Hashes like r"%IMPHASH=D6D0F80386E1380D05CB78E871BC72B1%" or Process.Hashes like r"%IMPHASH=38D9E015591BBFD4929E0D0F47FA0055%" or Process.Hashes like r"%IMPHASH=0E2216679CA6E1094D63322E3412D650%" or Process.Hashes like r"%IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB%" or Process.Hashes like r"%IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798%" or Process.Hashes like r"%IMPHASH=11083E75553BAAE21DC89CE8F9A195E4%" or Process.Hashes like r"%IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80%" or Process.Hashes like r"%IMPHASH=4A07F944A83E8A7C2525EFA35DD30E2F%" or Process.Hashes like r"%IMPHASH=767637C23BB42CD5D7397CF58B0BE688%" or Process.Hashes like r"%IMPHASH=14C4E4C72BA075E9069EE67F39188AD8%" or Process.Hashes like r"%IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC%" or Process.Hashes like r"%IMPHASH=7D010C6BB6A3726F327F7E239166D127%" or Process.Hashes like r"%IMPHASH=89159BA4DD04E4CE5559F132A9964EB3%" or Process.Hashes like r"%IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F%" or Process.Hashes like r"%IMPHASH=5834ED4291BDEB928270428EBBAF7604%" or Process.Hashes like r"%IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38%" or Process.Hashes like r"%IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894%" or Process.Hashes like r"%IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74%" or Process.Hashes like r"%IMPHASH=3DE09703C8E79ED2CA3F01074719906B%" or Process.Hashes like r"%IMPHASH=A53A02B997935FD8EEDCB5F7ABAB9B9F%" or Process.Hashes like r"%IMPHASH=E96A73C7BF33A464C510EDE582318BF2%" or Process.Hashes like r"%IMPHASH=32089B8851BBF8BC2D014E9F37288C83%" or Process.Hashes like r"%IMPHASH=09D278F9DE118EF09163C6140255C690%" or Process.Hashes like r"%IMPHASH=03866661686829d806989e2fc5a72606%" or Process.Hashes like r"%IMPHASH=e57401fbdadcd4571ff385ab82bd5d6d%" or Process.Hashes like r"%IMPHASH=84B763C45C0E4A3E7CA5548C710DB4EE%" or Process.Hashes like r"%IMPHASH=19584675D94829987952432E018D5056%" or Process.Hashes like r"%IMPHASH=330768A4F172E10ACB6287B87289D83B%" or Process.Hashes like r"%IMPHASH=885C99CCFBE77D1CBFCB9C4E7C1A3313%" or Process.Hashes like r"%IMPHASH=22A22BC9E4E0D2F189F1EA01748816AC%" or Process.Hashes like r"%IMPHASH=7FA30E6BB7E8E8A69155636E50BF1B28%" or Process.Hashes like r"%IMPHASH=96DF3A3731912449521F6F8D183279B1%" or Process.Hashes like r"%IMPHASH=7E6CF3FF4576581271AC8A313B2AAB46%" or Process.Hashes like r"%IMPHASH=51791678F351C03A0EB4E2A7B05C6E17%" or Process.Hashes like r"%IMPHASH=25CE42B079282632708FC846129E98A5%" or Process.Hashes like r"%IMPHASH=021BCCA20BA3381B11BDDE26B4E62F20%" or Process.Hashes like r"%IMPHASH=59223B5F52D8799D38E0754855CBDF42%" or Process.Hashes like r"%IMPHASH=81E75D8F1D276C156653D3D8813E4A43%" or Process.Hashes like r"%IMPHASH=17244E8B6B8227E57FE709CCAD421420%" or Process.Hashes like r"%IMPHASH=5B76DA3ACDEDC8A5CDF23A798B5936B4%" or Process.Hashes like r"%IMPHASH=CB2B65BB77D995CC1C0E5DF1C860133C%" or Process.Hashes like r"%IMPHASH=40445337761D80CF465136FAFB1F63E6%" or Process.Hashes like r"%IMPHASH=8A790F401B29FA87BC1E56F7272B3AA6%" or Process.Hashes like r"%IMPHASH=B50199E952C875241B9CE06C971CE3C1%"
GenericProperty1 = Process.Hash.IMP
GenericProperty2 = Process.Hashes


[ActivityMonitoringRule]
# Detects the use of the filename DumpStack.log to evade Microsoft Defender
# Author: Florian Roth (Nextron Systems)
RuleId = 4f647cfa-b598-4e12-ad69-c68dd16caef8
RuleName = DumpStack.log Defender Evasion
EventType = Process.Start
Tag = proc-start-dumpstack.log-defender-evasion
RiskScore = 100
Query = Process.Path like r"%\\DumpStack.log" or Process.CommandLine like r"% -o DumpStack.log%"


[ActivityMonitoringRule]
# Detects the execution of whoami that has been renamed to a different name to avoid detection
# Author: Florian Roth (Nextron Systems)
RuleId = f1086bf7-a0c4-4a37-9102-01e573caf4a0
RuleName = Renamed Whoami Execution
EventType = Process.Start
Tag = proc-start-renamed-whoami-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1033"]}
Query = Process.Name == "whoami.exe" and not Process.Path like r"%\\whoami.exe"


[ActivityMonitoringRule]
# Detects different hacktools used for relay attacks on Windows for privilege escalation
# Author: Florian Roth (Nextron Systems)
RuleId = 5589ab4f-a767-433c-961d-c91f3f704db1
RuleName = Potential SMB Relay Attack Tool Execution
EventType = Process.Start
Tag = proc-start-potential-smb-relay-attack-tool-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1557.001"]}
Query = (Process.Path like r"%PetitPotam%" or Process.Path like r"%RottenPotato%" or Process.Path like r"%HotPotato%" or Process.Path like r"%JuicyPotato%" or Process.Path like r"%\\just\_dce\_%" or Process.Path like r"%Juicy Potato%" or Process.Path like r"%\\temp\\rot.exe%" or Process.Path like r"%\\Potato.exe%" or Process.Path like r"%\\SpoolSample.exe%" or Process.Path like r"%\\Responder.exe%" or Process.Path like r"%\\smbrelayx%" or Process.Path like r"%\\ntlmrelayx%" or Process.Path like r"%\\LocalPotato%" or Process.CommandLine like r"%Invoke-Tater%" or Process.CommandLine like r"% smbrelay%" or Process.CommandLine like r"% ntlmrelay%" or Process.CommandLine like r"%cme smb %" or Process.CommandLine like r"% /ntlm:NTLMhash %" or Process.CommandLine like r"%Invoke-PetitPotam%" or Process.CommandLine like r"%.exe -t % -p %" or Process.CommandLine like r"%.exe -c \"{%" and Process.CommandLine like r"%}\" -z") and not (Process.Path like r"%HotPotatoes6%" or Process.Path like r"%HotPotatoes7%" or Process.Path like r"%HotPotatoes %")


[ActivityMonitoringRule]
# Detects the use of the Dinject PowerShell cradle based on the specific flags
# Author: Florian Roth (Nextron Systems)
RuleId = d78b5d61-187d-44b6-bf02-93486a80de5a
RuleName = HackTool - DInjector PowerShell Cradle Execution
EventType = Process.Start
Tag = proc-start-hacktool-dinjector-powershell-cradle-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1055"]}
Query = Process.CommandLine like r"% /am51%" and Process.CommandLine like r"% /password%"


[ActivityMonitoringRule]
# Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen
# Author: Florian Roth (Nextron Systems), @twjackomo, Jonhnathan Ribeiro, oscd.community
RuleId = 2fdefcb3-dbda-401e-ae23-f0db027628bc
RuleName = Sticky Key Like Backdoor Execution
EventType = Process.Start
Tag = proc-start-sticky-key-like-backdoor-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1546.008"]}
Query = Parent.Path like r"%\\winlogon.exe" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\wt.exe") and (Process.CommandLine like r"%sethc.exe%" or Process.CommandLine like r"%utilman.exe%" or Process.CommandLine like r"%osk.exe%" or Process.CommandLine like r"%Magnify.exe%" or Process.CommandLine like r"%Narrator.exe%" or Process.CommandLine like r"%DisplaySwitch.exe%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule]
# Detects the use of Windows Credential Editor (WCE)
# Author: Florian Roth (Nextron Systems)
RuleId = 7aa7009a-28b9-4344-8c1f-159489a390df
RuleName = HackTool - Windows Credential Editor (WCE) Execution
EventType = Process.Start
Tag = proc-start-hacktool-windows-credential-editor-(wce)-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1003.001"]}
Query = (Process.Hash.IMP in ["a53a02b997935fd8eedcb5f7abab9b9f", "e96a73c7bf33a464c510ede582318bf2"] or Process.Hashes like r"%IMPHASH=a53a02b997935fd8eedcb5f7abab9b9f%" or Process.Hashes like r"%IMPHASH=e96a73c7bf33a464c510ede582318bf2%" or Process.CommandLine like r"%.exe -S" and Parent.Path like r"%\\services.exe") and not Process.Path like r"%\\clussvc.exe"
GenericProperty1 = Parent.Path
GenericProperty2 = Process.Hash.IMP
GenericProperty3 = Process.Hashes


[ActivityMonitoringRule]
# Detects the execution of the PurpleSharp adversary simulation tool
# Author: Florian Roth (Nextron Systems)
RuleId = ff23ffbc-3378-435e-992f-0624dcf93ab4
RuleName = HackTool - PurpleSharp Execution
EventType = Process.Start
Tag = proc-start-hacktool-purplesharp-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1587"]}
Query = Process.Path like r"%\\purplesharp%" or Process.Name == "PurpleSharp.exe" or Process.CommandLine like r"%xyz123456.exe%" or Process.CommandLine like r"%PurpleSharp%"


[ActivityMonitoringRule]
# By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system.
# When the sticky keys are "activated" the privilleged shell is launched.
# Author: Sreeman
RuleId = 1070db9a-3e5d-412e-8e7b-7183b616e1b3
RuleName = Persistence Via Sticky Key Backdoor
EventType = Process.Start
Tag = proc-start-persistence-via-sticky-key-backdoor
RiskScore = 100
Annotation = {"mitre_attack": ["T1546.008"]}
Query = Process.CommandLine like r"%copy %" and Process.CommandLine like r"%/y %" and Process.CommandLine like r"%C:\\windows\\system32\\cmd.exe C:\\windows\\system32\\sethc.exe%"


[ActivityMonitoringRule]
# F-Secure C3 produces DLLs with a default exported StartNodeRelay function.
# Author: Alfie Champion (ajpc500)
RuleId = b18c9d4c-fac9-4708-bd06-dd5bfacf200f
RuleName = HackTool - F-Secure C3 Load by Rundll32
EventType = Process.Start
Tag = proc-start-hacktool-f-secure-c3-load-by-rundll32
RiskScore = 100
Annotation = {"mitre_attack": ["T1218.011"]}
Query = Process.CommandLine like r"%rundll32.exe%" and Process.CommandLine like r"%.dll%" and Process.CommandLine like r"%StartNodeRelay%"


[ActivityMonitoringRule]
# Detects a program that invoked suspicious DNS queries known from Cobalt Strike beacons
# Author: Florian Roth (Nextron Systems)
RuleId = f356a9c4-effd-4608-bbf8-408afd5cd006
RuleName = Suspicious Cobalt Strike DNS Beaconing - Sysmon
EventType = Dns.Query
Tag = suspicious-cobalt-strike-dns-beaconing-sysmon
RiskScore = 100
Annotation = {"mitre_attack": ["T1071.004"]}
Query = Dns.QueryRequest like r"aaa.stage.%" or Dns.QueryRequest like r"post.1%" or Dns.QueryRequest like r"%.stage.123456.%"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule]
# Detects suspicious child processes of the Veeam service process. This could indicate potential RCE or SQL Injection.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d55b793d-f847-4eea-b59a-5ab09908ac90
RuleName = Suspicious Child Process Of Veeam Dabatase
EventType = Process.Start
Tag = proc-start-suspicious-child-process-of-veeam-dabatase
RiskScore = 100
Query = Parent.Path like r"%\\sqlservr.exe" and Parent.CommandLine like r"%VEEAMSQL%" and ((Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wsl.exe" or Process.Path like r"%\\wt.exe") and (Process.CommandLine like r"%-ex %" or Process.CommandLine like r"%bypass%" or Process.CommandLine like r"%cscript%" or Process.CommandLine like r"%DownloadString%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%mshta%" or Process.CommandLine like r"%regsvr32%" or Process.CommandLine like r"%rundll32%" or Process.CommandLine like r"%wscript%" or Process.CommandLine like r"%copy %") or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Path like r"%\\netstat.exe" or Process.Path like r"%\\nltest.exe" or Process.Path like r"%\\ping.exe" or Process.Path like r"%\\tasklist.exe" or Process.Path like r"%\\whoami.exe")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule]
# Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory
# Author: Florian Roth (Nextron Systems)
RuleId = 2704ab9e-afe2-4854-a3b1-0c0706d03578
RuleName = HackTool - Dumpert Process Dumper Execution
EventType = Process.Start
Tag = proc-start-hacktool-dumpert-process-dumper-execution
RiskScore = 100
Annotation = {"mitre_attack": ["T1003.001"]}
Query = Process.Hashes like r"%09D278F9DE118EF09163C6140255C690%" or Process.CommandLine like r"%Dumpert.dll%"
GenericProperty1 = Process.Hashes

