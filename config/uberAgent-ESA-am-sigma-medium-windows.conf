
#
# The rules are generated from the Sigma GitHub repository at https://github.com/SigmaHQ/sigma
# To generate the ruleset, please follow the instructions provided in the repository: https://github.com/vastlimits/pySigma-backend-uberAgent/
#
# The command used to generate the ruleset is:
#    sigma convert -s -f conf -p uberagent-develop -O backend_version=develop -t uberagent /home/runner/work/uberAgent-config/uberAgent-config/build/sigma-medium-windows >> uberAgent-ESA-am-sigma-medium-windows.conf
#

[ActivityMonitoringRule platform=Windows]
# Detects a Powershell process that contains download commands in its command line string
# Author: Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro
RuleId = 3b6ab547-8ec2-4991-b9d2-2b06702a48d7
RuleName = PowerShell Download Pattern
EventType = Process.Start
Tag = proc-start-powershell-download-pattern
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%new-object%" and Process.CommandLine like r"%net.webclient).%" and Process.CommandLine like r"%download%" and (Process.CommandLine like r"%string(%" or Process.CommandLine like r"%file(%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of WebDAV temporary files with potentially suspicious extensions
# Author: Micah Babinski
RuleId = 4c55738d-72d8-490e-a2db-7969654e375f
RuleName = WebDAV Temporary Local File Creation
EventType = File.Create
Tag = webdav-temporary-local-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1584", "T1566"], "author": "Micah Babinski"}
Query = File.Path like r"%\\AppData\\Local\\Temp\\TfsStore\\Tfs\_DAV\\%" and (File.Path like r"%.7z" or File.Path like r"%.bat" or File.Path like r"%.dat" or File.Path like r"%.ico" or File.Path like r"%.js" or File.Path like r"%.lnk" or File.Path like r"%.ps1" or File.Path like r"%.rar" or File.Path like r"%.vbe" or File.Path like r"%.vbs" or File.Path like r"%.zip")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious parent process for cmd.exe
# Author: Tim Rauch, Elastic (idea)
RuleId = 4b991083-3d0e-44ce-8fc4-b254025d8d4b
RuleName = Unusual Parent Process For Cmd.EXE
EventType = Process.Start
Tag = proc-start-unusual-parent-process-for-cmd.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Tim Rauch, Elastic (idea)"}
Query = Process.Path like r"%\\cmd.exe" and (Parent.Path like r"%\\csrss.exe" or Parent.Path like r"%\\ctfmon.exe" or Parent.Path like r"%\\dllhost.exe" or Parent.Path like r"%\\epad.exe" or Parent.Path like r"%\\FlashPlayerUpdateService.exe" or Parent.Path like r"%\\GoogleUpdate.exe" or Parent.Path like r"%\\jucheck.exe" or Parent.Path like r"%\\jusched.exe" or Parent.Path like r"%\\LogonUI.exe" or Parent.Path like r"%\\lsass.exe" or Parent.Path like r"%\\regsvr32.exe" or Parent.Path like r"%\\SearchIndexer.exe" or Parent.Path like r"%\\SearchProtocolHost.exe" or Parent.Path like r"%\\SIHClient.exe" or Parent.Path like r"%\\sihost.exe" or Parent.Path like r"%\\slui.exe" or Parent.Path like r"%\\spoolsv.exe" or Parent.Path like r"%\\sppsvc.exe" or Parent.Path like r"%\\taskhostw.exe" or Parent.Path like r"%\\unsecapp.exe" or Parent.Path like r"%\\WerFault.exe" or Parent.Path like r"%\\wermgr.exe" or Parent.Path like r"%\\wlanext.exe" or Parent.Path like r"%\\WUDFHost.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the setting of a registry inside the "\Shell\Open\Command" value with PowerShell classes from the "System.Security.Cryptography" namespace.
# The PowerShell namespace "System.Security.Cryptography" provides classes for on-the-fly encryption and decryption.
# These can be used for example in decrypting malicious payload for defense evasion.
# Author: Andreas Braathen (mnemonic.io)
RuleId = 1c2a3268-3881-414a-80af-a5b313b14c0e
RuleName = Registry Set With Crypto-Classes From The "Cryptography" PowerShell Namespace
EventType = Reg.Any
Tag = registry-set-with-crypto-classes-from-the-"cryptography"-powershell-namespace
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1027.010", "T1547.001"], "author": "Andreas Braathen (mnemonic.io)"}
Query = Reg.EventType == "SetValue" and Reg.TargetObject like r"%\\Shell\\Open\\Command%" and (Reg.Value.Data like r"%powershell%" or Reg.Value.Data like r"%pwsh%") and Reg.Value.Data like r"%System.Security.Cryptography.%" and (Reg.Value.Data like r"%.AesCryptoServiceProvider%" or Reg.Value.Data like r"%.DESCryptoServiceProvider%" or Reg.Value.Data like r"%.DSACryptoServiceProvider%" or Reg.Value.Data like r"%.RC2CryptoServiceProvider%" or Reg.Value.Data like r"%.Rijndael%" or Reg.Value.Data like r"%.RSACryptoServiceProvider%" or Reg.Value.Data like r"%.TripleDESCryptoServiceProvider%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data
GenericProperty3 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects execution of ftp.exe script execution with the "-s" or "/s" flag and any child processes ran by ftp.exe
# Author: Victor Sergeev, oscd.community
RuleId = 06b401f4-107c-4ff9-947f-9ec1e7649f1e
RuleName = LOLBIN Execution Of The FTP.EXE Binary
EventType = Process.Start
Tag = proc-start-lolbin-execution-of-the-ftp.exe-binary
RiskScore = 50
Annotation = {"mitre_attack": ["T1059", "T1202"], "author": "Victor Sergeev, oscd.community"}
Query = Parent.Path like r"%\\ftp.exe" or (Process.Path like r"%\\ftp.exe" or Process.Name == "ftp.exe") and (Process.CommandLine like r"%-s:%" or Process.CommandLine like r"%/s:%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the installation of VsCode tunnel (code-tunnel) as a service.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 30bf1789-379d-4fdc-900f-55cd0a90a801
RuleName = Visual Studio Code Tunnel Service Installation
EventType = Process.Start
Tag = proc-start-visual-studio-code-tunnel-service-installation
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%tunnel %" and Process.CommandLine like r"%service%" and Process.CommandLine like r"%internal-run%" and Process.CommandLine like r"%tunnel-service.log%"


[ActivityMonitoringRule platform=Windows]
# Detects loading of known malicious drivers via the file name of the drivers.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 39b64854-5497-4b57-a448-40977b8c9679
RuleName = Malicious Driver Load By Name
EventType = Driver.Load
Tag = malicious-driver-load-by-name
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003", "T1068"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%\\wfshbr64.sys" or Image.Path like r"%\\ktmutil7odm.sys" or Image.Path like r"%\\ktes.sys" or Image.Path like r"%\\a26363e7b02b13f2b8d697abb90cd5c3.sys" or Image.Path like r"%\\kt2.sys" or Image.Path like r"%\\4748696211bd56c2d93c21cab91e82a5.sys" or Image.Path like r"%\\malicious.sys" or Image.Path like r"%\\a236e7d654cd932b7d11cb604629a2d0.sys" or Image.Path like r"%\\spwizimgvt.sys" or Image.Path like r"%\\c94f405c5929cfcccc8ad00b42c95083.sys" or Image.Path like r"%\\fur.sys" or Image.Path like r"%\\wantd.sys" or Image.Path like r"%\\windbg.sys" or Image.Path like r"%\\4118b86e490aed091b1a219dba45f332.sys" or Image.Path like r"%\\gmer64.sys" or Image.Path like r"%\\1fc7aeeff3ab19004d2e53eae8160ab1.sys" or Image.Path like r"%\\poortry2.sys" or Image.Path like r"%\\wintapix.sys" or Image.Path like r"%\\daxin\_blank6.sys" or Image.Path like r"%\\6771b13a53b9c7449d4891e427735ea2.sys" or Image.Path like r"%\\blacklotus\_driver.sys" or Image.Path like r"%\\air\_system10.sys" or Image.Path like r"%\\dkrtk.sys" or Image.Path like r"%\\7.sys" or Image.Path like r"%\\sense5ext.sys" or Image.Path like r"%\\ktgn.sys" or Image.Path like r"%\\ndislan.sys" or Image.Path like r"%\\nlslexicons0024uvn.sys" or Image.Path like r"%\\be6318413160e589080df02bb3ca6e6a.sys" or Image.Path like r"%\\4.sys" or Image.Path like r"%\\wantd\_2.sys" or Image.Path like r"%\\e29f6311ae87542b3d693c1f38e4e3ad.sys" or Image.Path like r"%\\daxin\_blank3.sys" or Image.Path like r"%\\gftkyj64.sys" or Image.Path like r"%\\daxin\_blank2.sys" or Image.Path like r"%\\wantd\_4.sys" or Image.Path like r"%\\reddriver.sys" or Image.Path like r"%\\834761775.sys" or Image.Path like r"%\\mlgbbiicaihflrnh.sys" or Image.Path like r"%\\mjj0ge.sys" or Image.Path like r"%\\daxin\_blank.sys" or Image.Path like r"%\\daxin\_blank5.sys" or Image.Path like r"%\\poortry1.sys" or Image.Path like r"%\\msqpq.sys" or Image.Path like r"%\\mimidrv.sys" or Image.Path like r"%\\e939448b28a4edc81f1f974cebf6e7d2.sys" or Image.Path like r"%\\prokiller64.sys" or Image.Path like r"%\\nodedriver.sys" or Image.Path like r"%\\wantd\_3.sys" or Image.Path like r"%\\lctka.sys" or Image.Path like r"%\\kapchelper\_x64.sys" or Image.Path like r"%\\daxin\_blank4.sys" or Image.Path like r"%\\a9df5964635ef8bd567ae487c3d214c4.sys" or Image.Path like r"%\\wantd\_6.sys" or Image.Path like r"%\\ntbios.sys" or Image.Path like r"%\\wantd\_5.sys" or Image.Path like r"%\\pciecubed.sys" or Image.Path like r"%\\mimikatz.sys" or Image.Path like r"%\\nqrmq.sys" or Image.Path like r"%\\2.sys" or Image.Path like r"%\\poortry.sys" or Image.Path like r"%\\ntbios\_2.sys" or Image.Path like r"%\\fgme.sys" or Image.Path like r"%\\telephonuafy.sys" or Image.Path like r"%\\typelibde.sys" or Image.Path like r"%\\daxin\_blank1.sys" or Image.Path like r"%\\ef0e1725aaf0c6c972593f860531a2ea.sys" or Image.Path like r"%\\5a4fe297c7d42539303137b6d75b150d.sys"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.
# The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = ee63c85c-6d51-4d12-ad09-04e25877a947
RuleName = New Custom Shim Database Created
EventType = File.Create
Tag = new-custom-shim-database-created
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.009"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%:\\Windows\\apppatch\\Custom\\%" or File.Path like r"%:\\Windows\\apppatch\\CustomSDB\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detect usage of the "runexehelper.exe" binary as a proxy to launch other programs
# Author: frack113
RuleId = cd71385d-fd9b-4691-9b98-2b1f7e508714
RuleName = Lolbin Runexehelper Use As Proxy
EventType = Process.Start
Tag = proc-start-lolbin-runexehelper-use-as-proxy
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = Parent.Path like r"%\\runexehelper.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# A symbolic link is a type of file that contains a reference to another file.
# This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt
# Author: frack113
RuleId = c0b2768a-dd06-4671-8339-b16ca8d1f27f
RuleName = Fsutil Behavior Set SymlinkEvaluation
EventType = Process.Start
Tag = proc-start-fsutil-behavior-set-symlinkevaluation
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "frack113"}
Query = (Process.Path like r"%\\fsutil.exe" or Process.Name == "fsutil.exe") and Process.CommandLine like r"%behavior %" and Process.CommandLine like r"%set %" and Process.CommandLine like r"%SymlinkEvaluation%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of perl using the "-e"/"-E" flags. This is could be used as a way to launch a reverse shell or execute live perl code.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f426547a-e0f7-441a-b63e-854ac5bdf54d
RuleName = Perl Inline Command Execution
EventType = Process.Start
Tag = proc-start-perl-inline-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\perl.exe" or Process.Name == "perl.exe") and Process.CommandLine like r"% -e%"


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker register a new SIP provider for persistence and defense evasion
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 5a2b21ee-6aaa-4234-ac9d-59a59edf90a1
RuleName = Persistence Via New SIP Provider
EventType = Reg.Any
Tag = persistence-via-new-sip-provider
RiskScore = 50
Annotation = {"mitre_attack": ["T1553.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType%" or Reg.TargetObject like r"%\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\%" or Reg.TargetObject like r"%\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType%") and (Reg.TargetObject like r"%\\Dll%" or Reg.TargetObject like r"%\\$DLL%") and not (Reg.Value.Data in ["WINTRUST.DLL", "mso.dll"] or Process.Path == "C:\\Windows\\System32\\poqexec.exe" and Reg.TargetObject like r"%\\CryptSIPDll%" and Reg.Value.Data == "C:\\Windows\\System32\\PsfSip.dll")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects execution of "VSDiagnostics.exe" with the "start" command in order to launch and proxy arbitrary binaries.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ac1c92b4-ac81-405a-9978-4604d78cc47e
RuleName = Potential Binary Proxy Execution Via VSDiagnostics.EXE
EventType = Process.Start
Tag = proc-start-potential-binary-proxy-execution-via-vsdiagnostics.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\VSDiagnostics.exe" or Process.Name == "VSDiagnostics.exe") and Process.CommandLine like r"%start%" and (Process.CommandLine like r"% /launch:%" or Process.CommandLine like r"% -launch:%")


[ActivityMonitoringRule platform=Windows]
# Detects any assembly DLL being loaded by an Office Product
# Author: Antonlovesdnb
RuleId = ff0f2b05-09db-4095-b96d-1b75ca24894a
RuleName = DotNET Assembly DLL Loaded Via Office Application
EventType = Image.Load
Tag = dotnet-assembly-dll-loaded-via-office-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Antonlovesdnb"}
Query = (Process.Path like r"%\\excel.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\onenote.exe" or Process.Path like r"%\\onenoteim.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and Image.Path like r"C:\\Windows\\assembly\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects user accept agreement execution in psexec commandline
# Author: omkar72
RuleId = 730fc21b-eaff-474b-ad23-90fd265d4988
RuleName = Psexec Execution
EventType = Process.Start
Tag = proc-start-psexec-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1569", "T1021"], "author": "omkar72"}
Query = Process.Path like r"%\\psexec.exe" or Process.Name == "psexec.c"


[ActivityMonitoringRule platform=Windows]
# Detects a non-browser process interacting with the Google API which could indicate the use of a covert C2 such as Google Sheet C2 (GC2-sheet)
# Author: Gavin Knapp
RuleId = 7e9cf7b6-e827-11ed-a05b-0242ac120003
RuleName = Suspicious Non-Browser Network Communication With Google API
EventType = Net.Any
Tag = suspicious-non-browser-network-communication-with-google-api
RiskScore = 50
Annotation = {"mitre_attack": ["T1102"], "author": "Gavin Knapp"}
Query = (Net.Target.Name like r"%drive.googleapis.com%" or Net.Target.Name like r"%oauth2.googleapis.com%" or Net.Target.Name like r"%sheets.googleapis.com%" or Net.Target.Name like r"%www.googleapis.com%") and not (Process.Path like r"%\\brave.exe" or Process.Path like r"%:\\Program Files\\Google\\Chrome\\Application\\chrome.exe" or Process.Path like r"%:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe" or Process.Path like r"%:\\Program Files\\Google\\Drive File Stream\\%" and Process.Path like r"%\\GoogleDriveFS.exe" or Process.Path like r"%:\\Program Files\\Mozilla Firefox\\firefox.exe" or Process.Path like r"%:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe" or Process.Path like r"%:\\Program Files (x86)\\Internet Explorer\\iexplore.exe" or Process.Path like r"%:\\Program Files\\Internet Explorer\\iexplore.exe" or Process.Path like r"%\\maxthon.exe" or Process.Path like r"%:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\%" or Process.Path like r"%:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe" or Process.Path like r"%:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe" or Process.Path like r"%\\WindowsApps\\MicrosoftEdge.exe" or (Process.Path like r"%:\\Program Files (x86)\\Microsoft\\EdgeCore\\%" or Process.Path like r"%:\\Program Files\\Microsoft\\EdgeCore\\%") and (Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe") or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe" or Process.Path like r"%\\GoogleUpdate.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\teams.exe")
GenericProperty1 = Net.Target.Name


[ActivityMonitoringRule platform=Windows]
# Detects the use of the 'Launch-VsDevShell.ps1' Microsoft signed script to execute commands.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 45d3a03d-f441-458c-8883-df101a3bb146
RuleName = Launch-VsDevShell.PS1 Proxy Execution
EventType = Process.Start
Tag = proc-start-launch-vsdevshell.ps1-proxy-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1216.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Launch-VsDevShell.ps1%" and (Process.CommandLine like r"%VsWherePath %" or Process.CommandLine like r"%VsInstallationPath %")


[ActivityMonitoringRule platform=Windows]
# Compress target file into a cab file stored in the Alternate Data Stream (ADS) of the target file.
# Author: frack113
RuleId = 6b369ced-4b1d-48f1-b427-fdc0de0790bd
RuleName = Suspicious Diantz Alternate Data Stream Execution
EventType = Process.Start
Tag = proc-start-suspicious-diantz-alternate-data-stream-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113"}
Query = Process.CommandLine like r"%diantz.exe%" and Process.CommandLine like r"%.cab%" and Process.CommandLine regex ":[^\\\\]"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "AVKkid.dll"
# Author: X__Junior (Nextron Systems)
RuleId = 952ed57c-8f99-453d-aee0-53a49c22f95d
RuleName = Potential AVKkid.DLL Sideloading
EventType = Image.Load
Tag = potential-avkkid.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\AVKkid.dll" and not ((Process.Path like r"%C:\\Program Files (x86)\\G DATA\\%" or Process.Path like r"%C:\\Program Files\\G DATA\\%") and Process.Path like r"%\\AVKKid.exe" and (Image.Path like r"C:\\Program Files (x86)\\G DATA\\%" or Image.Path like r"C:\\Program Files\\G DATA\\%"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects the presence of unicode characters which are homoglyphs, or identical in appearance, to ASCII letter characters.
# This is used as an obfuscation and masquerading techniques. Only "perfect" homoglyphs are included; these are characters that
# are indistinguishable from ASCII characters and thus may make excellent candidates for homoglyph attack characters.
# Author: Micah Babinski, @micahbabinski
RuleId = 32e280f1-8ad4-46ef-9e80-910657611fbc
RuleName = Potential Homoglyph Attack Using Lookalike Characters
EventType = Process.Start
Tag = proc-start-potential-homoglyph-attack-using-lookalike-characters
RiskScore = 50
Annotation = {"mitre_attack": ["T1036", "T1036.003"], "author": "Micah Babinski, @micahbabinski"}
Query = Process.CommandLine like r"%А%" or Process.CommandLine like r"%В%" or Process.CommandLine like r"%Е%" or Process.CommandLine like r"%К%" or Process.CommandLine like r"%М%" or Process.CommandLine like r"%Н%" or Process.CommandLine like r"%О%" or Process.CommandLine like r"%Р%" or Process.CommandLine like r"%С%" or Process.CommandLine like r"%Т%" or Process.CommandLine like r"%Х%" or Process.CommandLine like r"%Ѕ%" or Process.CommandLine like r"%І%" or Process.CommandLine like r"%Ј%" or Process.CommandLine like r"%Ү%" or Process.CommandLine like r"%Ӏ%" or Process.CommandLine like r"%Ԍ%" or Process.CommandLine like r"%Ԛ%" or Process.CommandLine like r"%Ԝ%" or Process.CommandLine like r"%Α%" or Process.CommandLine like r"%Β%" or Process.CommandLine like r"%Ε%" or Process.CommandLine like r"%Ζ%" or Process.CommandLine like r"%Η%" or Process.CommandLine like r"%Ι%" or Process.CommandLine like r"%Κ%" or Process.CommandLine like r"%Μ%" or Process.CommandLine like r"%Ν%" or Process.CommandLine like r"%Ο%" or Process.CommandLine like r"%Ρ%" or Process.CommandLine like r"%Τ%" or Process.CommandLine like r"%Υ%" or Process.CommandLine like r"%Χ%" or Process.CommandLine like r"%а%" or Process.CommandLine like r"%е%" or Process.CommandLine like r"%о%" or Process.CommandLine like r"%р%" or Process.CommandLine like r"%с%" or Process.CommandLine like r"%х%" or Process.CommandLine like r"%ѕ%" or Process.CommandLine like r"%і%" or Process.CommandLine like r"%ӏ%" or Process.CommandLine like r"%ј%" or Process.CommandLine like r"%һ%" or Process.CommandLine like r"%ԁ%" or Process.CommandLine like r"%ԛ%" or Process.CommandLine like r"%ԝ%" or Process.CommandLine like r"%ο%"


[ActivityMonitoringRule platform=Windows]
# Detects uncommon child processes of the Add-In deployment cache updating utility (AddInutil.exe) which could be a sign of potential abuse of the binary to proxy execution via a custom Addins.Store payload.
# Author: Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)
RuleId = b5746143-59d6-4603-8d06-acbd60e166ee
RuleName = Uncommon Child Process Of AddinUtil.EXE
EventType = Process.Start
Tag = proc-start-uncommon-child-process-of-addinutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)"}
Query = Parent.Path like r"%\\addinutil.exe" and not (Process.Path like r"%:\\Windows\\System32\\conhost.exe" or Process.Path like r"%:\\Windows\\System32\\werfault.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\werfault.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects DNS queries made by "AppInstaller.EXE". The AppInstaller is the default handler for the "ms-appinstaller" URI. It attempts to load/install a package from the referenced URL
# Author: frack113
RuleId = 7cff77e1-9663-46a3-8260-17f2e1aa9d0a
RuleName = AppX Package Installation Attempts Via AppInstaller.EXE
EventType = Dns.Query
Tag = appx-package-installation-attempts-via-appinstaller.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "frack113"}
Query = Process.Path like r"C:\\Program Files\\WindowsApps\\Microsoft.DesktopAppInstaller\_%" and Process.Path like r"%\\AppInstaller.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of whoami.exe with the /group command line flag to show group membership for the current user, account type, security identifiers (SID), and attributes.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = bd8b828d-0dca-48e1-8a63-8a58ecf2644f
RuleName = Group Membership Reconnaissance Via Whoami.EXE
EventType = Process.Start
Tag = proc-start-group-membership-reconnaissance-via-whoami.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\whoami.exe" or Process.Name == "whoami.exe") and (Process.CommandLine like r"% /groups%" or Process.CommandLine like r"% -groups%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL files being downloaded using the PowerShell Invoke-WebRequest cmdlet
# Author: Florian Roth (Nextron Systems), Hieu Tran
RuleId = 0f0450f3-8b47-441e-a31b-15a91dc243e2
RuleName = Potential DLL File Download Via PowerShell Invoke-WebRequest
EventType = Process.Start
Tag = proc-start-potential-dll-file-download-via-powershell-invoke-webrequest
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1105"], "author": "Florian Roth (Nextron Systems), Hieu Tran"}
Query = (Process.CommandLine like r"%Invoke-WebRequest %" or Process.CommandLine like r"%IWR %") and Process.CommandLine like r"%http%" and Process.CommandLine like r"%OutFile%" and Process.CommandLine like r"%.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious execution of 'Msbuild.exe' by a uncommon parent process
# Author: frack113
RuleId = 33be4333-2c6b-44f4-ae28-102cdbde0a31
RuleName = Suspicious Msbuild Execution By Uncommon Parent Process
EventType = Process.Start
Tag = proc-start-suspicious-msbuild-execution-by-uncommon-parent-process
RiskScore = 50
Annotation = {"author": "frack113"}
Query = (Process.Path like r"%\\MSBuild.exe" or Process.Name == "MSBuild.exe") and not (Parent.Path like r"%\\devenv.exe" or Parent.Path like r"%\\cmd.exe" or Parent.Path like r"%\\msbuild.exe" or Parent.Path like r"%\\python.exe" or Parent.Path like r"%\\explorer.exe" or Parent.Path like r"%\\nuget.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential PowerShell commands or code within registry run keys
# Author: frack113, Florian Roth (Nextron Systems)
RuleId = 8d85cf08-bf97-4260-ba49-986a2a65129c
RuleName = Suspicious Powershell In Registry Run Keys
EventType = Reg.Any
Tag = suspicious-powershell-in-registry-run-keys
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "frack113, Florian Roth (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\Software\\Microsoft\\Windows\\CurrentVersion\\Run%" and (Reg.Value.Data like r"%powershell%" or Reg.Value.Data like r"%pwsh %" or Reg.Value.Data like r"%FromBase64String%" or Reg.Value.Data like r"%.DownloadFile(%" or Reg.Value.Data like r"%.DownloadString(%" or Reg.Value.Data like r"% -w hidden %" or Reg.Value.Data like r"% -w 1 %" or Reg.Value.Data like r"%-windowstyle hidden%" or Reg.Value.Data like r"%-window hidden%" or Reg.Value.Data like r"% -nop %" or Reg.Value.Data like r"% -encodedcommand %" or Reg.Value.Data like r"%-ExecutionPolicy Bypass%" or Reg.Value.Data like r"%Invoke-Expression%" or Reg.Value.Data like r"%IEX (%" or Reg.Value.Data like r"%Invoke-Command%" or Reg.Value.Data like r"%ICM -%" or Reg.Value.Data like r"%Invoke-WebRequest%" or Reg.Value.Data like r"%IWR %" or Reg.Value.Data like r"% -noni %" or Reg.Value.Data like r"% -noninteractive %")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = 046218bd-e0d8-4113-a3c3-895a12b2b298
RuleName = Session Manager Autorun Keys Modification
EventType = Reg.Any
Tag = session-manager-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001", "T1546.009"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\System\\CurrentControlSet\\Control\\Session Manager%" and (Reg.TargetObject like r"%\\SetupExecute%" or Reg.TargetObject like r"%\\S0InitialCommand%" or Reg.TargetObject like r"%\\KnownDlls%" or Reg.TargetObject like r"%\\Execute%" or Reg.TargetObject like r"%\\BootExecute%" or Reg.TargetObject like r"%\\AppCertDlls%") and not Reg.Value.Data == "(Empty)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Execute C# code located in the consoleapp folder
# Author: Beyu Denis, oscd.community
RuleId = 81ebd28b-9607-4478-bf06-974ed9d53ed7
RuleName = Application Whitelisting Bypass via Dnx.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-dnx.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1027.004"], "author": "Beyu Denis, oscd.community"}
Query = Process.Path like r"%\\dnx.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of WMIC in order to get a list of firewall and antivirus products
# Author: Nasreddine Bencherchali
RuleId = 15434e33-5027-4914-88d5-3d4145ec25a9
RuleName = Potential Product Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-potential-product-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%Product%"


[ActivityMonitoringRule platform=Windows]
# Detects when a user installs certificates by using CertOC.exe to loads the target DLL file.
# Author: Austin Songer @austinsonger
RuleId = 242301bc-f92f-4476-8718-78004a6efd9f
RuleName = DLL Loaded via CertOC.EXE
EventType = Process.Start
Tag = proc-start-dll-loaded-via-certoc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Austin Songer @austinsonger"}
Query = (Process.Path like r"%\\certoc.exe" or Process.Name == "CertOC.exe") and (Process.CommandLine like r"% -LoadDLL %" or Process.CommandLine like r"% /LoadDLL %")


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 0442defa-b4a2-41c9-ae2c-ea7042fc4701
RuleName = Potential Credential Dumping Attempt Using New NetworkProvider - REG
EventType = Reg.Any
Tag = potential-credential-dumping-attempt-using-new-networkprovider-reg
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\System\\CurrentControlSet\\Services\\%" and Reg.TargetObject like r"%\\NetworkProvider%" and not (Reg.TargetObject like r"%\\System\\CurrentControlSet\\Services\\WebClient\\NetworkProvider%" or Reg.TargetObject like r"%\\System\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider%" or Reg.TargetObject like r"%\\System\\CurrentControlSet\\Services\\RDPNP\\NetworkProvider%" or Process.Path == "C:\\Windows\\System32\\poqexec.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Once established within a system or network, an adversary may use automated techniques for collecting internal data.
# Author: frack113
RuleId = aa2efee7-34dd-446e-8a37-40790a66efd7
RuleName = Recon Information for Export with Command Prompt
EventType = Process.Start
Tag = proc-start-recon-information-for-export-with-command-prompt
RiskScore = 50
Annotation = {"mitre_attack": ["T1119"], "author": "frack113"}
Query = (Process.Path like r"%\\tree.com" or Process.Path like r"%\\WMIC.exe" or Process.Path like r"%\\doskey.exe" or Process.Path like r"%\\sc.exe" or Process.Name in ["wmic.exe", "DOSKEY.EXE", "sc.exe"]) and (Parent.CommandLine like r"% > \%TEMP\%\\%" or Parent.CommandLine like r"% > \%TMP\%\\%")
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the creation of log files during a TeamViewer remote session
# Author: Florian Roth (Nextron Systems)
RuleId = 162ab1e4-6874-4564-853c-53ec3ab8be01
RuleName = TeamViewer Remote Session
EventType = File.Create
Tag = teamviewer-remote-session
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Florian Roth (Nextron Systems)"}
Query = File.Path like r"%\\TeamViewer\\RemotePrinting\\tvprint.db" or File.Path like r"%\\TeamViewer\\TVNetwork.log" or File.Path like r"%\\TeamViewer%" and File.Path like r"%\_Logfile.log%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "Diskshadow.exe" in script mode to execute an script with a potentially uncommon extension.
# Initial baselining of the allowed extension list is required.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1dde5376-a648-492e-9e54-4241dd9b0c7f
RuleName = Diskshadow Script Mode - Uncommon Script Extension Execution
EventType = Process.Start
Tag = proc-start-diskshadow-script-mode-uncommon-script-extension-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "diskshadow.exe" or Process.Path like r"%\\diskshadow.exe") and (Process.CommandLine like r"%-s %" or Process.CommandLine like r"%/s %") and not Process.CommandLine like r"%.txt%"


[ActivityMonitoringRule platform=Windows]
# Detects disabling the CrashDump per registry (as used by HermeticWiper)
# Author: Tobias Michalski (Nextron Systems)
RuleId = 2ff692c2-4594-41ec-8fcb-46587de769e0
RuleName = CrashControl CrashDump Disabled
EventType = Reg.Any
Tag = crashcontrol-crashdump-disabled
RiskScore = 50
Annotation = {"mitre_attack": ["T1564", "T1112"], "author": "Tobias Michalski (Nextron Systems)"}
Query = Reg.TargetObject like r"%SYSTEM\\CurrentControlSet\\Control\\CrashControl%" and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "lodctr.exe" to rebuild the performance counter registry values. This can be abused by attackers by providing a malicious config file to overwrite performance counter configuration to confuse and evade monitoring and security solutions.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = cc9d3712-6310-4320-b2df-7cb408274d53
RuleName = Rebuild Performance Counter Values Via Lodctr.EXE
EventType = Process.Start
Tag = proc-start-rebuild-performance-counter-values-via-lodctr.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\lodctr.exe" and Process.Name == "LODCTR.EXE" and (Process.CommandLine like r"% -r%" or Process.CommandLine like r"% /r%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of the certutil with the "exportPFX" flag which allows the utility to export certificates.
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 3ffd6f51-e6c1-47b7-94b4-c1e61d4117c5
RuleName = Certificate Exported Via Certutil.EXE
EventType = Process.Start
Tag = proc-start-certificate-exported-via-certutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1027"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\certutil.exe" or Process.Name == "CertUtil.exe") and (Process.CommandLine like r"%-exportPFX %" or Process.CommandLine like r"%/exportPFX %")


[ActivityMonitoringRule platform=Windows]
# Detects a when net.exe is called with a password in the command line
# Author: Tim Shelton (HAWK.IO)
RuleId = d4498716-1d52-438f-8084-4a603157d131
RuleName = Password Provided In Command Line Of Net.EXE
EventType = Process.Start
Tag = proc-start-password-provided-in-command-line-of-net.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1021.002", "T1078"], "author": "Tim Shelton (HAWK.IO)"}
Query = (Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Name in ["net.exe", "net1.exe"]) and Process.CommandLine like r"% use %" and Process.CommandLine like r"%:%\\%" and Process.CommandLine like r"%/USER:% %" and not Process.CommandLine like r"% "


[ActivityMonitoringRule platform=Windows]
# Detects enabling TurnOffCheck which can be used to bypass defense of MSDT Follina vulnerability
# Author: Christopher Peacock @securepeacock, SCYTHE @scythe_io
RuleId = 7d995e63-ec83-4aa3-89d5-8a17b5c87c86
RuleName = Scripted Diagnostics Turn Off Check Enabled - Registry
EventType = Reg.Any
Tag = scripted-diagnostics-turn-off-check-enabled-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io"}
Query = Reg.TargetObject like r"%\\Policies\\Microsoft\\Windows\\ScriptedDiagnostics\\TurnOffCheck" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects child processes of "provlaunch.exe" which might indicate potential abuse to proxy execution.
# Author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel
RuleId = 7f5d1c9a-3e83-48df-95a7-2b98aae6c13c
RuleName = Potential Provlaunch.EXE Binary Proxy Execution Abuse
EventType = Process.Start
Tag = proc-start-potential-provlaunch.exe-binary-proxy-execution-abuse
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel"}
Query = Parent.Path like r"%\\provlaunch.exe" and not (Process.Path like r"%\\calc.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\notepad.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%:\\PerfLogs\\%" or Process.Path like r"%:\\Temp\\%" or Process.Path like r"%:\\Users\\Public\\%" or Process.Path like r"%\\AppData\\Temp\\%" or Process.Path like r"%\\Windows\\System32\\Tasks\\%" or Process.Path like r"%\\Windows\\Tasks\\%" or Process.Path like r"%\\Windows\\Temp\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects new process creation using WMIC via the "process call create" flag
# Author: Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community
RuleId = 526be59f-a573-4eea-b5f7-f0973207634d
RuleName = New Process Created Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-new-process-created-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%process%" and Process.CommandLine like r"%call%" and Process.CommandLine like r"%create%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy
# Author: frack113
RuleId = 1e59c230-6670-45bf-83b0-98903780607e
RuleName = Gpscript Execution
EventType = Process.Start
Tag = proc-start-gpscript-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = (Process.Path like r"%\\gpscript.exe" or Process.Name == "GPSCRIPT.EXE") and (Process.CommandLine like r"% /logon%" or Process.CommandLine like r"% /startup%") and not Parent.CommandLine == "C:\\windows\\system32\\svchost.exe -k netsvcs -p -s gpsvc"
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects execution of "curl.exe" with the "--insecure" flag.
# Author: X__Junior (Nextron Systems)
RuleId = cb9cc1d1-e84e-4bdc-b7ad-c31b1b7908ec
RuleName = Insecure Transfer Via Curl.EXE
EventType = Process.Start
Tag = proc-start-insecure-transfer-via-curl.exe
RiskScore = 50
Annotation = {"author": "X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and (Process.CommandLine regex "\\s-k\\s" or Process.CommandLine like r"%--insecure%")


[ActivityMonitoringRule platform=Windows]
# Detects DNS query requests to Devtunnels domains. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.
# Author: citron_ninja
RuleId = 1cb0c6ce-3d00-44fc-ab9c-6d6d577bf20b
RuleName = DNS Query To Devtunnels Domain
EventType = Dns.Query
Tag = dns-query-to-devtunnels-domain
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "citron_ninja"}
Query = Dns.QueryRequest like r"%.devtunnels.ms"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects creation of ".vhd"/".vhdx" files by browser processes.
# Malware can use mountable Virtual Hard Disk ".vhd" files to encapsulate payloads and evade security controls.
# Author: frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'
RuleId = 8468111a-ef07-4654-903b-b863a80bbc95
RuleName = VHD Image Download Via Browser
EventType = File.Create
Tag = vhd-image-download-via-browser
RiskScore = 50
Annotation = {"mitre_attack": ["T1587.001"], "author": "frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'"}
Query = (Process.Path like r"%\\brave.exe" or Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\firefox.exe" or Process.Path like r"%\\iexplore.exe" or Process.Path like r"%\\maxthon.exe" or Process.Path like r"%\\MicrosoftEdge.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe" or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe") and File.Path like r"%.vhd%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the use of the 'Pubprn.vbs' Microsoft signed script to execute commands.
# Author: frack113
RuleId = 1fb76ab8-fa60-4b01-bddd-71e89bf555da
RuleName = Pubprn.vbs Proxy Execution
EventType = Process.Start
Tag = proc-start-pubprn.vbs-proxy-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1216.001"], "author": "frack113"}
Query = Process.CommandLine like r"%\\pubprn.vbs%" and Process.CommandLine like r"%script:%"


[ActivityMonitoringRule platform=Windows]
# Detects disabling Windows Defender Exploit Guard Network Protection
# Author: Austin Songer @austinsonger
RuleId = bf9e1387-b040-4393-9851-1598f8ecfae9
RuleName = Disable Exploit Guard Network Protection on Windows Defender
EventType = Reg.Any
Tag = disable-exploit-guard-network-protection-on-windows-defender
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Austin Songer @austinsonger"}
Query = Reg.TargetObject like r"%SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center\\App and Browser protection\\DisallowExploitProtectionOverride%" and Reg.Value.Data == "DWORD (00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects installation of a potentially suspicious new shim with an uncommon extension using sdbinst.exe.
# Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 18ee686c-38a3-4f65-9f44-48a077141f42
RuleName = Uncommon Extension Shim Database Installation Via Sdbinst.EXE
EventType = Process.Start
Tag = proc-start-uncommon-extension-shim-database-installation-via-sdbinst.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.011"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\sdbinst.exe" or Process.Name == "sdbinst.exe") and not (Process.CommandLine like r"%.sdb%" or Process.CommandLine like r"% -c" or Process.CommandLine like r"% -f" or Process.CommandLine like r"% -mm" or Process.CommandLine like r"% -t" or Process.CommandLine like r"% -m -bg%" or isnull(Process.CommandLine) or Process.CommandLine == "")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of Xwizard tool with specific arguments which utilized to run custom class properties.
# Author: Ensar Şamil, @sblmsrsn, @oscd_initiative
RuleId = 53d4bb30-3f36-4e8a-b078-69d36c4a79ff
RuleName = Custom Class Execution via Xwizard
EventType = Process.Start
Tag = proc-start-custom-class-execution-via-xwizard
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Ensar \u015eamil, @sblmsrsn, @oscd_initiative"}
Query = Process.Path like r"%\\xwizard.exe" and Process.CommandLine regex "\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}"


[ActivityMonitoringRule platform=Windows]
# Detects using register-cimprovider.exe to execute arbitrary dll file.
# Author: Ivan Dyachkov, Yulia Fomina, oscd.community
RuleId = a2910908-e86f-4687-aeba-76a5f996e652
RuleName = DLL Execution Via Register-cimprovider.exe
EventType = Process.Start
Tag = proc-start-dll-execution-via-register-cimprovider.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1574"], "author": "Ivan Dyachkov, Yulia Fomina, oscd.community"}
Query = Process.Path like r"%\\register-cimprovider.exe" and Process.CommandLine like r"%-path%" and Process.CommandLine like r"%dll%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of Sysinternals ADExplorer with the "-snapshot" flag in order to save a local copy of the active directory database.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9212f354-7775-4e28-9c9f-8f0a4544e664
RuleName = Active Directory Database Snapshot Via ADExplorer
EventType = Process.Start
Tag = proc-start-active-directory-database-snapshot-via-adexplorer
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.001", "T1003.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ADExplorer.exe" or Process.Name == "AdExp") and Process.CommandLine like r"%snapshot%"


[ActivityMonitoringRule platform=Windows]
# Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that does not exist. This non-existent DLL file is named "ShellChromeAPI.dll".
# Adversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter
# Author: @gott_cyber
RuleId = e173ad47-4388-4012-ae62-bd13f71c18a8
RuleName = Potential DLL Sideloading Via DeviceEnroller.EXE
EventType = Process.Start
Tag = proc-start-potential-dll-sideloading-via-deviceenroller.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.002"], "author": "@gott_cyber"}
Query = (Process.Path like r"%\\deviceenroller.exe" or Process.Name == "deviceenroller.exe") and Process.CommandLine like r"%/PhoneDeepLink%"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "roboform.dll", a DLL used by RoboForm Password Manager
# Author: X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = f64c9b2d-b0ad-481d-9d03-7fc75020892a
RuleName = Potential RoboForm.DLL Sideloading
EventType = Image.Load
Tag = potential-roboform.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Image.Path like r"%\\roboform.dll" or Image.Path like r"%\\roboform-x64.dll") and not ((Process.Path like r" C:\\Program Files (x86)\\Siber Systems\\AI RoboForm\\%" or Process.Path like r" C:\\Program Files\\Siber Systems\\AI RoboForm\\%") and (Process.Path like r"%\\robotaskbaricon.exe" or Process.Path like r"%\\robotaskbaricon-x64.exe"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects use of an encoded/obfuscated version of an IP address (hex, octal...) in an URL combined with a download command
# Author: Florian Roth (Nextron Systems), X__Junior (Nextron Systems)
RuleId = cb5a2333-56cf-4562-8fcb-22ba1bca728d
RuleName = Obfuscated IP Download Activity
EventType = Process.Start
Tag = proc-start-obfuscated-ip-download-activity
RiskScore = 50
Annotation = {"author": "Florian Roth (Nextron Systems), X__Junior (Nextron Systems)"}
Query = (Process.CommandLine like r"%Invoke-WebRequest%" or Process.CommandLine like r"%iwr %" or Process.CommandLine like r"%wget %" or Process.CommandLine like r"%curl %" or Process.CommandLine like r"%DownloadFile%" or Process.CommandLine like r"%DownloadString%") and (Process.CommandLine like r"% 0x%" or Process.CommandLine like r"%//0x%" or Process.CommandLine like r"%.0x%" or Process.CommandLine like r"%.00x%" or Process.CommandLine like r"%http://\%%" and Process.CommandLine like r"%\%2e%" or Process.CommandLine regex "https?://[0-9]{1,3}\\.[0-9]{1,3}\\.0[0-9]{3,4}" or Process.CommandLine regex "https?://[0-9]{1,3}\\.0[0-9]{3,7}" or Process.CommandLine regex "https?://0[0-9]{3,11}" or Process.CommandLine regex "https?://(0[0-9]{1,11}\\.){3}0[0-9]{1,11}" or Process.CommandLine regex "https?://0[0-9]{1,11}" or Process.CommandLine regex " [0-7]{7,13}") and not Process.CommandLine regex "https?://((25[0-5]|(2[0-4]|1\\d|[1-9])?\\d)(\\.|\\b)){4}"


[ActivityMonitoringRule platform=Windows]
# Detects creation of files with the ".pub" extension in suspicious or uncommon locations. This could be a sign of attackers abusing Publisher documents
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3d2a2d59-929c-4b78-8c1a-145dfe9e07b1
RuleName = Publisher Attachment File Dropped In Suspicious Location
EventType = File.Create
Tag = publisher-attachment-file-dropped-in-suspicious-location
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (File.Path like r"%\\AppData\\Local\\Temp\\%" or File.Path like r"%\\Users\\Public\\%" or File.Path like r"%\\Windows\\Temp\\%" or File.Path like r"%C:\\Temp\\%") and File.Path like r"%.pub"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# There is an option for a MS VS Just-In-Time Debugger "vsjitdebugger.exe" to launch specified executable and attach a debugger.
# This option may be used adversaries to execute malicious code by signed verified binary.
# The debugger is installed alongside with Microsoft Visual Studio package.
# Author: Agro (@agro_sev), Ensar Şamil (@sblmsrsn), oscd.community
RuleId = 15c7904e-6ad1-4a45-9b46-5fb25df37fd2
RuleName = Malicious PE Execution by Microsoft Visual Studio Debugger
EventType = Process.Start
Tag = proc-start-malicious-pe-execution-by-microsoft-visual-studio-debugger
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Agro (@agro_sev), Ensar \u015eamil (@sblmsrsn), oscd.community"}
Query = Parent.Path like r"%\\vsjitdebugger.exe" and not (Process.Path like r"%\\vsimmersiveactivatehelper%.exe" or Process.Path like r"%\\devenv.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects calls to cmdlets that are used to export certificates from the local certificate store. Threat actors were seen abusing this to steal private keys from compromised machines.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9e716b33-63b2-46da-86a4-bd3c3b9b5dfb
RuleName = Certificate Exported Via PowerShell
EventType = Process.Start
Tag = proc-start-certificate-exported-via-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.004", "T1059.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Export-PfxCertificate %" or Process.CommandLine like r"%Export-Certificate %"


[ActivityMonitoringRule platform=Windows]
# Detects uncommon and potentially suspicious one-liner command containing both "ping" and "copy" at the same time, which is usually used by malware.
# Author: X__Junior (Nextron Systems)
RuleId = ded2b07a-d12f-4284-9b76-653e37b6c8b0
RuleName = Potentially Suspicious Ping/Copy Command Combination
EventType = Process.Start
Tag = proc-start-potentially-suspicious-ping/copy-command-combination
RiskScore = 50
Annotation = {"mitre_attack": ["T1070.004"], "author": "X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and Process.CommandLine like r"%ping%" and Process.CommandLine like r"%copy %" and (Process.CommandLine like r"% -n %" or Process.CommandLine like r"% /n %") and (Process.CommandLine like r"% -y %" or Process.CommandLine like r"% /y %")


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "Import-Module" cmdlet to load the "Microsoft.ActiveDirectory.Management.dl" DLL. Which is often used by attackers to perform AD enumeration.
# Author: frack113
RuleId = 70bc5215-526f-4477-963c-a47a5c9ebd12
RuleName = Potential Active Directory Enumeration Using AD Module - ProcCreation
EventType = Process.Start
Tag = proc-start-potential-active-directory-enumeration-using-ad-module-proccreation
RiskScore = 50
Annotation = {"author": "frack113"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%Import-Module %" or Process.CommandLine like r"%ipmo %") and Process.CommandLine like r"%Microsoft.ActiveDirectory.Management.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of whoami.exe with suspicious parent processes.
# Author: Florian Roth (Nextron Systems)
RuleId = 8de1cbe8-d6f5-496d-8237-5f44a721c7a0
RuleName = Whoami.EXE Execution Anomaly
EventType = Process.Start
Tag = proc-start-whoami.exe-execution-anomaly
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\whoami.exe" or Process.Name == "whoami.exe") and not (Parent.Path like r"%\\cmd.exe" or Parent.Path like r"%\\powershell\_ise.exe" or Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe" or isnull(Parent.Path) or Parent.Path == "") and not Parent.Path like r"%:\\Program Files\\Microsoft Monitoring Agent\\Agent\\MonitoringHost.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects file execution using the msdeploy.exe lolbin
# Author: Beyu Denis, oscd.community
RuleId = 646bc99f-6682-4b47-a73a-17b1b64c9d34
RuleName = Execute Files with Msdeploy.exe
EventType = Process.Start
Tag = proc-start-execute-files-with-msdeploy.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Beyu Denis, oscd.community"}
Query = Process.CommandLine like r"%verb:sync%" and Process.CommandLine like r"%-source:RunCommand%" and Process.CommandLine like r"%-dest:runCommand%" and Process.Path like r"%\\msdeploy.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of Self Extraction Directive files (.sed) in a potentially suspicious location.
# These files are used by the "iexpress.exe" utility in order to create self extracting packages.
# Attackers were seen abusing this utility and creating PE files with embedded ".sed" entries.
# Author: Joseliyo Sanchez, @Joseliyo_Jstnk
RuleId = 760e75d8-c3b5-409b-a9bf-6130b4c4603f
RuleName = Self Extraction Directive File Created In Potentially Suspicious Location
EventType = File.Create
Tag = self-extraction-directive-file-created-in-potentially-suspicious-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Joseliyo Sanchez, @Joseliyo_Jstnk"}
Query = (File.Path like r"%:\\ProgramData\\%" or File.Path like r"%:\\Temp\\%" or File.Path like r"%:\\Windows\\System32\\Tasks\\%" or File.Path like r"%:\\Windows\\Tasks\\%" or File.Path like r"%:\\Windows\\Temp\\%" or File.Path like r"%\\AppData\\Local\\Temp\\%") and File.Path like r"%.sed"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential abuse of the "register_app.vbs" script that is part of the Windows SDK. The script offers the capability to register new VSS/VDS Provider as a COM+ application. Attackers can use this to install malicious DLLs for persistence and execution.
# Author: Austin Songer @austinsonger
RuleId = 28c8f68b-098d-45af-8d43-8089f3e35403
RuleName = Potential Register_App.Vbs LOLScript Abuse
EventType = Process.Start
Tag = proc-start-potential-register_app.vbs-lolscript-abuse
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Austin Songer @austinsonger"}
Query = (Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Name in ["cscript.exe", "wscript.exe"]) and Process.CommandLine like r"%.vbs -register %"


[ActivityMonitoringRule platform=Windows]
# Detects execution of of Dxcap.exe
# Author: Beyu Denis, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 60f16a96-db70-42eb-8f76-16763e333590
RuleName = Application Whitelisting Bypass via Dxcap.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-dxcap.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Beyu Denis, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\DXCap.exe" or Process.Name == "DXCap.exe") and Process.CommandLine like r"% -c %"


[ActivityMonitoringRule platform=Windows]
# Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications.
# Author: Bhabesh Raj
RuleId = 9d15044a-7cfe-4d23-8085-6ebc11df7685
RuleName = Potential Persistence Via Visual Studio Tools for Office
EventType = Reg.Any
Tag = potential-persistence-via-visual-studio-tools-for-office
RiskScore = 50
Annotation = {"mitre_attack": ["T1137.006"], "author": "Bhabesh Raj"}
Query = (Reg.TargetObject like r"%\\Software\\Microsoft\\Office\\Outlook\\Addins\\%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Office\\Word\\Addins\\%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Office\\Excel\\Addins\\%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Office\\Powerpoint\\Addins\\%" or Reg.TargetObject like r"%\\Software\\Microsoft\\VSTO\\Security\\Inclusion\\%") and not (Process.Path like r"%\\msiexec.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\excel.exe" or Process.Path like r"%\\integrator.exe" or Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path like r"%\\winword.exe" or Process.Path like r"%\\visio.exe" or Process.Path like r"%\\Teams.exe" or Process.Path == "C:\\Program Files\\AVG\\Antivirus\\RegSvr.exe" and Reg.TargetObject like r"%\\Microsoft\\Office\\Outlook\\Addins\\Antivirus.AsOutExt\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious CommandLine of electron apps (teams, discord, slack, etc.). This could be a sign of abuse to proxy execution through a signed binary.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 378a05d8-963c-46c9-bcce-13c7657eac99
RuleName = Potentially Suspicious Electron Application CommandLine
EventType = Process.Start
Tag = proc-start-potentially-suspicious-electron-application-commandline
RiskScore = 50
Annotation = {"author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\code.exe" or Process.Path like r"%\\discord.exe" or Process.Path like r"%\\GitHubDesktop.exe" or Process.Path like r"%\\keybase.exe" or Process.Path like r"%\\msedge\_proxy.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe" or Process.Path like r"%\\msteams.exe" or Process.Path like r"%\\slack.exe" or Process.Path like r"%\\Teams.exe" or Process.Name in ["chrome.exe", "code.exe", "discord.exe", "GitHubDesktop.exe", "keybase.exe", "msedge\_proxy.exe", "msedge.exe", "msedgewebview2.exe", "msteams.exe", "slack.exe", "Teams.exe"]) and (Process.CommandLine like r"%--browser-subprocess-path%" or Process.CommandLine like r"%--gpu-launcher%" or Process.CommandLine like r"%--renderer-cmd-prefix%" or Process.CommandLine like r"%--utility-cmd-prefix%")


[ActivityMonitoringRule platform=Windows]
# Detects changes to the "ServiceDLL" value related to a service in the registry. This is often used as a method of persistence.
# Author: frack113
RuleId = 612e47e9-8a59-43a6-b404-f48683f45bd6
RuleName = ServiceDll Hijack
EventType = Reg.Any
Tag = servicedll-hijack
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003"], "author": "frack113"}
Query = Reg.TargetObject like r"HKLM\\System\\CurrentControlSet\\Services\\%" and Reg.TargetObject like r"%\\Parameters\\ServiceDll" and not (Reg.Value.Data == "C:\\Windows\\system32\\spool\\drivers\\x64\\3\\PrintConfig.dll" or Process.Path == "C:\\Windows\\system32\\lsass.exe" and Reg.TargetObject like r"%\\CurrentControlSet\\Services\\NTDS\\Parameters\\ServiceDll" and Reg.Value.Data == "\%\%systemroot\%\%\\system32\\ntdsa.dll" or Process.Path == "C:\\Windows\\System32\\poqexec.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Adversaries may establish persistence by executing malicious content triggered by user inactivity.
# Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
# Author: frack113
RuleId = 97aa2e88-555c-450d-85a6-229bcd87efb8
RuleName = Suspicious Screensaver Binary File Creation
EventType = File.Create
Tag = suspicious-screensaver-binary-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.002"], "author": "frack113"}
Query = File.Path like r"%.scr" and not (Process.Path like r"%\\Kindle.exe" or Process.Path like r"%\\Bin\\ccSvcHst.exe" or Process.Path like r"%\\TiWorker.exe" and File.Path like r"%\\uwfservicingscr.scr")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential network sniffing via use of network tools such as "tshark", "windump".
# Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.
# An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.
# Author: Timur Zinniatullin, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = ba1f7802-adc7-48b4-9ecb-81e227fddfd5
RuleName = Potential Network Sniffing Activity Using Network Tools
EventType = Process.Start
Tag = proc-start-potential-network-sniffing-activity-using-network-tools
RiskScore = 50
Annotation = {"mitre_attack": ["T1040"], "author": "Timur Zinniatullin, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\tshark.exe" and Process.CommandLine like r"%-i%" or Process.Path like r"%\\windump.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of AdvancedRun utility
# Author: Florian Roth (Nextron Systems)
RuleId = d2b749ee-4225-417e-b20e-a8d2193cbb84
RuleName = PUA - AdvancedRun Execution
EventType = Process.Start
Tag = proc-start-pua-advancedrun-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.003", "T1134.002", "T1059.003"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Name == "AdvancedRun.exe" or Process.CommandLine like r"% /EXEFilename %" and Process.CommandLine like r"% /Run%" or Process.CommandLine like r"% /WindowState 0%" and Process.CommandLine like r"% /RunAs %" and Process.CommandLine like r"% /CommandLine %"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious processes based on name and location that access the windows credential manager and vault.
# Which can be a sign of credential stealing. Example case would be usage of mimikatz "dpapi::cred" function
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 407aecb1-e762-4acf-8c7b-d087bcff3bb6
RuleName = Credential Manager Access By Uncommon Application
EventType = File.Read
Tag = credential-manager-access-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (File.Path like r"%\\AppData\\Local\\Microsoft\\Credentials\\%" or File.Path like r"%\\AppData\\Roaming\\Microsoft\\Credentials\\%" or File.Path like r"%\\AppData\\Local\\Microsoft\\Vault\\%" or File.Path like r"%\\ProgramData\\Microsoft\\Vault\\%") and not (Process.Path like r"%:\\Program Files\\%" or Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\Windows\\system32\\%" or Process.Path like r"%:\\Windows\\SysWOW64\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)
# Author: frack113
RuleId = b27077d6-23e6-45d2-81a0-e2b356eea5fd
RuleName = Use of TTDInject.exe
EventType = Process.Start
Tag = proc-start-use-of-ttdinject.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "frack113"}
Query = Process.Path like r"%ttdinject.exe" or Process.Name == "TTDInject.EXE"


[ActivityMonitoringRule platform=Windows]
# Commandline to launch powershell with a base64 payload
# Author: frack113
RuleId = fb843269-508c-4b76-8b8d-88679db22ce7
RuleName = Suspicious Execution of Powershell with Base64
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-powershell-with-base64
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "frack113"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"% -e %" or Process.CommandLine like r"% -en %" or Process.CommandLine like r"% -enc %" or Process.CommandLine like r"% -enco%" or Process.CommandLine like r"% -ec %") and not (Process.CommandLine like r"% -Encoding %" or Parent.Path like r"%C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\%" or Parent.Path like r"%\\gc\_worker.exe%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects changing the PowerShell script execution policy to a potentially insecure level using the "-ExecutionPolicy" flag.
# Author: frack113
RuleId = 87e3c4e8-a6a8-4ad9-bb4f-46e7ff99a180
RuleName = Change PowerShell Policies to an Insecure Level
EventType = Process.Start
Tag = proc-start-change-powershell-policies-to-an-insecure-level
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "frack113"}
Query = (Process.Name in ["PowerShell.EXE", "pwsh.dll"] or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"%-executionpolicy %" or Process.CommandLine like r"% -ep %" or Process.CommandLine like r"% -exec %") and (Process.CommandLine like r"%Bypass%" or Process.CommandLine like r"%Unrestricted%")


[ActivityMonitoringRule platform=Windows]
# Detects wscript/cscript executions of scripts located in user directories
# Author: Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = cea72823-df4d-4567-950c-0b579eaf0846
RuleName = Potential Dropper Script Execution Via WScript/CScript
EventType = Process.Start
Tag = proc-start-potential-dropper-script-execution-via-wscript/cscript
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.005", "T1059.007"], "author": "Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe") and (Process.CommandLine like r"%:\\Temp\\%" or Process.CommandLine like r"%:\\Tmp\\%" or Process.CommandLine like r"%:\\Users\\Public\\%" or Process.CommandLine like r"%:\\Windows\\Temp\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%") and (Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.jse%" or Process.CommandLine like r"%.vba%" or Process.CommandLine like r"%.vbe%" or Process.CommandLine like r"%.vbs%" or Process.CommandLine like r"%.wsf%")


[ActivityMonitoringRule platform=Windows]
# Detects file access requests to the Windows Sysvol Policies Share by uncommon processes
# Author: frack113
RuleId = 8344c19f-a023-45ff-ad63-a01c5396aea0
RuleName = Access To Sysvol Policies Share By Uncommon Process
EventType = File.Read
Tag = access-to-sysvol-policies-share-by-uncommon-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.006"], "author": "frack113"}
Query = File.Path like r"\\%" and File.Path like r"%\\sysvol\\%" and File.Path like r"%\\Policies\\%" and not (Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\Program Files\\%" or Process.Path like r"%:\\Windows\\explorer.exe%" or Process.Path like r"%:\\Windows\\system32\\%" or Process.Path like r"%:\\Windows\\SysWOW64\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects file modifications to the temporary xml user database file indicating local user modification in the ScreenConnect server.
# This will occur during exploitation of the ScreenConnect Authentication Bypass vulnerability (CVE-2024-1709) in versions <23.9.8, but may also be observed when making legitimate modifications to local users or permissions.
# Author: Matt Anderson, Andrew Schwartz, Caleb Stewart, Huntress
RuleId = 1a821580-588b-4323-9422-660f7e131020
RuleName = ScreenConnect User Database Modification
EventType = File.Create
Tag = screenconnect-user-database-modification
RiskScore = 50
Annotation = {"author": "Matt Anderson, Andrew Schwartz, Caleb Stewart, Huntress"}
Query = File.Path like r"%.xml" and File.Path like r"%Temp%" and File.Path like r"%ScreenConnect%" and Process.Path like r"%\\ScreenConnect.Service.exe"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of wmic with the "qfe" flag in order to obtain information about installed hotfix updates on the system. This is often used by pentester and attacker enumeration scripts
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = dfd2fcb7-8bd5-4daa-b132-5adb61d6ad45
RuleName = Windows Hotfix Updates Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-windows-hotfix-updates-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and Process.CommandLine like r"% qfe%"


[ActivityMonitoringRule platform=Windows]
# Detect use of Ilasm.exe to compile c# code into dll or exe.
# Author: frack113
RuleId = 850d55f9-6eeb-4492-ad69-a72338f65ba4
RuleName = Ilasm Lolbin Use Compile C-Sharp
EventType = Process.Start
Tag = proc-start-ilasm-lolbin-use-compile-c-sharp
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "frack113"}
Query = Process.Path like r"%\\ilasm.exe" or Process.Name == "ilasm.exe"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "curl.exe" with the "file://" protocol handler in order to read local files.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = aa6f6ea6-0676-40dd-b510-6e46f02d8867
RuleName = Local File Read Using Curl.EXE
EventType = Process.Start
Tag = proc-start-local-file-read-using-curl.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and Process.CommandLine like r"%file:///%"


[ActivityMonitoringRule platform=Windows]
# Detects Kerberos DLL being loaded by an Office Product
# Author: Antonlovesdnb
RuleId = 7417e29e-c2e7-4cf6-a2e8-767228c64837
RuleName = Active Directory Kerberos DLL Loaded Via Office Application
EventType = Image.Load
Tag = active-directory-kerberos-dll-loaded-via-office-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Antonlovesdnb"}
Query = (Process.Path like r"%\\excel.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\onenote.exe" or Process.Path like r"%\\onenoteim.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and Image.Path like r"%\\kerberos.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects tampering of RDP Terminal Service/Server sensitive settings.
# Such as allowing unauthorized users access to a system via the 'fAllowUnsolicited' or enabling RDP via 'fDenyTSConnections', etc.
# Author: Samir Bousseaden, David ANDRE, Roberto Rodriguez @Cyb3rWard0g, Nasreddine Bencherchali
RuleId = a2863fbc-d5cb-48d5-83fb-d976d4b1743b
RuleName = RDP Sensitive Settings Changed to Zero
EventType = Reg.Any
Tag = rdp-sensitive-settings-changed-to-zero
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Samir Bousseaden, David ANDRE, Roberto Rodriguez @Cyb3rWard0g, Nasreddine Bencherchali"}
Query = (Reg.TargetObject like r"%\\fDenyTSConnections" or Reg.TargetObject like r"%\\fSingleSessionPerUser" or Reg.TargetObject like r"%\\UserAuthentication") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the "iexpress.exe" utility creating self-extracting packages.
# Attackers where seen leveraging "iexpress" to compile packages on the fly via ".sed" files.
# Investigate the command line options provided to "iexpress" and in case of a ".sed" file, check the contents and legitimacy of it.
# Author: Joseliyo Sanchez, @Joseliyo_Jstnk
RuleId = c2b478fc-09bf-40b2-8768-ab3ec8d61c9a
RuleName = New Self Extracting Package Created Via IExpress.EXE
EventType = Process.Start
Tag = proc-start-new-self-extracting-package-created-via-iexpress.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Joseliyo Sanchez, @Joseliyo_Jstnk"}
Query = Parent.Path like r"%\\iexpress.exe" and (Process.Path like r"%\\makecab.exe" or Process.Name == "makecab.exe") or (Process.Path like r"%\\iexpress.exe" or Process.Name == "IEXPRESS.exe") and Process.CommandLine like r"% /n %"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects password change for the logged-on user's via "ksetup.exe"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c9783e20-4793-4164-ba96-d9ee483992c4
RuleName = Logged-On User Password Change Via Ksetup.EXE
EventType = Process.Start
Tag = proc-start-logged-on-user-password-change-via-ksetup.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ksetup.exe" or Process.Name == "ksetup.exe") and Process.CommandLine like r"% /ChangePassword %"


[ActivityMonitoringRule platform=Windows]
# Detect attacker collecting audio via SoundRecorder application.
# Author: E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community
RuleId = 83865853-59aa-449e-9600-74b9d89a6d6e
RuleName = Audio Capture via SoundRecorder
EventType = Process.Start
Tag = proc-start-audio-capture-via-soundrecorder
RiskScore = 50
Annotation = {"mitre_attack": ["T1123"], "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community"}
Query = Process.Path like r"%\\SoundRecorder.exe" and Process.CommandLine like r"%/FILE%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "Ldifde.exe" with the import flag "-i". The can be abused to include HTTP-based arguments which will allow the arbitrary download of files from a remote server.
# Author: @gott_cyber
RuleId = 6f535e01-ca1f-40be-ab8d-45b19c0c8b7f
RuleName = Import LDAP Data Interchange Format File Via Ldifde.EXE
EventType = Process.Start
Tag = proc-start-import-ldap-data-interchange-format-file-via-ldifde.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1105"], "author": "@gott_cyber"}
Query = (Process.Path like r"%\\ldifde.exe" or Process.Name == "ldifde.exe") and Process.CommandLine like r"%-i%" and Process.CommandLine like r"%-f%"


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker tries to disable User Account Control (UAC) by changing its registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA from 1 to 0
# Author: frack113
RuleId = 48437c39-9e5f-47fb-af95-3d663c3f2919
RuleName = Disable UAC Using Registry
EventType = Reg.Any
Tag = disable-uac-using-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1548.002"], "author": "frack113"}
Query = Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA%" and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
# Author: Trent Liffick
RuleId = 33339be3-148b-4e16-af56-ad16ec6c7e7b
RuleName = Findstr Launching .lnk File
EventType = Process.Start
Tag = proc-start-findstr-launching-.lnk-file
RiskScore = 50
Annotation = {"mitre_attack": ["T1036", "T1202", "T1027.003"], "author": "Trent Liffick"}
Query = (Process.Path like r"%\\find.exe" or Process.Path like r"%\\findstr.exe" or Process.Name in ["FIND.EXE", "FINDSTR.EXE"]) and (Process.CommandLine like r"%.lnk" or Process.CommandLine like r"%.lnk\"" or Process.CommandLine like r"%.lnk'")


[ActivityMonitoringRule platform=Windows]
# Detects setting of a new registry value related to BgInfo configuration, which can be abused to execute custom WMI query via "BgInfo.exe"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = cd277474-5c52-4423-a52b-ac2d7969902f
RuleName = New BgInfo.EXE Custom WMI Query Registry Configuration
EventType = Reg.Any
Tag = new-bginfo.exe-custom-wmi-query-registry-configuration
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "SetValue" and Reg.TargetObject like r"%\\Software\\Winternals\\BGInfo\\UserFields\\%" and Reg.Value.Data like r"6%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data
GenericProperty3 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of a signed dbghelp.dll by the Sysinternals VMMap.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 98ffaed4-aec2-4e04-9b07-31492fe68b3d
RuleName = VMMap Signed Dbghelp.DLL Potential Sideloading
EventType = Image.Load
Tag = vmmap-signed-dbghelp.dll-potential-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%C:\\Debuggers\\dbghelp.dll%" and (Process.Path like r"%\\vmmap.exe" or Process.Path like r"%\\vmmap64.exe") and Image.IsSigned == "true"
GenericProperty1 = Image.Path
GenericProperty2 = Image.IsSigned


[ActivityMonitoringRule platform=Windows]
# Detects when verclsid.exe is used to run COM object via GUID
# Author: Victor Sergeev, oscd.community
RuleId = d06be4b9-8045-428b-a567-740a26d9db25
RuleName = Verclsid.exe Runs COM Object
EventType = Process.Start
Tag = proc-start-verclsid.exe-runs-com-object
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Victor Sergeev, oscd.community"}
Query = (Process.Path like r"%\\verclsid.exe" or Process.Name == "verclsid.exe") and Process.CommandLine like r"%/S%" and Process.CommandLine like r"%/C%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of winget to add new additional download sources
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 05ebafc8-7aa2-4bcd-a269-2aec93f9e842
RuleName = Add New Download Source To Winget
EventType = Process.Start
Tag = proc-start-add-new-download-source-to-winget
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\winget.exe" or Process.Name == "winget.exe") and Process.CommandLine like r"%source %" and Process.CommandLine like r"%add %"


[ActivityMonitoringRule platform=Windows]
# Detects usage of "msedge_proxy.exe" to download arbitrary files
# Author: Swachchhanda Shrawan Poudel
RuleId = e84d89c4-f544-41ca-a6af-4b92fd38b023
RuleName = Arbitrary File Download Via MSEDGE_PROXY.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-msedge_proxy.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Swachchhanda Shrawan Poudel"}
Query = (Process.Path like r"%\\msedge\_proxy.exe" or Process.Name == "msedge\_proxy.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%")


[ActivityMonitoringRule platform=Windows]
# Detects a suspicious copy operation that tries to copy a program from system (System32, SysWOW64, WinSxS) directories to another on disk.
# Often used to move LOLBINs such as 'certutil' or 'desktopimgdownldr' to a different location with a different name in order to bypass detections based on locations.
# Author: Florian Roth (Nextron Systems), Markus Neis, Tim Shelton (HAWK.IO), Nasreddine Bencherchali (Nextron Systems)
RuleId = fff9d2b7-e11c-4a69-93d3-40ef66189767
RuleName = Suspicious Copy From or To System Directory
EventType = Process.Start
Tag = proc-start-suspicious-copy-from-or-to-system-directory
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.003"], "author": "Florian Roth (Nextron Systems), Markus Neis, Tim Shelton (HAWK.IO), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%copy %" or (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"%copy-item%" or Process.CommandLine like r"% copy %" or Process.CommandLine like r"%cpi %" or Process.CommandLine like r"% cp %") or Process.Path like r"%\\robocopy.exe" or Process.Path like r"%\\xcopy.exe" or Process.Name in ["robocopy.exe", "XCOPY.EXE"]) and (Process.CommandLine like r"%\\System32%" or Process.CommandLine like r"%\\SysWOW64%" or Process.CommandLine like r"%\\WinSxS%")


[ActivityMonitoringRule platform=Windows]
# An adversary might use WMI to discover information about the system, such as the volume name, size,
# free space, and other disk information. This can be done using the `wmic` command-line utility and has been
# observed being used by threat actors such as Volt Typhoon.
# Author: Stephen Lincoln `@slincoln-aiq`(AttackIQ)
RuleId = c79da740-5030-45ec-a2e0-479e824a562c
RuleName = System Disk And Volume Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-system-disk-and-volume-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047", "T1082"], "author": "Stephen Lincoln `@slincoln-aiq`(AttackIQ)"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%volume%" or Process.CommandLine like r"%path win32\_logicaldisk%")


[ActivityMonitoringRule platform=Windows]
# Detects changes to the Netsh registry key to add a new DLL value. This change might be an indication of a potential persistence attempt by adding a malicious Netsh helper
# Author: Anish Bogati
RuleId = c90362e0-2df3-4e61-94fe-b37615814cb1
RuleName = Potential Persistence Via Netsh Helper DLL - Registry
EventType = Reg.Any
Tag = potential-persistence-via-netsh-helper-dll-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.007"], "author": "Anish Bogati"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\NetSh%" and Reg.Value.Data like r"%.dll%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the use of "DumpMinitool.exe" a tool that allows the dump of process memory via the use of the "MiniDumpWriteDump"
# Author: Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)
RuleId = dee0a7a3-f200-4112-a99b-952196d81e42
RuleName = DumpMinitool Execution
EventType = Process.Start
Tag = proc-start-dumpminitool-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1036", "T1003.001"], "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\DumpMinitool.exe" or Process.Path like r"%\\DumpMinitool.x86.exe" or Process.Path like r"%\\DumpMinitool.arm64.exe" or Process.Name in ["DumpMinitool.exe", "DumpMinitool.x86.exe", "DumpMinitool.arm64.exe"]) and (Process.CommandLine like r"% Full%" or Process.CommandLine like r"% Mini%" or Process.CommandLine like r"% WithHeap%")


[ActivityMonitoringRule platform=Windows]
# Detects port forwarding activity via SSH.exe
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 327f48c1-a6db-4eb8-875a-f6981f1b0183
RuleName = Port Forwarding Activity Via SSH.EXE
EventType = Process.Start
Tag = proc-start-port-forwarding-activity-via-ssh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1572", "T1021.001", "T1021.004"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\ssh.exe" and (Process.CommandLine like r"% -R %" or Process.CommandLine like r"% /R %")


[ActivityMonitoringRule platform=Windows]
# Detects registry modifications that change features of internal Windows tools (malware like Agent Tesla uses this technique)
# Author: frack113, Nasreddine Bencherchali (Nextron Systems), CrimpSec
RuleId = e2482f8d-3443-4237-b906-cc145d87a076
RuleName = Disable Internal Tools or Feature in Registry
EventType = Reg.Any
Tag = disable-internal-tools-or-feature-in-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems), CrimpSec"}
Query = (Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\StartMenuLogOff" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableChangePassword" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableLockWorkstation" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableRegistryTools" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableTaskmgr" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\NoDispBackgroundPage" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\NoDispCPL" or Reg.TargetObject like r"%SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer\\DisableNotificationCenter" or Reg.TargetObject like r"%SOFTWARE\\Policies\\Microsoft\\Windows\\System\\DisableCMD") and Reg.Value.Data == "DWORD (0x00000001)" or (Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\shutdownwithoutlogon" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PushNotifications\\ToastEnabled" or Reg.TargetObject like r"%SYSTEM\\CurrentControlSet\\Control\\Storage\\Write Protection" or Reg.TargetObject like r"%SYSTEM\\CurrentControlSet\\Control\\StorageDevicePolicies\\WriteProtect") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Shadow Copies creation using operating systems utilities, possible credential access
# Author: Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community
RuleId = b17ea6f7-6e90-447e-a799-e6c0a493d6ce
RuleName = Shadow Copies Creation Using Operating Systems Utilities
EventType = Process.Start
Tag = proc-start-shadow-copies-creation-using-operating-systems-utilities
RiskScore = 50
Annotation = {"mitre_attack": ["T1003", "T1003.002", "T1003.003"], "author": "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\vssadmin.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll", "wmic.exe", "VSSADMIN.EXE"]) and Process.CommandLine like r"%shadow%" and Process.CommandLine like r"%create%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of files with certain extensions on a static web site. This can be indicative of potential uploads of a web shell.
# Author: Beyu Denis, oscd.community, Tim Shelton, Thurein Oo
RuleId = 39f1f9f2-9636-45de-98f6-a4046aa8e4b9
RuleName = Potential Webshell Creation On Static Website
EventType = File.Create
Tag = potential-webshell-creation-on-static-website
RiskScore = 50
Annotation = {"mitre_attack": ["T1505.003"], "author": "Beyu Denis, oscd.community, Tim Shelton, Thurein Oo"}
Query = (File.Path like r"%\\inetpub\\wwwroot\\%" and (File.Path like r"%.ashx%" or File.Path like r"%.asp%" or File.Path like r"%.ph%" or File.Path like r"%.soap%") or (File.Path like r"%\\www\\%" or File.Path like r"%\\htdocs\\%" or File.Path like r"%\\html\\%") and File.Path like r"%.ph%") and not (File.Path like r"%\\AppData\\Local\\Temp\\%" or File.Path like r"%\\Windows\\Temp\\%" or Process.Path == "System" or File.Path like r"%\\xampp%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects Rclone config files being created
# Author: Aaron Greetham (@beardofbinary) - NCC Group
RuleId = 34986307-b7f4-49be-92f3-e7a4d01ac5db
RuleName = Rclone Config File Creation
EventType = File.Create
Tag = rclone-config-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1567.002"], "author": "Aaron Greetham (@beardofbinary) - NCC Group"}
Query = File.Path like r"%:\\Users\\%" and File.Path like r"%\\.config\\rclone\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "MSPUB" (Microsoft Publisher) to download arbitrary files
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3b3c7f55-f771-4dd6-8a6e-08d057a17caf
RuleName = Arbitrary File Download Via MSPUB.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-mspub.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\MSPUB.exe" or Process.Name == "MSPUB.exe") and (Process.CommandLine like r"%ftp://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%")


[ActivityMonitoringRule platform=Windows]
# Detects the excution of a potential recon command where the results are piped to "findstr". This is meant to trigger on inline calls of "cmd.exe" via the "/c" or "/k" for example. Attackers often time use this to extract specific information they require in their chain.
# Author: Nasreddine Bencherchali (Nextron Systems), frack113
RuleId = ccb5742c-c248-4982-8c5c-5571b9275ad3
RuleName = Recon Command Output Piped To Findstr.EXE
EventType = Process.Start
Tag = proc-start-recon-command-output-piped-to-findstr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1057"], "author": "Nasreddine Bencherchali (Nextron Systems), frack113"}
Query = Process.CommandLine like r"%ipconfig /all | find %" or Process.CommandLine like r"%ipconfig /all | findstr %" or Process.CommandLine like r"%ipconfig | find %" or Process.CommandLine like r"%ipconfig | findstr %" or Process.CommandLine like r"%ipconfig.exe /all | find %" or Process.CommandLine like r"%ipconfig.exe /all | findstr %" or Process.CommandLine like r"%ipconfig.exe | find %" or Process.CommandLine like r"%ipconfig.exe | findstr %" or Process.CommandLine like r"%net start | find%" or Process.CommandLine like r"%net start | findstr%" or Process.CommandLine like r"%net.exe start | find%" or Process.CommandLine like r"%net.exe start | findstr%" or Process.CommandLine like r"%net1 start | find%" or Process.CommandLine like r"%net1 start | findstr%" or Process.CommandLine like r"%net1.exe start | find%" or Process.CommandLine like r"%net1.exe start | findstr%" or Process.CommandLine like r"%netstat -ano | find%" or Process.CommandLine like r"%netstat -ano | findstr%" or Process.CommandLine like r"%netstat | find%" or Process.CommandLine like r"%netstat | findstr%" or Process.CommandLine like r"%netstat.exe -ano | find%" or Process.CommandLine like r"%netstat.exe -ano | findstr%" or Process.CommandLine like r"%netstat.exe | find%" or Process.CommandLine like r"%netstat.exe | findstr%" or Process.CommandLine like r"%ping | find%" or Process.CommandLine like r"%ping | findstr%" or Process.CommandLine like r"%ping.exe | find%" or Process.CommandLine like r"%ping.exe | findstr%" or Process.CommandLine like r"%systeminfo | find %" or Process.CommandLine like r"%systeminfo | findstr %" or Process.CommandLine like r"%systeminfo.exe | find %" or Process.CommandLine like r"%systeminfo.exe | findstr %" or Process.CommandLine like r"%tasklist | find %" or Process.CommandLine like r"%tasklist | findstr %" or Process.CommandLine like r"%tasklist.exe | find %" or Process.CommandLine like r"%tasklist.exe | findstr %" or Process.CommandLine like r"%whoami /all | find %" or Process.CommandLine like r"%whoami /all | findstr %" or Process.CommandLine like r"%whoami.exe /all | find %" or Process.CommandLine like r"%whoami.exe /all | findstr %"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of certutil with certain flags that allow the utility to download files.
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 19b08b1c-861d-4e75-a1ef-ea0c1baf202b
RuleName = Suspicious Download Via Certutil.EXE
EventType = Process.Start
Tag = proc-start-suspicious-download-via-certutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1027"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\certutil.exe" or Process.Name == "CertUtil.exe") and (Process.CommandLine like r"%urlcache %" or Process.CommandLine like r"%verifyctl %") and Process.CommandLine like r"%http%"


[ActivityMonitoringRule platform=Windows]
# Detect usage of the "driverquery" utility. Which can be used to perform reconnaissance on installed drivers
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a20def93-0709-4eae-9bd2-31206e21e6b2
RuleName = DriverQuery.EXE Execution
EventType = Process.Start
Tag = proc-start-driverquery.exe-execution
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%driverquery.exe" or Process.Name == "drvqry.exe") and not (Parent.Path like r"%\\cscript.exe" or Parent.Path like r"%\\mshta.exe" or Parent.Path like r"%\\regsvr32.exe" or Parent.Path like r"%\\rundll32.exe" or Parent.Path like r"%\\wscript.exe" or Parent.Path like r"%\\AppData\\Local\\%" or Parent.Path like r"%\\Users\\Public\\%" or Parent.Path like r"%\\Windows\\Temp\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a file with the name "code_tunnel.json" which indicate execution and usage of VsCode tunneling utility. Attackers can abuse this functionality to establish a C2 channel
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9661ec9d-4439-4a7a-abed-d9be4ca43b6d
RuleName = VsCode Code Tunnel Execution File Indicator
EventType = File.Create
Tag = vscode-code-tunnel-execution-file-indicator
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\code\_tunnel.json"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects script file execution (.js, .jse, .vba, .vbe, .vbs, .wsf) by Wscript/Cscript
# Author: Michael Haag
RuleId = 1e33157c-53b1-41ad-bbcc-780b80b58288
RuleName = WSF/JSE/JS/VBA/VBE File Execution Via Cscript/Wscript
EventType = Process.Start
Tag = proc-start-wsf/jse/js/vba/vbe-file-execution-via-cscript/wscript
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.005", "T1059.007"], "author": "Michael Haag"}
Query = (Process.Name in ["wscript.exe", "cscript.exe"] or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe") and (Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.jse%" or Process.CommandLine like r"%.vba%" or Process.CommandLine like r"%.vbe%" or Process.CommandLine like r"%.vbs%" or Process.CommandLine like r"%.wsf%")


[ActivityMonitoringRule platform=Windows]
# Detects when a user enables DNS-over-HTTPS.
# This can be used to hide internet activity or be used to hide the process of exfiltrating data.
# With this enabled organization will lose visibility into data such as query type, response and originating IP that are used to determine bad actors.
# Author: Austin Songer
RuleId = 04b45a8a-d11d-49e4-9acc-4a1b524407a5
RuleName = DNS-over-HTTPS Enabled by Registry
EventType = Reg.Any
Tag = dns-over-https-enabled-by-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1140", "T1112"], "author": "Austin Songer"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\Edge\\BuiltInDnsClientEnabled" and Reg.Value.Data == "DWORD (0x00000001)" or Reg.TargetObject like r"%\\SOFTWARE\\Google\\Chrome\\DnsOverHttpsMode" and Reg.Value.Data == "secure" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Mozilla\\Firefox\\DNSOverHTTPS\\Enabled" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects piping the password to an anydesk instance via CMD and the '--set-password' flag.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b1377339-fda6-477a-b455-ac0923f9ec2c
RuleName = Remote Access Tool - AnyDesk Piped Password Via CLI
EventType = Process.Start
Tag = proc-start-remote-access-tool-anydesk-piped-password-via-cli
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%/c %" and Process.CommandLine like r"%echo %" and Process.CommandLine like r"%.exe --set-password%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of winget to install applications via manifest file. Adversaries can abuse winget to download payloads remotely and execute them.
# The manifest option enables you to install an application by passing in a YAML file directly to the client.
# Winget can be used to download and install exe, msi or msix files later.
# Author: Sreeman, Florian Roth (Nextron Systems), frack113
RuleId = 313d6012-51a0-4d93-8dfc-de8553239e25
RuleName = Install New Package Via Winget Local Manifest
EventType = Process.Start
Tag = proc-start-install-new-package-via-winget-local-manifest
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Sreeman, Florian Roth (Nextron Systems), frack113"}
Query = (Process.Path like r"%\\winget.exe" or Process.Name == "winget.exe") and (Process.CommandLine like r"%install%" or Process.CommandLine like r"% add %") and (Process.CommandLine like r"%-m %" or Process.CommandLine like r"%--manifest%")


[ActivityMonitoringRule platform=Windows]
# Detects usage of bitsadmin downloading a file to uncommon target folder
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 6e30c82f-a9f8-4aab-b79c-7c12bce6f248
RuleName = File Download Via Bitsadmin To An Uncommon Target Folder
EventType = Process.Start
Tag = proc-start-file-download-via-bitsadmin-to-an-uncommon-target-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1197", "T1036.003"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"% /transfer %" or Process.CommandLine like r"% /create %" or Process.CommandLine like r"% /addfile %") and (Process.CommandLine like r"%\%AppData\%%" or Process.CommandLine like r"%\%temp\%%" or Process.CommandLine like r"%\%tmp\%%" or Process.CommandLine like r"%\\AppData\\Local\\%" or Process.CommandLine like r"%C:\\Windows\\Temp\\%")


[ActivityMonitoringRule platform=Windows]
# Detects an attempt to leverage dnscmd.exe to enumerate the DNS zones of a domain. DNS zones used to host the DNS records for a particular domain.
# Author: @gott_cyber
RuleId = b6457d63-d2a2-4e29-859d-4e7affc153d1
RuleName = Potential Discovery Activity Via Dnscmd.EXE
EventType = Process.Start
Tag = proc-start-potential-discovery-activity-via-dnscmd.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003"], "author": "@gott_cyber"}
Query = Process.Path like r"%\\dnscmd.exe" and (Process.CommandLine like r"%/enumrecords%" or Process.CommandLine like r"%/enumzones%" or Process.CommandLine like r"%/ZonePrint%" or Process.CommandLine like r"%/info%")


[ActivityMonitoringRule platform=Windows]
# Detects command line usage of "findstr" to search for the "passwords" keyword in a variety of different languages
# Author: Josh Nickels
RuleId = 1a0f6f16-2099-4753-9a02-43b6ac7a1fa5
RuleName = Potential Password Reconnaissance Via Findstr.EXE
EventType = Process.Start
Tag = proc-start-potential-password-reconnaissance-via-findstr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.001"], "author": "Josh Nickels"}
Query = (Process.Path like r"%\\findstr.exe" or Process.Name == "FINDSTR.EXE") and (Process.CommandLine like r"%contraseña%" or Process.CommandLine like r"%hasło%" or Process.CommandLine like r"%heslo%" or Process.CommandLine like r"%parola%" or Process.CommandLine like r"%passe%" or Process.CommandLine like r"%passw%" or Process.CommandLine like r"%senha%" or Process.CommandLine like r"%senord%" or Process.CommandLine like r"%密碼%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of Windows Problem Steps Recorder (psr.exe), a utility used to record the user screen and clicks.
# Author: Beyu Denis, oscd.community
RuleId = 2158f96f-43c2-43cb-952a-ab4580f32382
RuleName = Screen Capture Activity Via Psr.EXE
EventType = Process.Start
Tag = proc-start-screen-capture-activity-via-psr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1113"], "author": "Beyu Denis, oscd.community"}
Query = Process.Path like r"%\\Psr.exe" and (Process.CommandLine like r"%/start%" or Process.CommandLine like r"%-start%")


[ActivityMonitoringRule platform=Windows]
# Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
# Author: frack113, Nasreddine Bencherchali
RuleId = 18988e1b-9087-4f8a-82fe-0414dce49878
RuleName = Execute Code with Pester.bat as Parent
EventType = Process.Start
Tag = proc-start-execute-code-with-pester.bat-as-parent
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1216"], "author": "frack113, Nasreddine Bencherchali"}
Query = (Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe") and Parent.CommandLine like r"%\\WindowsPowerShell\\Modules\\Pester\\%" and (Parent.CommandLine like r"%{ Invoke-Pester -EnableExit ;%" or Parent.CommandLine like r"%{ Get-Help \"%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects a suspicious call to the user32.dll function that locks the user workstation
# Author: frack113
RuleId = 3b5b0213-0460-4e3f-8937-3abf98ff7dcc
RuleName = Suspicious Workstation Locking via Rundll32
EventType = Process.Start
Tag = proc-start-suspicious-workstation-locking-via-rundll32
RiskScore = 50
Annotation = {"author": "frack113"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Parent.Path like r"%\\cmd.exe" and Process.CommandLine like r"%user32.dll,%" and Process.CommandLine like r"%LockWorkStation%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects windows utilities loading an unsigned or untrusted DLL.
# Adversaries often abuse those programs to proxy execution of malicious code.
# Author: Swachchhanda Shrawan Poudel
RuleId = b5de0c9a-6f19-43e0-af4e-55ad01f550af
RuleName = Unsigned DLL Loaded by Windows Utility
EventType = Image.Load
Tag = unsigned-dll-loaded-by-windows-utility
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011", "T1218.010"], "author": "Swachchhanda Shrawan Poudel"}
Query = (Process.Path like r"%\\InstallUtil.exe" or Process.Path like r"%\\RegAsm.exe" or Process.Path like r"%\\RegSvcs.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe") and not (Image.IsSigned == "true" or Image.SignatureStatus in ["errorChaining", "errorCode\_endpoint", "errorExpired", "trusted"] or isnull(Image.IsSigned) or Image.IsSigned in ["", "-"] or isnull(Image.SignatureStatus) or Image.SignatureStatus in ["", "-"])
GenericProperty1 = Image.IsSigned
GenericProperty2 = Image.SignatureStatus


[ActivityMonitoringRule platform=Windows]
# Detects DNS query requests to Cloudflared tunnels domains.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a1d9eec5-33b2-4177-8d24-27fe754d0812
RuleName = Cloudflared Tunnels Related DNS Requests
EventType = Dns.Query
Tag = cloudflared-tunnels-related-dns-requests
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Dns.QueryRequest like r"%.v2.argotunnel.com" or Dns.QueryRequest like r"%protocol-v2.argotunnel.com" or Dns.QueryRequest like r"%trycloudflare.com" or Dns.QueryRequest like r"%update.argotunnel.com"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects usage of "MSOHTMED" to download arbitrary files
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 459f2f98-397b-4a4a-9f47-6a5ec2f1c69d
RuleName = Arbitrary File Download Via MSOHTMED.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-msohtmed.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\MSOHTMED.exe" or Process.Name == "MsoHtmEd.exe") and (Process.CommandLine like r"%ftp://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%")


[ActivityMonitoringRule platform=Windows]
# Detect attempts to query the contents of the event log using command line utilities. Attackers use this technique in order to look for sensitive information in the logs such as passwords, usernames, IPs, etc.
# Author: Ali Alwashali, Nasreddine Bencherchali (Nextron Systems)
RuleId = 9cd55b6c-430a-4fa9-96f4-7cadf5229e9f
RuleName = EventLog Query Requests By Builtin Utilities
EventType = Process.Start
Tag = proc-start-eventlog-query-requests-by-builtin-utilities
RiskScore = 50
Annotation = {"mitre_attack": ["T1552"], "author": "Ali Alwashali, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Select%" and Process.CommandLine like r"%Win32\_NTLogEvent%" or (Process.Path like r"%\\wevtutil.exe" or Process.Name == "wevtutil.exe") and (Process.CommandLine like r"% qe %" or Process.CommandLine like r"% query-events %") or (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"% ntevent%" or Process.CommandLine like r"%Get-WinEvent %" or Process.CommandLine like r"%get-eventlog %"


[ActivityMonitoringRule platform=Windows]
# Adversaries may modify system firewalls in order to bypass controls limiting network usage
# Author: frack113
RuleId = 347906f3-e207-4d18-ae5b-a9403d6bcdef
RuleName = Netsh Allow Group Policy on Microsoft Defender Firewall
EventType = Process.Start
Tag = proc-start-netsh-allow-group-policy-on-microsoft-defender-firewall
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "frack113"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"%advfirewall%" and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%rule%" and Process.CommandLine like r"%group=%" and Process.CommandLine like r"%new%" and Process.CommandLine like r"%enable=Yes%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of some potentially unwanted tools such as PsExec, Procdump, etc. (part of the Sysinternals suite) via the creation of the "accepteula" registry key.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c7da8edc-49ae-45a2-9e61-9fd860e4e73d
RuleName = PUA - Sysinternals Tools Execution - Registry
EventType = Reg.Any
Tag = pua-sysinternals-tools-execution-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1588.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "CreateKey" and (Reg.TargetObject like r"%\\Active Directory Explorer%" or Reg.TargetObject like r"%\\Handle%" or Reg.TargetObject like r"%\\LiveKd%" or Reg.TargetObject like r"%\\Process Explorer%" or Reg.TargetObject like r"%\\ProcDump%" or Reg.TargetObject like r"%\\PsExec%" or Reg.TargetObject like r"%\\PsLoglist%" or Reg.TargetObject like r"%\\PsPasswd%" or Reg.TargetObject like r"%\\SDelete%" or Reg.TargetObject like r"%\\Sysinternals%") and Reg.TargetObject like r"%\\EulaAccepted"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects a JAVA process running with remote debugging allowing more than just localhost to connect
# Author: Florian Roth (Nextron Systems)
RuleId = 8f88e3f6-2a49-48f5-a5c4-2f7eedf78710
RuleName = Java Running with Remote Debugging
EventType = Process.Start
Tag = proc-start-java-running-with-remote-debugging
RiskScore = 50
Annotation = {"mitre_attack": ["T1203"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"%transport=dt\_socket,address=%" and (Process.CommandLine like r"%jre1.%" or Process.CommandLine like r"%jdk1.%") and not (Process.CommandLine like r"%address=127.0.0.1%" or Process.CommandLine like r"%address=localhost%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of the "PSScriptPolicyTest" PowerShell script by an uncommon process. This file is usually generated by Microsoft Powershell to test against Applocker.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1027d292-dd87-4a1a-8701-2abe04d7783c
RuleName = PSScriptPolicyTest Creation By Uncommon Process
EventType = File.Create
Tag = psscriptpolicytest-creation-by-uncommon-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\_\_PSScriptPolicyTest\_%" and not (Process.Path like r"%:\\Program Files\\PowerShell\\7-preview\\pwsh.exe" or Process.Path like r"%:\\Program Files\\PowerShell\\7\\pwsh.exe" or Process.Path like r"%:\\Windows\\System32\\dsac.exe" or Process.Path like r"%:\\Windows\\System32\\sdiagnhost.exe" or Process.Path like r"%:\\Windows\\System32\\ServerManager.exe" or Process.Path like r"%:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell\_ise.exe" or Process.Path like r"%:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe" or Process.Path like r"%:\\Windows\\System32\\wsmprovhost.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\sdiagnhost.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell\_ise.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects DNS queries for IP lookup services such as "api.ipify.org" originating from a non browser process.
# Author: Brandon George (blog post), Thomas Patzke
RuleId = ec82e2a5-81ea-4211-a1f8-37a0286df2c2
RuleName = Suspicious DNS Query for IP Lookup Service APIs
EventType = Dns.Query
Tag = suspicious-dns-query-for-ip-lookup-service-apis
RiskScore = 50
Annotation = {"mitre_attack": ["T1590"], "author": "Brandon George (blog post), Thomas Patzke"}
Query = (Dns.QueryRequest in ["www.ip.cn", "l2.io"] or Dns.QueryRequest like r"%api.2ip.ua%" or Dns.QueryRequest like r"%api.bigdatacloud.net%" or Dns.QueryRequest like r"%api.ipify.org%" or Dns.QueryRequest like r"%bot.whatismyipaddress.com%" or Dns.QueryRequest like r"%canireachthe.net%" or Dns.QueryRequest like r"%checkip.amazonaws.com%" or Dns.QueryRequest like r"%checkip.dyndns.org%" or Dns.QueryRequest like r"%curlmyip.com%" or Dns.QueryRequest like r"%db-ip.com%" or Dns.QueryRequest like r"%edns.ip-api.com%" or Dns.QueryRequest like r"%eth0.me%" or Dns.QueryRequest like r"%freegeoip.app%" or Dns.QueryRequest like r"%geoipy.com%" or Dns.QueryRequest like r"%getip.pro%" or Dns.QueryRequest like r"%icanhazip.com%" or Dns.QueryRequest like r"%ident.me%" or Dns.QueryRequest like r"%ifconfig.io%" or Dns.QueryRequest like r"%ifconfig.me%" or Dns.QueryRequest like r"%ip-api.com%" or Dns.QueryRequest like r"%ip.360.cn%" or Dns.QueryRequest like r"%ip.anysrc.net%" or Dns.QueryRequest like r"%ip.taobao.com%" or Dns.QueryRequest like r"%ip.tyk.nu%" or Dns.QueryRequest like r"%ipaddressworld.com%" or Dns.QueryRequest like r"%ipapi.co%" or Dns.QueryRequest like r"%ipconfig.io%" or Dns.QueryRequest like r"%ipecho.net%" or Dns.QueryRequest like r"%ipinfo.io%" or Dns.QueryRequest like r"%ipip.net%" or Dns.QueryRequest like r"%ipof.in%" or Dns.QueryRequest like r"%ipv4.icanhazip.com%" or Dns.QueryRequest like r"%ipv4bot.whatismyipaddress.com%" or Dns.QueryRequest like r"%ipv6-test.com%" or Dns.QueryRequest like r"%ipwho.is%" or Dns.QueryRequest like r"%jsonip.com%" or Dns.QueryRequest like r"%myexternalip.com%" or Dns.QueryRequest like r"%seeip.org%" or Dns.QueryRequest like r"%wgetip.com%" or Dns.QueryRequest like r"%whatismyip.akamai.com%" or Dns.QueryRequest like r"%whois.pconline.com.cn%" or Dns.QueryRequest like r"%wtfismyip.com%") and not (Process.Path like r"%\\brave.exe" or Process.Path in ["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"] or Process.Path in ["C:\\Program Files\\Mozilla Firefox\\firefox.exe", "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"] or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or Process.Path like r"%\\maxthon.exe" or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\%" or Process.Path like r"%\\WindowsApps\\MicrosoftEdge.exe" or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeCore\\%" or Process.Path like r"C:\\Program Files\\Microsoft\\EdgeCore\\%") and (Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe") or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe")
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software
# Author: frack113
RuleId = caa02837-f659-466f-bca6-48bde2826ab4
RuleName = Potential DLL Sideloading Via ClassicExplorer32.dll
EventType = Image.Load
Tag = potential-dll-sideloading-via-classicexplorer32.dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "frack113"}
Query = Image.Path like r"%\\ClassicExplorer32.dll" and not Image.Path like r"C:\\Program Files\\Classic Shell\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "ms-appinstaller" protocol handler via command line to potentially download arbitrary files via AppInstaller.EXE
# The downloaded files are temporarly stored in ":\Users\%username%\AppData\Local\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\AC\INetCache\<RANDOM-8-CHAR-DIRECTORY>"
# Author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel
RuleId = 180c7c5c-d64b-4a63-86e9-68910451bc8b
RuleName = Potential File Download Via MS-AppInstaller Protocol Handler
EventType = Process.Start
Tag = proc-start-potential-file-download-via-ms-appinstaller-protocol-handler
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel"}
Query = Process.CommandLine like r"%ms-appinstaller://_source=%" and Process.CommandLine like r"%http%"


[ActivityMonitoringRule platform=Windows]
# Detects potential registry persistence technique using the Event Viewer "Events.asp" technique
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a1e11042-a74a-46e6-b07c-c4ce8ecc239b
RuleName = Potential Persistence Via Event Viewer Events.asp
EventType = Reg.Any
Tag = potential-persistence-via-event-viewer-events.asp
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgram%" or Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionURL%") and not (Process.Path like r"%C:\\WINDOWS\\system32\\svchost.exe" and Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgram" and Reg.Value.Data == "\%\%SystemRoot\%\%\\PCHealth\\HelpCtr\\Binaries\\HelpCtr.exe" or Process.Path like r"%C:\\WINDOWS\\system32\\svchost.exe" and Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgramCommandLineParameters" and Reg.Value.Data like r"-url hcp://services/centers/support_topic=\%\%s" or Reg.Value.Data == "http://go.microsoft.com/fwlink/events.asp" or Reg.Value.Data == "(Empty)")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs
# Author: frack113
RuleId = 36475a7d-0f6d-4dce-9b01-6aeb473bbaf1
RuleName = SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code
EventType = Process.Start
Tag = proc-start-syncappvpublishingserver-vbs-execute-arbitrary-powershell-code
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1216"], "author": "frack113"}
Query = Process.CommandLine like r"%\\SyncAppvPublishingServer.vbs%" and Process.CommandLine like r"%;%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of CustomShellHost binary where the child isn't located in 'C:\Windows\explorer.exe'
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 84b14121-9d14-416e-800b-f3b829c5a14d
RuleName = Suspicious CustomShellHost Execution
EventType = Process.Start
Tag = proc-start-suspicious-customshellhost-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\CustomShellHost.exe" and not Process.Path == "C:\\Windows\\explorer.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of attrib.exe to hide files from users.
# Author: Sami Ruohonen
RuleId = 4281cb20-2994-4580-aa63-c8b86d019934
RuleName = Hiding Files with Attrib.exe
EventType = Process.Start
Tag = proc-start-hiding-files-with-attrib.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.001"], "author": "Sami Ruohonen"}
Query = (Process.Path like r"%\\attrib.exe" or Process.Name == "ATTRIB.EXE") and Process.CommandLine like r"% +h %" and not (Process.CommandLine like r"%\\desktop.ini %" or Parent.Path like r"%\\cmd.exe" and Process.CommandLine == "+R +H +S +A \\*.cui" and Parent.CommandLine == "C:\\WINDOWS\\system32\\*.bat")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the execution of sigverif binary as a parent process which could indicate it being used as a LOLBIN to proxy execution
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7d4aaec2-08ed-4430-8b96-28420e030e04
RuleName = Suspicious Sigverif Execution
EventType = Process.Start
Tag = proc-start-suspicious-sigverif-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\sigverif.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information
# Author: frack113
RuleId = e56d3073-83ff-4021-90fe-c658e0709e72
RuleName = Gpresult Display Group Policy Information
EventType = Process.Start
Tag = proc-start-gpresult-display-group-policy-information
RiskScore = 50
Annotation = {"mitre_attack": ["T1615"], "author": "frack113"}
Query = Process.Path like r"%\\gpresult.exe" and (Process.CommandLine like r"%/z%" or Process.CommandLine like r"%/v%")


[ActivityMonitoringRule platform=Windows]
# Detects creation of files with the ".one"/".onepkg" extension in suspicious or uncommon locations. This could be a sign of attackers abusing OneNote attachments
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7fd164ba-126a-4d9c-9392-0d4f7c243df0
RuleName = OneNote Attachment File Dropped In Suspicious Location
EventType = File.Create
Tag = onenote-attachment-file-dropped-in-suspicious-location
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (File.Path like r"%\\AppData\\Local\\Temp\\%" or File.Path like r"%\\Users\\Public\\%" or File.Path like r"%\\Windows\\Temp\\%" or File.Path like r"%:\\Temp\\%") and (File.Path like r"%.one" or File.Path like r"%.onepkg") and not (Process.Path like r"%:\\Program Files\\Microsoft Office\\%" and Process.Path like r"%\\ONENOTE.EXE")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects a certain command line flag combination used by "devinit.exe", which can be abused as a LOLBIN to download arbitrary MSI packages on a Windows system
# Author: Florian Roth (Nextron Systems)
RuleId = 90d50722-0483-4065-8e35-57efaadd354d
RuleName = Arbitrary MSI Download Via Devinit.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-msi-download-via-devinit.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"% -t msi-install %" and Process.CommandLine like r"% -i http%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of Microsoft bash launcher with the "-c" flag.
# This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.
# Author: frack113
RuleId = 5edc2273-c26f-406c-83f3-f4d948e740dd
RuleName = Indirect Inline Command Execution Via Bash.EXE
EventType = Process.Start
Tag = proc-start-indirect-inline-command-execution-via-bash.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1202"], "author": "frack113"}
Query = (Process.Path like r"%:\\Windows\\System32\\bash.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\bash.exe" or Process.Name == "Bash.exe") and Process.CommandLine like r"% -c %"


[ActivityMonitoringRule platform=Windows]
# Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads
# Author: frack113
RuleId = 4a2a2c3e-209f-4d01-b513-4155a540b469
RuleName = Suspicious MsiExec Embedding Parent
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-embedding-parent
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.007"], "author": "frack113"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\cmd.exe") and Parent.CommandLine like r"%MsiExec.exe%" and Parent.CommandLine like r"%-Embedding %" and not (Process.Path like r"%:\\Windows\\System32\\cmd.exe" and Process.CommandLine like r"%C:\\Program Files\\SplunkUniversalForwarder\\bin\\%" or Process.CommandLine like r"%\\DismFoDInstall.cmd%" or Parent.CommandLine like r"%\\MsiExec.exe -Embedding %" and Parent.CommandLine like r"%Global\\MSI0000%")
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the execution of a renamed "ftp.exe" binary based on the PE metadata fields
# Author: Victor Sergeev, oscd.community
RuleId = 277a4393-446c-449a-b0ed-7fdc7795244c
RuleName = Renamed FTP.EXE Execution
EventType = Process.Start
Tag = proc-start-renamed-ftp.exe-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059", "T1202"], "author": "Victor Sergeev, oscd.community"}
Query = Process.Name == "ftp.exe" and not Process.Path like r"%\\ftp.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "forfiles" with the "/c" flag.
# While this is an expected behavior of the tool, it can be abused in order to proxy execution through it with any binary.
# Can be used to bypass application whitelisting.
# Author: Tim Rauch, Elastic, E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community
RuleId = 9aa5106d-bce3-4b13-86df-3a20f1d5cf0b
RuleName = Forfiles Command Execution
EventType = Process.Start
Tag = proc-start-forfiles-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Tim Rauch, Elastic, E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community"}
Query = (Process.Path like r"%\\forfiles.exe" or Process.Name == "forfiles.exe") and (Process.CommandLine like r"% -c %" or Process.CommandLine like r"% /c %")


[ActivityMonitoringRule platform=Windows]
# Uses the .NET InstallUtil.exe application in order to execute image without log
# Author: frack113
RuleId = d042284c-a296-4988-9be5-f424fadcc28c
RuleName = Suspicious Execution of InstallUtil Without Log
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-installutil-without-log
RiskScore = 50
Annotation = {"author": "frack113"}
Query = Process.Path like r"%\\InstallUtil.exe" and Process.Path like r"%Microsoft.NET\\Framework%" and Process.CommandLine like r"%/logfile= %" and Process.CommandLine like r"%/LogToConsole=false%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of the Impersonate tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively
# Author: Sai Prashanth Pulisetti @pulisettis
RuleId = cf0c254b-22f1-4b2b-8221-e137b3c0af94
RuleName = HackTool - Impersonate Execution
EventType = Process.Start
Tag = proc-start-hacktool-impersonate-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1134.001", "T1134.003"], "author": "Sai Prashanth Pulisetti @pulisettis"}
Query = Process.CommandLine like r"%impersonate.exe%" and (Process.CommandLine like r"% list %" or Process.CommandLine like r"% exec %" or Process.CommandLine like r"% adduser %") or Process.Hashes like r"%MD5=9520714AB576B0ED01D1513691377D01%" or Process.Hashes like r"%SHA256=E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A%" or Process.Hashes like r"%IMPHASH=0A358FFC1697B7A07D0E817AC740DF62%" or Process.Hash.MD5 == "9520714AB576B0ED01D1513691377D01" or Process.Hash.SHA256 == "E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A" or Process.Hash.IMP == "0A358FFC1697B7A07D0E817AC740DF62"
GenericProperty1 = Process.Hash.MD5
GenericProperty2 = Process.Hash.SHA256
GenericProperty3 = Process.Hash.IMP
GenericProperty4 = Process.Hashes


[ActivityMonitoringRule platform=Windows]
# Detects potential suspicious execution of a GUID like folder name located in a suspicious location such as %TEMP% as seen being used in IcedID attacks
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 90b63c33-2b97-4631-a011-ceb0f47b77c3
RuleName = Suspicious Execution From GUID Like Folder Names
EventType = Process.Start
Tag = proc-start-suspicious-execution-from-guid-like-folder-names
RiskScore = 50
Annotation = {"mitre_attack": ["T1027"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%\\AppData\\Roaming\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%") and Process.CommandLine like r"%\\{%" and Process.CommandLine like r"%}\\%" and not (Process.Path like r"%\\{%" and Process.Path like r"%}\\%" or isnull(Process.Path) or Process.Path == "C:\\Windows\\System32\\drvinst.exe")


[ActivityMonitoringRule platform=Windows]
# Detects creation of "UserInitMprLogonScript" registry value which can be used as a persistence method by malicious actors
# Author: Tom Ueltschi (@c_APT_ure)
RuleId = 9ace0707-b560-49b8-b6ca-5148b42f39fb
RuleName = Potential Persistence Via Logon Scripts - Registry
EventType = Reg.Any
Tag = potential-persistence-via-logon-scripts-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1037.001"], "author": "Tom Ueltschi (@c_APT_ure)"}
Query = Reg.EventType == "CreateKey" and Reg.TargetObject like r"%UserInitMprLogonScript%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# This rule detects suspicious files created by Microsoft Sync Center (mobsync)
# Author: elhoim
RuleId = 409f8a98-4496-4aaa-818a-c931c0a8b832
RuleName = Created Files by Microsoft Sync Center
EventType = File.Create
Tag = created-files-by-microsoft-sync-center
RiskScore = 50
Annotation = {"mitre_attack": ["T1055", "T1218"], "author": "elhoim"}
Query = Process.Path like r"%\\mobsync.exe" and (File.Path like r"%.dll" or File.Path like r"%.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Enable Dynamic Data Exchange protocol (DDE) in all supported editions of Microsoft Word or Excel.
# Author: frack113
RuleId = 63647769-326d-4dde-a419-b925cc0caf42
RuleName = Enable Microsoft Dynamic Data Exchange
EventType = Reg.Any
Tag = enable-microsoft-dynamic-data-exchange
RiskScore = 50
Annotation = {"mitre_attack": ["T1559.002"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\Word\\Security\\AllowDDE" and (Reg.Value.Data in ["DWORD (0x00000001)", "DWORD (0x00000002)"]) or (Reg.TargetObject like r"%\\Excel\\Security\\DisableDDEServerLaunch" or Reg.TargetObject like r"%\\Excel\\Security\\DisableDDEServerLookup") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects changes to the registry keys related to "Trusted Location" of Microsoft Office. Attackers might add additional trusted locations to avoid macro security restrictions.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a0bed973-45fa-4625-adb5-6ecdf9be70ac
RuleName = Microsoft Office Trusted Location Updated
EventType = Reg.Any
Tag = microsoft-office-trusted-location-updated
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%Security\\Trusted Locations\\Location%" and Reg.TargetObject like r"%\\Path" and not (Process.Path like r"%:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path like r"%:\\Program Files\\Microsoft Office\\%" or Process.Path like r"%:\\Program Files (x86)\\Microsoft Office\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "Add-AppxPackage" or it's alias "Add-AppPackage" to install unsigned AppX packages
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 37651c2a-42cd-4a69-ae0d-22a4349aa04a
RuleName = Unsigned AppX Installation Attempt Using Add-AppxPackage
EventType = Process.Start
Tag = proc-start-unsigned-appx-installation-attempt-using-add-appxpackage
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%Add-AppPackage %" or Process.CommandLine like r"%Add-AppxPackage %") and Process.CommandLine like r"% -AllowUnsigned%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "rundll32.exe" with a parent process of Explorer.exe. This has been observed by variants of Raspberry Robin, as first reported by Red Canary.
# Author: CD_ROM_
RuleId = 1723e720-616d-4ddc-ab02-f7e3685a4713
RuleName = Rundll32 Spawned Via Explorer.EXE
EventType = Process.Start
Tag = proc-start-rundll32-spawned-via-explorer.exe
RiskScore = 50
Annotation = {"author": "CD_ROM_"}
Query = Parent.Path like r"%\\explorer.exe" and (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and not (Process.CommandLine like r"% C:\\Windows\\System32\\%" or Process.CommandLine like r"% -localserver 22d8c27b-47a1-48d1-ad08-7da7abd79617")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detect set Notification_Suppress to 1 to disable the Windows security center notification
# Author: frack113
RuleId = 0c93308a-3f1b-40a9-b649-57ea1a1c1d63
RuleName = Activate Suppression of Windows Security Center Notifications
EventType = Reg.Any
Tag = activate-suppression-of-windows-security-center-notifications
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = Reg.TargetObject like r"%SOFTWARE\\Policies\\Microsoft\\Windows Defender\\UX Configuration\\Notification\_Suppress" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS
# Author: Sreeman
RuleId = b7966f4a-b333-455b-8370-8ca53c229762
RuleName = Dropping Of Password Filter DLL
EventType = Process.Start
Tag = proc-start-dropping-of-password-filter-dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1556.002"], "author": "Sreeman"}
Query = Process.CommandLine like r"%HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa%" and Process.CommandLine like r"%scecli\\0%" and Process.CommandLine like r"%reg add%"


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker modifies values of the Disk Cleanup Handler in the registry to achieve persistence.
# The disk cleanup manager is part of the operating system. It displays the dialog box […]
# The user has the option of enabling or disabling individual handlers by selecting or clearing their check box in the disk cleanup manager's UI.
# Although Windows comes with a number of disk cleanup handlers, they aren't designed to handle files produced by other applications.
# Instead, the disk cleanup manager is designed to be flexible and extensible by enabling any developer to implement and register their own disk cleanup handler.
# Any developer can extend the available disk cleanup services by implementing and registering a disk cleanup handler.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d4f4e0be-cf12-439f-9e25-4e2cdcf7df5a
RuleName = Potential Persistence Via Disk Cleanup Handler - Registry
EventType = Reg.Any
Tag = potential-persistence-via-disk-cleanup-handler-registry
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "CreateKey" and Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VolumeCaches\\%" and not (Reg.TargetObject like r"%\\Active Setup Temp Folders" or Reg.TargetObject like r"%\\BranchCache" or Reg.TargetObject like r"%\\Content Indexer Cleaner" or Reg.TargetObject like r"%\\D3D Shader Cache" or Reg.TargetObject like r"%\\Delivery Optimization Files" or Reg.TargetObject like r"%\\Device Driver Packages" or Reg.TargetObject like r"%\\Diagnostic Data Viewer database files" or Reg.TargetObject like r"%\\Downloaded Program Files" or Reg.TargetObject like r"%\\DownloadsFolder" or Reg.TargetObject like r"%\\Feedback Hub Archive log files" or Reg.TargetObject like r"%\\Internet Cache Files" or Reg.TargetObject like r"%\\Language Pack" or Reg.TargetObject like r"%\\Microsoft Office Temp Files" or Reg.TargetObject like r"%\\Offline Pages Files" or Reg.TargetObject like r"%\\Old ChkDsk Files" or Reg.TargetObject like r"%\\Previous Installations" or Reg.TargetObject like r"%\\Recycle Bin" or Reg.TargetObject like r"%\\RetailDemo Offline Content" or Reg.TargetObject like r"%\\Setup Log Files" or Reg.TargetObject like r"%\\System error memory dump files" or Reg.TargetObject like r"%\\System error minidump files" or Reg.TargetObject like r"%\\Temporary Files" or Reg.TargetObject like r"%\\Temporary Setup Files" or Reg.TargetObject like r"%\\Temporary Sync Files" or Reg.TargetObject like r"%\\Thumbnail Cache" or Reg.TargetObject like r"%\\Update Cleanup" or Reg.TargetObject like r"%\\Upgrade Discarded Files" or Reg.TargetObject like r"%\\User file versions" or Reg.TargetObject like r"%\\Windows Defender" or Reg.TargetObject like r"%\\Windows Error Reporting Files" or Reg.TargetObject like r"%\\Windows ESD installation files" or Reg.TargetObject like r"%\\Windows Upgrade Log Files")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects Powershell as a child of the WmiPrvSE process. Which could be a sign of lateral movement via WMI.
# Author: Markus Neis @Karneades
RuleId = 692f0bec-83ba-4d04-af7e-e884a96059b6
RuleName = Potential WMI Lateral Movement WmiPrvSE Spawned PowerShell
EventType = Process.Start
Tag = proc-start-potential-wmi-lateral-movement-wmiprvse-spawned-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1047", "T1059.001"], "author": "Markus Neis @Karneades"}
Query = Parent.Path like r"%\\WmiPrvSE.exe" and (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"])
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects possible search for office tokens via CLI by looking for the string "eyJ0eX". This string is used as an anchor to look for the start of the JWT token used by office and similar apps.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 6d3a3952-6530-44a3-8554-cf17c116c615
RuleName = Suspicious Office Token Search Via CLI
EventType = Process.Start
Tag = proc-start-suspicious-office-token-search-via-cli
RiskScore = 50
Annotation = {"mitre_attack": ["T1528"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%eyJ0eXAiOi%" or Process.CommandLine like r"% eyJ0eX%" or Process.CommandLine like r"% \"eyJ0eX\"%" or Process.CommandLine like r"% 'eyJ0eX'%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious connections from Microsoft Sync Center to non-private IPs.
# Author: elhoim
RuleId = 9f2cc74d-78af-4eb2-bb64-9cd1d292b87b
RuleName = Microsoft Sync Center Suspicious Network Connections
EventType = Net.Any
Tag = microsoft-sync-center-suspicious-network-connections
RiskScore = 50
Annotation = {"mitre_attack": ["T1055", "T1218"], "author": "elhoim"}
Query = Process.Path like r"%\\mobsync.exe" and not (Net.Target.Ip like r"127.%" or Net.Target.Ip like r"10.%" or Net.Target.Ip like r"172.16.%" or Net.Target.Ip like r"172.17.%" or Net.Target.Ip like r"172.18.%" or Net.Target.Ip like r"172.19.%" or Net.Target.Ip like r"172.20.%" or Net.Target.Ip like r"172.21.%" or Net.Target.Ip like r"172.22.%" or Net.Target.Ip like r"172.23.%" or Net.Target.Ip like r"172.24.%" or Net.Target.Ip like r"172.25.%" or Net.Target.Ip like r"172.26.%" or Net.Target.Ip like r"172.27.%" or Net.Target.Ip like r"172.28.%" or Net.Target.Ip like r"172.29.%" or Net.Target.Ip like r"172.30.%" or Net.Target.Ip like r"172.31.%" or Net.Target.Ip like r"192.168.%" or Net.Target.Ip like r"169.254.%" or Net.Target.Ip in ["::1/128"] or Net.Target.Ip like r"fe8%" or Net.Target.Ip like r"fe9%" or Net.Target.Ip like r"fea%" or Net.Target.Ip like r"feb%" or Net.Target.Ip like r"fc%" or Net.Target.Ip like r"fd%")
GenericProperty1 = Net.Target.Ip


[ActivityMonitoringRule platform=Windows]
# Detects uncommon or suspicious child processes spawning from a WSL process. This could indicate an attempt to evade parent/child relationship detections or persistence attempts via cron using WSL
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 2267fe65-0681-42ad-9a6d-46553d3f3480
RuleName = WSL Child Process Anomaly
EventType = Process.Start
Tag = proc-start-wsl-child-process-anomaly
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Parent.Path like r"%\\wsl.exe" or Parent.Path like r"%\\wslhost.exe") and (Process.Path like r"%\\calc.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\AppData\\Local\\Temp\\%" or Process.Path like r"%C:\\Users\\Public\\%" or Process.Path like r"%C:\\Windows\\Temp\\%" or Process.Path like r"%C:\\Temp\\%" or Process.Path like r"%\\Downloads\\%" or Process.Path like r"%\\Desktop\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
# Author: Julia Fomina, oscd.community
RuleId = 93671f99-04eb-4ab4-a161-70d446a84003
RuleName = Capture Credentials with Rpcping.exe
EventType = Process.Start
Tag = proc-start-capture-credentials-with-rpcping.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "Julia Fomina, oscd.community"}
Query = Process.Path like r"%\\rpcping.exe" and (Process.CommandLine like r"%-s%" or Process.CommandLine like r"%/s%") and ((Process.CommandLine like r"%-u%" or Process.CommandLine like r"%/u%") and (Process.CommandLine like r"%NTLM%") or (Process.CommandLine like r"%-t%" or Process.CommandLine like r"%/t%") and (Process.CommandLine like r"%ncacn\_np%"))


[ActivityMonitoringRule platform=Windows]
# An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
# Author: frack113
RuleId = e2e80da2-8c66-4e00-ae3c-2eebd29f6b6d
RuleName = Compress Data and Lock With Password for Exfiltration With WINZIP
EventType = Process.Start
Tag = proc-start-compress-data-and-lock-with-password-for-exfiltration-with-winzip
RiskScore = 50
Annotation = {"mitre_attack": ["T1560.001"], "author": "frack113"}
Query = (Process.CommandLine like r"%winzip.exe%" or Process.CommandLine like r"%winzip64.exe%") and Process.CommandLine like r"%-s\"%" and (Process.CommandLine like r"% -min %" or Process.CommandLine like r"% -a %")


[ActivityMonitoringRule platform=Windows]
# Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
# Author: Julia Fomina, oscd.community
RuleId = 9386d78a-7207-4048-9c9f-a93a7c2d1c05
RuleName = Code Execution via Pcwutl.dll
EventType = Process.Start
Tag = proc-start-code-execution-via-pcwutl.dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Julia Fomina, oscd.community"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%pcwutl%" and Process.CommandLine like r"%LaunchApplication%"


[ActivityMonitoringRule platform=Windows]
# Detects potential SquiblyTwo attack technique with possible renamed WMIC via Imphash and OriginalFileName fields
# Author: Markus Neis, Florian Roth
RuleId = 8d63dadf-b91b-4187-87b6-34a1114577ea
RuleName = Potential SquiblyTwo Technique Execution
EventType = Process.Start
Tag = proc-start-potential-squiblytwo-technique-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1047", "T1220", "T1059.005", "T1059.007"], "author": "Markus Neis, Florian Roth"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe" or Process.Hash.IMP in ["1B1A3F43BF37B5BFE60751F2EE2F326E", "37777A96245A3C74EB217308F3546F4C", "9D87C9D67CE724033C0B40CC4CA1B206"] or Process.Hashes like r"%IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E%" or Process.Hashes like r"%IMPHASH=37777A96245A3C74EB217308F3546F4C%" or Process.Hashes like r"%IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206%") and Process.CommandLine like r"%format:%" and Process.CommandLine like r"%http%"
GenericProperty1 = Process.Hash.IMP
GenericProperty2 = Process.Hashes


[ActivityMonitoringRule platform=Windows]
# Detects execution of "dsquery.exe" for domain trust discovery
# Author: E.M. Anhaus, Tony Lambert, oscd.community, omkar72
RuleId = 3bad990e-4848-4a78-9530-b427d854aac0
RuleName = Domain Trust Discovery Via Dsquery
EventType = Process.Start
Tag = proc-start-domain-trust-discovery-via-dsquery
RiskScore = 50
Annotation = {"mitre_attack": ["T1482"], "author": "E.M. Anhaus, Tony Lambert, oscd.community, omkar72"}
Query = (Process.Path like r"%\\dsquery.exe" or Process.Name == "dsquery.exe") and Process.CommandLine like r"%trustedDomain%"


[ActivityMonitoringRule platform=Windows]
# Detects regsitry value settings that would replace the user's desktop background.
# This is a common technique used by malware to change the desktop background to a ransom note or other image.
# Author: Nasreddine Bencherchali (Nextron Systems), Stephen Lincoln @slincoln-aiq (AttackIQ)
RuleId = 85b88e05-dadc-430b-8a9e-53ff1cd30aae
RuleName = Potentially Suspicious Desktop Background Change Via Registry
EventType = Reg.Any
Tag = potentially-suspicious-desktop-background-change-via-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1112", "T1491.001"], "author": "Nasreddine Bencherchali (Nextron Systems), Stephen Lincoln @slincoln-aiq (AttackIQ)"}
Query = (Reg.TargetObject like r"%Control Panel\\Desktop%" or Reg.TargetObject like r"%CurrentVersion\\Policies\\ActiveDesktop%" or Reg.TargetObject like r"%CurrentVersion\\Policies\\System%") and (Reg.TargetObject like r"%NoChangingWallpaper" and Reg.Value.Data == "DWORD (0x00000001)" or Reg.TargetObject like r"%\\Wallpaper" or Reg.TargetObject like r"%\\WallpaperStyle" and Reg.Value.Data == "2") and not Process.Path like r"%\\svchost.exe"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the addition of the "Debugger" value to the "DbgManagedDebugger" key in order to achieve persistence. Which will get invoked when an application crashes
# Author: frack113
RuleId = 9827ae57-3802-418f-994b-d5ecf5cd974b
RuleName = Potential Registry Persistence Attempt Via DbgManagedDebugger
EventType = Reg.Any
Tag = potential-registry-persistence-attempt-via-dbgmanageddebugger
RiskScore = 50
Annotation = {"mitre_attack": ["T1574"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\Microsoft\\.NETFramework\\DbgManagedDebugger" and not Reg.Value.Data == "\"C:\\Windows\\system32\\vsjitdebugger.exe\" PID \%d APPDOM \%d EXTEXT \"\%s\" EVTHDL \%d"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects unsigned module load by ClickOnce application.
# Author: @SerkinValery
RuleId = 060d5ad4-3153-47bb-8382-43e5e29eda92
RuleName = Unsigned Module Loaded by ClickOnce Application
EventType = Image.Load
Tag = unsigned-module-loaded-by-clickonce-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.002"], "author": "@SerkinValery"}
Query = Process.Path like r"%\\AppData\\Local\\Apps\\2.0\\%" and (Image.IsSigned == "false" or Image.SignatureStatus == "Expired")
GenericProperty1 = Image.IsSigned
GenericProperty2 = Image.SignatureStatus


[ActivityMonitoringRule platform=Windows]
# Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.
# Author: frack113
RuleId = a197e378-d31b-41c0-9635-cfdf1c1bb423
RuleName = HackTool - WinRM Access Via Evil-WinRM
EventType = Process.Start
Tag = proc-start-hacktool-winrm-access-via-evil-winrm
RiskScore = 50
Annotation = {"mitre_attack": ["T1021.006"], "author": "frack113"}
Query = Process.Path like r"%\\ruby.exe" and Process.CommandLine like r"%-i %" and Process.CommandLine like r"%-u %" and Process.CommandLine like r"%-p %"


[ActivityMonitoringRule platform=Windows]
# Detects the import of '.reg' files from suspicious paths using the 'reg.exe' utility
# Author: frack113, Nasreddine Bencherchali
RuleId = 62e0298b-e994-4189-bc87-bc699aa62d97
RuleName = Potential Suspicious Registry File Imported Via Reg.EXE
EventType = Process.Start
Tag = proc-start-potential-suspicious-registry-file-imported-via-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113, Nasreddine Bencherchali"}
Query = (Process.Path like r"%\\reg.exe" or Process.Name == "reg.exe") and Process.CommandLine like r"% import %" and (Process.CommandLine like r"%C:\\Users\\%" or Process.CommandLine like r"%\%temp\%%" or Process.CommandLine like r"%\%tmp\%%" or Process.CommandLine like r"%\%appdata\%%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%C:\\Windows\\Temp\\%" or Process.CommandLine like r"%C:\\ProgramData\\%")


[ActivityMonitoringRule platform=Windows]
# Detects applications trying to modify the registry in order to disable any write-protect property for storage devices.
# This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group.
# Author: Sreeman
RuleId = 75f7a0e2-7154-4c4d-9eae-5cdb4e0a5c13
RuleName = Write Protect For Storage Disabled
EventType = Process.Start
Tag = proc-start-write-protect-for-storage-disabled
RiskScore = 50
Annotation = {"mitre_attack": ["T1562"], "author": "Sreeman"}
Query = Process.CommandLine like r"%\\System\\CurrentControlSet\\Control%" and Process.CommandLine like r"%Write Protection%" and Process.CommandLine like r"%0%" and Process.CommandLine like r"%storage%"


[ActivityMonitoringRule platform=Windows]
# Detects renamed execution of "Microsoft.NodejsTools.PressAnyKey.exe", which can be abused as a LOLBIN to execute arbitrary binaries
# Author: Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)
RuleId = 65c3ca2c-525f-4ced-968e-246a713d164f
RuleName = Visual Studio NodejsTools PressAnyKey Renamed Execution
EventType = Process.Start
Tag = proc-start-visual-studio-nodejstools-pressanykey-renamed-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)"}
Query = Process.Name == "Microsoft.NodejsTools.PressAnyKey.exe" and not Process.Path like r"%\\Microsoft.NodejsTools.PressAnyKey.exe"


[ActivityMonitoringRule platform=Windows]
# Detects potential persistence activity via the registering of a new custom protocole handlers. While legitimate applications register protocole handlers often times during installation. And attacker can abuse this by setting a custom handler to be used as a persistence mechanism.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = fdbf0b9d-0182-4c43-893b-a1eaab92d085
RuleName = Potential Persistence Via Custom Protocol Handler
EventType = Reg.Any
Tag = potential-persistence-via-custom-protocol-handler
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"HKCR\\%" and Reg.Value.Data like r"URL:%" and not (Reg.Value.Data like r"URL:ms-%" or Process.Path like r"C:\\Program Files (x86)%" or Process.Path like r"C:\\Program Files\\%" or Process.Path like r"C:\\Windows\\System32\\%" or Process.Path like r"C:\\Windows\\SysWOW64\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder.
# This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
# Author: xknow (@xknow_infosec), xorxes (@xor_xes)
RuleId = 3da70954-0f2c-4103-adff-b7440368f50e
RuleName = Suspicious PROCEXP152.sys File Created In TMP
EventType = File.Create
Tag = suspicious-procexp152.sys-file-created-in-tmp
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "xknow (@xknow_infosec), xorxes (@xor_xes)"}
Query = File.Path like r"%\\AppData\\Local\\Temp\\%" and File.Path like r"%PROCEXP152.sys" and not (Process.Path like r"%\\procexp64.exe%" or Process.Path like r"%\\procexp.exe%" or Process.Path like r"%\\procmon64.exe%" or Process.Path like r"%\\procmon.exe%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Alerts on trust record modification within the registry, indicating usage of macros
# Author: Antonlovesdnb, Trent Liffick (@tliffick)
RuleId = 295a59c1-7b79-4b47-a930-df12c15fc9c2
RuleName = Windows Registry Trust Record Modification
EventType = Reg.Any
Tag = windows-registry-trust-record-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1566.001"], "author": "Antonlovesdnb, Trent Liffick (@tliffick)"}
Query = Reg.TargetObject like r"%\\Security\\Trusted Documents\\TrustRecords%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Extract data from cab file and hide it in an alternate data stream
# Author: frack113
RuleId = 4b13db67-0c45-40f1-aba8-66a1a7198a1e
RuleName = Suspicious Extrac32 Alternate Data Stream Execution
EventType = Process.Start
Tag = proc-start-suspicious-extrac32-alternate-data-stream-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113"}
Query = Process.CommandLine like r"%extrac32.exe%" and Process.CommandLine like r"%.cab%" and Process.CommandLine regex ":[^\\\\]"


[ActivityMonitoringRule platform=Windows]
# Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation
# by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.
# Author: Ilyas Ochkov, oscd.community
RuleId = 6aa1d992-5925-4e9f-a49b-845e51d1de01
RuleName = New DLL Added to AppCertDlls Registry Key
EventType = Reg.Any
Tag = new-dll-added-to-appcertdlls-registry-key
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.009"], "author": "Ilyas Ochkov, oscd.community"}
Query = Reg.TargetObject == "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls" or Reg.Key.Path.New == "HKLM\\SYSTEM\\CurentControlSet\\Control\\Session Manager\\AppCertDlls"
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Path.New
GenericProperty2 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects execution of Chromium based browser in headless mode
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ef9dcfed-690c-4c5d-a9d1-482cd422225c
RuleName = Browser Execution In Headless Mode
EventType = Process.Start
Tag = proc-start-browser-execution-in-headless-mode
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\brave.exe" or Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\vivaldi.exe") and Process.CommandLine like r"%--headless%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of winget to add new potentially suspicious download sources
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c15a46a0-07d4-4c87-b4b6-89207835a83b
RuleName = Add Potential Suspicious New Download Source To Winget
EventType = Process.Start
Tag = proc-start-add-potential-suspicious-new-download-source-to-winget
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\winget.exe" or Process.Name == "winget.exe") and Process.CommandLine like r"%source %" and Process.CommandLine like r"%add %" and Process.CommandLine regex "://\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = 20f0ee37-5942-4e45-b7d5-c5b5db9df5cd
RuleName = CurrentVersion Autorun Keys Modification
EventType = Reg.Any
Tag = currentversion-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion%" and (Reg.TargetObject like r"%\\ShellServiceObjectDelayLoad%" or Reg.TargetObject like r"%\\Run\\%" or Reg.TargetObject like r"%\\RunOnce\\%" or Reg.TargetObject like r"%\\RunOnceEx\\%" or Reg.TargetObject like r"%\\RunServices\\%" or Reg.TargetObject like r"%\\RunServicesOnce\\%" or Reg.TargetObject like r"%\\Policies\\System\\Shell%" or Reg.TargetObject like r"%\\Policies\\Explorer\\Run%" or Reg.TargetObject like r"%\\Group Policy\\Scripts\\Startup%" or Reg.TargetObject like r"%\\Group Policy\\Scripts\\Shutdown%" or Reg.TargetObject like r"%\\Group Policy\\Scripts\\Logon%" or Reg.TargetObject like r"%\\Group Policy\\Scripts\\Logoff%" or Reg.TargetObject like r"%\\Explorer\\ShellServiceObjects%" or Reg.TargetObject like r"%\\Explorer\\ShellIconOverlayIdentifiers%" or Reg.TargetObject like r"%\\Explorer\\ShellExecuteHooks%" or Reg.TargetObject like r"%\\Explorer\\SharedTaskScheduler%" or Reg.TargetObject like r"%\\Explorer\\Browser Helper Objects%" or Reg.TargetObject like r"%\\Authentication\\PLAP Providers%" or Reg.TargetObject like r"%\\Authentication\\Credential Providers%" or Reg.TargetObject like r"%\\Authentication\\Credential Provider Filters%") and not (Reg.Value.Data == "(Empty)" or Reg.TargetObject like r"%\\NgcFirst\\ConsecutiveSwitchCount" or Process.Path like r"%\\AppData\\Local\\Microsoft\\OneDrive\\Update\\OneDriveSetup.exe" or Process.Path like r"%\\AppData\\Roaming\\Spotify\\Spotify.exe" or Process.Path like r"%\\AppData\\Local\\WebEx\\WebexHost.exe" or Process.Path in ["C:\\WINDOWS\\system32\\devicecensus.exe", "C:\\Windows\\system32\\winsat.exe", "C:\\Program Files\\Microsoft OneDrive\\StandaloneUpdater\\OneDriveSetup.exe", "C:\\Program Files\\Microsoft OneDrive\\Update\\OneDriveSetup.exe", "C:\\Program Files (x86)\\Microsoft OneDrive\\Update\\OneDriveSetup.exe", "C:\\Program Files\\KeePass Password Safe 2\\ShInstUtil.exe", "C:\\Program Files\\Everything\\Everything.exe", "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"] or Process.Path == "C:\\Windows\\system32\\LogonUI.exe" and (Reg.TargetObject like r"%\\Authentication\\Credential Providers\\{D6886603-9D2F-4EB2-B667-1971041FA96B}\\%" or Reg.TargetObject like r"%\\Authentication\\Credential Providers\\{BEC09223-B018-416D-A0AC-523971B639F5}\\%" or Reg.TargetObject like r"%\\Authentication\\Credential Providers\\{8AF662BF-65A0-4D0A-A540-A338A999D36F}\\%" or Reg.TargetObject like r"%\\Authentication\\Credential Providers\\{27FBDB57-B613-4AF2-9D7E-4FA7A66C21AD}\\%") or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\Install\\%" or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\%" or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe%" or Process.Path == "C:\\Windows\\system32\\regsvr32.exe" and Reg.TargetObject like r"%DropboxExt%" and Reg.Value.Data like r"%A251-47B7-93E1-CDD82E34AF8B}" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Opera Browser Assistant" and Reg.Value.Data == "C:\\Program Files\\Opera\\assistant\\browser\_assistant.exe" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iTunesHelper" and Reg.Value.Data == "\"C:\\Program Files\\iTunes\\iTunesHelper.exe\"" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\zoommsirepair" and Reg.Value.Data == "\"C:\\Program Files\\Zoom\\bin\\installer.exe\" /repair" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Greenshot" and Reg.Value.Data == "C:\\Program Files\\Greenshot\\Greenshot.exe" or Reg.TargetObject like r"%\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\GoogleDriveFS" and Reg.Value.Data like r"C:\\Program Files\\Google\\Drive File Stream\\%" and Reg.Value.Data like r"%\\GoogleDriveFS.exe%" or Reg.TargetObject like r"%GoogleDrive%" and (Reg.Value.Data in ["{CFE8B367-77A7-41D7-9C90-75D16D7DC6B6}", "{A8E52322-8734-481D-A7E2-27B309EF8D56}", "{C973DA94-CBDF-4E77-81D1-E5B794FBD146}", "{51EF1569-67EE-4AD6-9646-E726C3FFC8A2}"]) or (Reg.Value.Data like r"C:\\Windows\\system32\\cmd.exe /q /c rmdir /s /q \"C:\\Users\\%" or Reg.Value.Data like r"C:\\Windows\\system32\\cmd.exe /q /c del /q \"C:\\Users\\%") and Reg.Value.Data like r"%\\AppData\\Local\\Microsoft\\OneDrive\\%" or Reg.TargetObject like r"%\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{%" and Reg.Value.Data like r"%\\AppData\\Local\\Package Cache\\{%" and Reg.Value.Data like r"%}\\python-%" and Reg.Value.Data like r"%.exe\" /burn.runonce" or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path == "C:\\Program Files\\Windows Defender\\MsMpEng.exe" or Process.Path like r"%\\Microsoft\\Teams\\current\\Teams.exe" and Reg.Value.Data like r"%\\Microsoft\\Teams\\Update.exe --processStart %" or Process.Path == "C:\\Windows\\system32\\userinit.exe" and Reg.Value.Data == "ctfmon.exe /n" or Process.Path like r"C:\\Program Files\\AVG\\Antivirus\\Setup\\%" and (Reg.Value.Data in ["\"C:\\Program Files\\AVG\\Antivirus\\AvLaunch.exe\" /gui", "\"C:\\Program Files (x86)\\AVG\\Antivirus\\AvLaunch.exe\" /gui", "{472083B0-C522-11CF-8763-00608CC02F24}"]) or (Process.Path like r"%\\aurora-agent-64.exe" or Process.Path like r"%\\aurora-agent.exe") and Reg.TargetObject like r"%\\Microsoft\\Windows\\CurrentVersion\\Run\\aurora-dashboard" and Reg.Value.Data == "C:\\Program Files\\Aurora-Agent\\tools\\aurora-dashboard.exe" or Reg.TargetObject like r"%\\Microsoft\\Windows\\CurrentVersion\\Run\\Everything" and Reg.Value.Data like r"%\\Everything\\Everything.exe\" -startup")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects setting of a new registry database value related to BgInfo configuration. Attackers can for example set this value to save the results of the commands executed by BgInfo in order to exfiltrate information.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 53330955-dc52-487f-a3a2-da24dcff99b5
RuleName = New BgInfo.EXE Custom DB Path Registry Configuration
EventType = Reg.Any
Tag = new-bginfo.exe-custom-db-path-registry-configuration
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "SetValue" and Reg.TargetObject like r"%\\Software\\Winternals\\BGInfo\\Database"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc).
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 06ce37c2-61ab-4f05-9ff5-b1a96d18ae32
RuleName = WMIC Loading Scripting Libraries
EventType = Image.Load
Tag = wmic-loading-scripting-libraries
RiskScore = 50
Annotation = {"mitre_attack": ["T1220"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Process.Path like r"%\\wmic.exe" and (Image.Path like r"%\\jscript.dll" or Image.Path like r"%\\vbscript.dll")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "ShellDispatch.dll"
# Author: X__Junior (Nextron Systems)
RuleId = 844f8eb2-610b-42c8-89a4-47596e089663
RuleName = Potential ShellDispatch.DLL Sideloading
EventType = Image.Load
Tag = potential-shelldispatch.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\ShellDispatch.dll" and not (Image.Path like r"%:\\Users\\%" and Image.Path like r"%\\AppData\\Local\\Temp\\%" or Image.Path like r"%:\\Windows\\Temp\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects the modification of PortProxy registry key which is used for port forwarding. For command execution see rule win_netsh_port_fwd.yml.
# Author: Andreas Hunkeler (@Karneades)
RuleId = a54f842a-3713-4b45-8c84-5f136fdebd3c
RuleName = PortProxy Registry Key
EventType = Reg.Any
Tag = portproxy-registry-key
RiskScore = 50
Annotation = {"mitre_attack": ["T1090"], "author": "Andreas Hunkeler (@Karneades)"}
Query = Reg.TargetObject == "HKLM\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\\tcp"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects execition of commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This can be used as a LOLBIN in order to bypass application whitelisting.
# Author: Nasreddine Bencherchali (Nextron Systems), E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community
RuleId = 0955e4e1-c281-4fb9-9ee1-5ee7b4b754d2
RuleName = Use of Pcalua For Execution
EventType = Process.Start
Tag = proc-start-use-of-pcalua-for-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems), E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community"}
Query = Process.Path like r"%\\pcalua.exe" and Process.CommandLine like r"% -a%"


[ActivityMonitoringRule platform=Windows]
# Detects a commandline containing references to the Microsoft Teams database or cookies files from a process other than Teams.
# The database might contain authentication tokens and other sensitive information about the logged in accounts.
# Author: @SerkinValery
RuleId = d2eb17db-1d39-41dc-b57f-301f6512fa75
RuleName = Potentially Suspicious Command Targeting Teams Sensitive Files
EventType = Process.Start
Tag = proc-start-potentially-suspicious-command-targeting-teams-sensitive-files
RiskScore = 50
Annotation = {"mitre_attack": ["T1528"], "author": "@SerkinValery"}
Query = (Process.CommandLine like r"%\\Microsoft\\Teams\\Cookies%" or Process.CommandLine like r"%\\Microsoft\\Teams\\Local Storage\\leveldb%") and not Process.Path like r"%\\Microsoft\\Teams\\current\\Teams.exe"


[ActivityMonitoringRule platform=Windows]
# Detects events that appear when a user click on a link file with a powershell command in it
# Author: frack113
RuleId = 30e92f50-bb5a-4884-98b5-d20aa80f3d7a
RuleName = Hidden Powershell in Link File Pattern
EventType = Process.Start
Tag = proc-start-hidden-powershell-in-link-file-pattern
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "frack113"}
Query = Parent.Path == "C:\\Windows\\explorer.exe" and Process.Path == "C:\\Windows\\System32\\cmd.exe" and Process.CommandLine like r"%powershell%" and Process.CommandLine like r"%.lnk%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 814c95cc-8192-4378-a70a-f1aafd877af1
RuleName = Use of OpenConsole
EventType = Process.Start
Tag = proc-start-use-of-openconsole
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "OpenConsole.exe" or Process.Path like r"%\\OpenConsole.exe") and not Process.Path like r"C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal%"


[ActivityMonitoringRule platform=Windows]
# List credentials currently stored in Windows Credential Manager via the native Windows utility vaultcmd.exe
# Author: frack113
RuleId = 58f50261-c53b-4c88-bd12-1d71f12eda4c
RuleName = Windows Credential Manager Access via VaultCmd
EventType = Process.Start
Tag = proc-start-windows-credential-manager-access-via-vaultcmd
RiskScore = 50
Annotation = {"mitre_attack": ["T1555.004"], "author": "frack113"}
Query = (Process.Path like r"%\\VaultCmd.exe" or Process.Name == "VAULTCMD.EXE") and Process.CommandLine like r"%/listcreds:%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "Tpmvscmgr.exe" to create a new virtual smart card.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c633622e-cab9-4eaa-bb13-66a1d68b3e47
RuleName = New Virtual Smart Card Created Via TpmVscMgr.EXE
EventType = Process.Start
Tag = proc-start-new-virtual-smart-card-created-via-tpmvscmgr.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\tpmvscmgr.exe" and Process.Name == "TpmVscMgr.exe" and Process.CommandLine like r"%create%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "csc.exe" to compile .NET code. Attackers often leverage this to compile code on the fly and use it in other stages.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = acf2807c-805b-4042-aab9-f86b6ba9cb2b
RuleName = Dynamic .NET Compilation Via Csc.EXE - Hunting
EventType = Process.Start
Tag = proc-start-dynamic-.net-compilation-via-csc.exe-hunting
RiskScore = 50
Annotation = {"mitre_attack": ["T1027.004"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\csc.exe" and Process.CommandLine like r"%/noconfig /fullpaths @%"


[ActivityMonitoringRule platform=Windows]
# The "ScriptRunner.exe" binary can be abused to proxy execution through it and bypass possible whitelisting
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 64760eef-87f7-4ed3-93fd-655668ea9420
RuleName = Use of Scriptrunner.exe
EventType = Process.Start
Tag = proc-start-use-of-scriptrunner.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ScriptRunner.exe" or Process.Name == "ScriptRunner.exe") and Process.CommandLine like r"% -appvscript %"


[ActivityMonitoringRule platform=Windows]
# Detects potential suspicious behaviour using secedit.exe. Such as exporting or modifying the security policy
# Author: Janantha Marasinghe
RuleId = c2c76b77-32be-4d1f-82c9-7e544bdfe0eb
RuleName = Potential Suspicious Activity Using SeCEdit
EventType = Process.Start
Tag = proc-start-potential-suspicious-activity-using-secedit
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.002", "T1547.001", "T1505.005", "T1556.002", "T1562", "T1574.007", "T1564.002", "T1546.008", "T1546.007", "T1547.014", "T1547.010", "T1547.002", "T1557", "T1082"], "author": "Janantha Marasinghe"}
Query = (Process.Path like r"%\\secedit.exe" or Process.Name == "SeCEdit") and (Process.CommandLine like r"%/export%" and Process.CommandLine like r"%/cfg%" or Process.CommandLine like r"%/configure%" and Process.CommandLine like r"%/db%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of a Word document via the WinWord Start Menu shortcut.
# This behavior was observed being used by KamiKakaBot samples in order to initiate the 2nd stage of the infection.
# Author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
RuleId = 24474469-bd80-46cc-9e08-9fbe81bfaaca
RuleName = Potential KamiKakaBot Activity - Lure Document Execution
EventType = Process.Start
Tag = proc-start-potential-kamikakabot-activity-lure-document-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)"}
Query = Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%/c %" and Process.CommandLine like r"%.lnk ~%" and Process.CommandLine like r"%Start Menu\\Programs\\Word%" and Process.CommandLine like r"%.doc"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of suspcious binary files inside the "\windows\system32\spool\drivers\color\" as seen in the blog referenced below
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ce7066a6-508a-42d3-995b-2952c65dc2ce
RuleName = Drop Binaries Into Spool Drivers Color Folder
EventType = File.Create
Tag = drop-binaries-into-spool-drivers-color-folder
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"C:\\Windows\\System32\\spool\\drivers\\color\\%" and (File.Path like r"%.dll" or File.Path like r"%.exe" or File.Path like r"%.sys")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key
# Author: frack113
RuleId = dd3ee8cc-f751-41c9-ba53-5a32ed47e563
RuleName = Suspicious Reg Add Open Command
EventType = Process.Start
Tag = proc-start-suspicious-reg-add-open-command
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "frack113"}
Query = Process.CommandLine like r"%reg%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings\\shell\\open\\command%" and Process.CommandLine like r"%/ve %" and Process.CommandLine like r"%/d%" or Process.CommandLine like r"%reg%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings\\shell\\open\\command%" and Process.CommandLine like r"%/v%" and Process.CommandLine like r"%DelegateExecute%" or Process.CommandLine like r"%reg%" and Process.CommandLine like r"%delete%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings%"


[ActivityMonitoringRule platform=Windows]
# Adversaries can interact with the DACLs using built-in Windows commands takeown which can grant adversaries higher permissions on specific files and folders
# Author: frack113
RuleId = 554601fb-9b71-4bcc-abf4-21a611be4fde
RuleName = Suspicious Recursive Takeown
EventType = Process.Start
Tag = proc-start-suspicious-recursive-takeown
RiskScore = 50
Annotation = {"mitre_attack": ["T1222.001"], "author": "frack113"}
Query = Process.Path like r"%\\takeown.exe" and Process.CommandLine like r"%/f %" and Process.CommandLine like r"%/r%"


[ActivityMonitoringRule platform=Windows]
# Detects the usage of the "sftp.exe" binary as a LOLBIN by abusing the "-D" flag
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a85ffc3a-e8fd-4040-93bf-78aff284d801
RuleName = Use Of The SFTP.EXE Binary As A LOLBIN
EventType = Process.Start
Tag = proc-start-use-of-the-sftp.exe-binary-as-a-lolbin
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\sftp.exe" and (Process.CommandLine like r"% -D ..%" or Process.CommandLine like r"% -D C:\\%")


[ActivityMonitoringRule platform=Windows]
# Detects attempts of decoding encoded Gzip archives via PowerShell.
# Author: Hieu Tran
RuleId = 98767d61-b2e8-4d71-b661-e36783ee24c1
RuleName = Gzip Archive Decode Via PowerShell
EventType = Process.Start
Tag = proc-start-gzip-archive-decode-via-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1132.001"], "author": "Hieu Tran"}
Query = Process.CommandLine like r"%GZipStream%" and Process.CommandLine like r"%::Decompress%"


[ActivityMonitoringRule platform=Windows]
# Detects MsiExec loading a DLL and calling its DllUnregisterServer function
# Author: frack113
RuleId = 84f52741-8834-4a8c-a413-2eb2269aa6c8
RuleName = DllUnregisterServer Function Call Via Msiexec.EXE
EventType = Process.Start
Tag = proc-start-dllunregisterserver-function-call-via-msiexec.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.007"], "author": "frack113"}
Query = (Process.Path like r"%\\msiexec.exe" or Process.Name == "\\msiexec.exe") and (Process.CommandLine like r"% -z %" or Process.CommandLine like r"% /z %") and Process.CommandLine like r"%.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = 480421f9-417f-4d3b-9552-fd2728443ec8
RuleName = Wow6432Node Windows NT CurrentVersion Autorun Keys Modification
EventType = Reg.Any
Tag = wow6432node-windows-nt-currentversion-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion%" and (Reg.TargetObject like r"%\\Windows\\Appinit\_Dlls%" or Reg.TargetObject like r"%\\Image File Execution Options%" or Reg.TargetObject like r"%\\Drivers32%") and not (Reg.Value.Data in ["(Empty)", "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options"])
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects execution of "certutil" with the "addstore" flag in order to install a new certificate on the system.
# Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
# Author: oscd.community, @redcanary, Zach Stanford @svch0st
RuleId = d2125259-ddea-4c1c-9c22-977eb5b29cf0
RuleName = New Root Certificate Installed Via Certutil.EXE
EventType = Process.Start
Tag = proc-start-new-root-certificate-installed-via-certutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1553.004"], "author": "oscd.community, @redcanary, Zach Stanford @svch0st"}
Query = (Process.Path like r"%\\certutil.exe" or Process.Name == "CertUtil.exe") and (Process.CommandLine like r"%-addstore%" or Process.CommandLine like r"%/addstore%") and Process.CommandLine like r"%root%"


[ActivityMonitoringRule platform=Windows]
# Rule to detect the configuration of Run Once registry key. Configured payload can be run by runonce.exe /AlternateShellStartup
# Author: Avneet Singh @v3t0_, oscd.community
RuleId = c74d7efc-8826-45d9-b8bb-f04fac9e4eff
RuleName = Run Once Task Configuration in Registry
EventType = Reg.Any
Tag = run-once-task-configuration-in-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Avneet Singh @v3t0_, oscd.community"}
Query = Reg.TargetObject like r"HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components%" and Reg.TargetObject like r"%\\StubPath" and not (Reg.Value.Data like r"\"C:\\Program Files\\Google\\Chrome\\Application\\%" and Reg.Value.Data like r"%\\Installer\\chrmstp.exe\" --configure-user-settings --verbose-logging --system-level%" or (Reg.Value.Data like r"\"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\%" or Reg.Value.Data like r"\"C:\\Program Files\\Microsoft\\Edge\\Application\\%") and Reg.Value.Data like r"%\\Installer\\setup.exe\" --configure-user-settings --verbose-logging --system-level --msedge --channel=stable")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "libvlc.dll", a DLL that is legitimately used by "VLC.exe"
# Author: X__Junior
RuleId = bf9808c4-d24f-44a2-8398-b65227d406b6
RuleName = Potential Libvlc.DLL Sideloading
EventType = Image.Load
Tag = potential-libvlc.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior"}
Query = Image.Path like r"%\\libvlc.dll" and not (Image.Path like r"C:\\Program Files (x86)\\VideoLAN\\VLC\\%" or Image.Path like r"C:\\Program Files\\VideoLAN\\VLC\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child processes launched via the ScreenConnect client service.
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @Kostastsale
RuleId = 7b582f1a-b318-4c6a-bf4e-66fe49bf55a5
RuleName = Remote Access Tool - ScreenConnect Potential Suspicious Remote Command Execution
EventType = Process.Start
Tag = proc-start-remote-access-tool-screenconnect-potential-suspicious-remote-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @Kostastsale"}
Query = Parent.CommandLine like r"%:\\Windows\\TEMP\\ScreenConnect\\%" and Parent.CommandLine like r"%run.cmd%" and (Process.Path like r"%\\bitsadmin.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\curl.exe" or Process.Path like r"%\\dllhost.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\nltest.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wevtutil.exe")
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detect usage of DLL "coregen.exe" (Microsoft CoreCLR Native Image Generator) binary to sideload arbitrary DLLs.
# Author: frack113
RuleId = 0fa66f66-e3f6-4a9c-93f8-4f2610b00171
RuleName = Potential DLL Sideloading Using Coregen.exe
EventType = Image.Load
Tag = potential-dll-sideloading-using-coregen.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1055"], "author": "frack113"}
Query = Process.Path like r"%\\coregen.exe" and not (Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Program Files\\Microsoft Silverlight\\%" or Image.Path like r"C:\\Program Files (x86)\\Microsoft Silverlight\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files.
# Author: Christopher Peacock @SecurePeacock, SCYTHE @scythe_io
RuleId = 4eddc365-79b4-43ff-a9d7-99422dc34b93
RuleName = Use of Remote.exe
EventType = Process.Start
Tag = proc-start-use-of-remote.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io"}
Query = Process.Path like r"%\\remote.exe" or Process.Name == "remote.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the addition of office test registry that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started
# Author: omkar72
RuleId = 3d27f6dd-1c74-4687-b4fa-ca849d128d1c
RuleName = Office Application Startup - Office Test
EventType = Reg.Any
Tag = office-application-startup-office-test
RiskScore = 50
Annotation = {"mitre_attack": ["T1137.002"], "author": "omkar72"}
Query = Reg.TargetObject like r"%\\Software\\Microsoft\\Office test\\Special\\Perf%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects execution of "findstr" with specific flags and a remote share path. This specific set of CLI flags would allow "findstr" to download the content of the file located on the remote share as described in the LOLBAS entry.
# Author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali (Nextron Systems)
RuleId = 587254ee-a24b-4335-b3cd-065c0f1f4baa
RuleName = Remote File Download Via Findstr.EXE
EventType = Process.Start
Tag = proc-start-remote-file-download-via-findstr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1564.004", "T1552.001", "T1105"], "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%findstr%" or Process.Path like r"%findstr.exe" or Process.Name == "FINDSTR.EXE") and (Process.CommandLine like r"% -v %" or Process.CommandLine like r"% /v %") and (Process.CommandLine like r"% -l %" or Process.CommandLine like r"% /l %") and Process.CommandLine like r"%\\\\%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious child processes of SysAidServer (as seen in MERCURY threat actor intrusions)
# Author: Florian Roth (Nextron Systems)
RuleId = 60bfeac3-0d35-4302-8efb-1dd16f715bc6
RuleName = Suspicious SysAidServer Child
EventType = Process.Start
Tag = proc-start-suspicious-sysaidserver-child
RiskScore = 50
Annotation = {"mitre_attack": ["T1210"], "author": "Florian Roth (Nextron Systems)"}
Query = (Parent.Path like r"%\\java.exe" or Parent.Path like r"%\\javaw.exe") and Parent.CommandLine like r"%SysAidServer%"
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Adversaries may acquire credentials from web browsers by reading files specific to the target browser.
# Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.
# Web browsers typically store the credentials in an encrypted format within a credential store.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 47147b5b-9e17-4d76-b8d2-7bac24c5ce1b
RuleName = Potential Browser Data Stealing
EventType = Process.Start
Tag = proc-start-potential-browser-data-stealing
RiskScore = 50
Annotation = {"mitre_attack": ["T1555.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%copy-item%" or Process.CommandLine like r"%copy %" or Process.CommandLine like r"%cpi %" or Process.CommandLine like r"% cp %" or Process.CommandLine like r"%move %" or Process.CommandLine like r"%move-item%" or Process.CommandLine like r"% mi %" or Process.CommandLine like r"% mv %" or Process.Path like r"%\\xcopy.exe" or Process.Path like r"%\\robocopy.exe" or Process.Name in ["XCOPY.EXE", "robocopy.exe"]) and (Process.CommandLine like r"%\\Amigo\\User Data%" or Process.CommandLine like r"%\\BraveSoftware\\Brave-Browser\\User Data%" or Process.CommandLine like r"%\\CentBrowser\\User Data%" or Process.CommandLine like r"%\\Chromium\\User Data%" or Process.CommandLine like r"%\\CocCoc\\Browser\\User Data%" or Process.CommandLine like r"%\\Comodo\\Dragon\\User Data%" or Process.CommandLine like r"%\\Elements Browser\\User Data%" or Process.CommandLine like r"%\\Epic Privacy Browser\\User Data%" or Process.CommandLine like r"%\\Google\\Chrome Beta\\User Data%" or Process.CommandLine like r"%\\Google\\Chrome SxS\\User Data%" or Process.CommandLine like r"%\\Google\\Chrome\\User Data\\%" or Process.CommandLine like r"%\\Kometa\\User Data%" or Process.CommandLine like r"%\\Maxthon5\\Users%" or Process.CommandLine like r"%\\Microsoft\\Edge\\User Data%" or Process.CommandLine like r"%\\Mozilla\\Firefox\\Profiles%" or Process.CommandLine like r"%\\Nichrome\\User Data%" or Process.CommandLine like r"%\\Opera Software\\Opera GX Stable\\%" or Process.CommandLine like r"%\\Opera Software\\Opera Neon\\User Data%" or Process.CommandLine like r"%\\Opera Software\\Opera Stable\\%" or Process.CommandLine like r"%\\Orbitum\\User Data%" or Process.CommandLine like r"%\\QIP Surf\\User Data%" or Process.CommandLine like r"%\\Sputnik\\User Data%" or Process.CommandLine like r"%\\Torch\\User Data%" or Process.CommandLine like r"%\\uCozMedia\\Uran\\User Data%" or Process.CommandLine like r"%\\Vivaldi\\User Data%")


[ActivityMonitoringRule platform=Windows]
# Detects use of .NET InstallUtil.exe in order to download arbitrary files. The files will be written to "%LOCALAPPDATA%\Microsoft\Windows\INetCache\IE\"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 75edd216-1939-4c73-8d61-7f3a0d85b5cc
RuleName = File Download Via InstallUtil.EXE
EventType = Process.Start
Tag = proc-start-file-download-via-installutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\InstallUtil.exe" or Process.Name == "InstallUtil.exe") and (Process.CommandLine like r"%ftp://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%")


[ActivityMonitoringRule platform=Windows]
# The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create "shortcuts" to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.
# Author: Sreeman
RuleId = 24de4f3b-804c-4165-b442-5a06a2302c7e
RuleName = Arbitrary Shell Command Execution Via Settingcontent-Ms
EventType = Process.Start
Tag = proc-start-arbitrary-shell-command-execution-via-settingcontent-ms
RiskScore = 50
Annotation = {"mitre_attack": ["T1204", "T1566.001"], "author": "Sreeman"}
Query = Process.CommandLine like r"%.SettingContent-ms%" and not Process.CommandLine like r"%immersivecontrolpanel%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious process related to rasdial.exe
# Author: juju4
RuleId = 6bba49bf-7f8c-47d6-a1bb-6b4dece4640e
RuleName = Suspicious RASdial Activity
EventType = Process.Start
Tag = proc-start-suspicious-rasdial-activity
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "juju4"}
Query = Process.Path like r"%rasdial.exe"


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "cipher" built-in utility in order to overwrite deleted data from disk.
# Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources.
# Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives
# Author: frack113
RuleId = 4b046706-5789-4673-b111-66f25fe99534
RuleName = Deleted Data Overwritten Via Cipher.EXE
EventType = Process.Start
Tag = proc-start-deleted-data-overwritten-via-cipher.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1485"], "author": "frack113"}
Query = (Process.Name == "CIPHER.EXE" or Process.Path like r"%\\cipher.exe") and Process.CommandLine like r"% /w:%"


[ActivityMonitoringRule platform=Windows]
# Detects an svchost process spawning an instance of an office application. This happens when the initial word application creates an instance of one of the Office COM objects such as 'Word.Application', 'Excel.Application', etc.
# This can be used by malicious actors to create malicious Office documents with macros on the fly. (See vba2clr project in the references)
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9bdaf1e9-fdef-443b-8081-4341b74a7e28
RuleName = Suspicious New Instance Of An Office COM Object
EventType = Process.Start
Tag = proc-start-suspicious-new-instance-of-an-office-com-object
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\svchost.exe" and (Process.Path like r"%\\eqnedt32.exe" or Process.Path like r"%\\excel.exe" or Process.Path like r"%\\msaccess.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\visio.exe" or Process.Path like r"%\\winword.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child processes of Wscript/Cscript. These include processes such as rundll32 with uncommon exports or PowerShell spawning rundll32 or regsvr32.
# Malware such as Pikabot and Qakbot were seen using similar techniques as well as many others.
# Author: Nasreddine Bencherchali (Nextron Systems), Alejandro Houspanossian ('@lekz86')
RuleId = b6676963-0353-4f88-90f5-36c20d443c6a
RuleName = Cscript/Wscript Potentially Suspicious Child Process
EventType = Process.Start
Tag = proc-start-cscript/wscript-potentially-suspicious-child-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems), Alejandro Houspanossian ('@lekz86')"}
Query = (Parent.Path like r"%\\wscript.exe" or Parent.Path like r"%\\cscript.exe") and (Process.Path like r"%\\rundll32.exe" or (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"%mshta%" and Process.CommandLine like r"%http%" or Process.CommandLine like r"%rundll32%" or Process.CommandLine like r"%regsvr32%" or Process.CommandLine like r"%msiexec%")) and not (Process.Path like r"%\\rundll32.exe" and (Process.CommandLine like r"%UpdatePerUserSystemParameters%" or Process.CommandLine like r"%PrintUIEntry%" or Process.CommandLine like r"%ClearMyTracksByProcess%"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious execution of the Regasm/Regsvcs utilities with an uncommon extension.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = e9f8f8cc-07cc-4e81-b724-f387db9175e4
RuleName = Potentially Suspicious Execution Of Regasm/Regsvcs With Uncommon Extension
EventType = Process.Start
Tag = proc-start-potentially-suspicious-execution-of-regasm/regsvcs-with-uncommon-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.009"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\Regsvcs.exe" or Process.Path like r"%\\Regasm.exe" or Process.Name in ["RegSvcs.exe", "RegAsm.exe"]) and (Process.CommandLine like r"%.dat%" or Process.CommandLine like r"%.gif%" or Process.CommandLine like r"%.jpeg%" or Process.CommandLine like r"%.jpg%" or Process.CommandLine like r"%.png%" or Process.CommandLine like r"%.txt%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of netsh with "add helper" flag in order to add a custom helper DLL. This technique can be abused to add a malicious helper DLL that can be used as a persistence proxy that gets called when netsh.exe is executed.
# Author: Victor Sergeev, oscd.community
RuleId = 56321594-9087-49d9-bf10-524fe8479452
RuleName = Potential Persistence Via Netsh Helper DLL
EventType = Process.Start
Tag = proc-start-potential-persistence-via-netsh-helper-dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.007"], "author": "Victor Sergeev, oscd.community"}
Query = (Process.Name == "netsh.exe" or Process.Path like r"%\\netsh.exe") and Process.CommandLine like r"%add%" and Process.CommandLine like r"%helper%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of new DLL assembly files by "aspnet_compiler.exe", which could be a sign of "aspnet_compiler" abuse to proxy execution through a build provider.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 4c7f49ee-2638-43bb-b85b-ce676c30b260
RuleName = Assembly DLL Creation Via AspNetCompiler
EventType = File.Create
Tag = assembly-dll-creation-via-aspnetcompiler
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\aspnet\_compiler.exe" and File.Path like r"%\\Temporary ASP.NET Files\\%" and File.Path like r"%\\assembly\\tmp\\%" and File.Path like r"%.dll%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of an encoded/obfuscated version of an IP address (hex, octal, etc.) via command line
# Author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
RuleId = 56d19cb4-6414-4769-9644-1ed35ffbb148
RuleName = Obfuscated IP Via CLI
EventType = Process.Start
Tag = proc-start-obfuscated-ip-via-cli
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\ping.exe" or Process.Path like r"%\\arp.exe") and (Process.CommandLine like r"% 0x%" or Process.CommandLine like r"%//0x%" or Process.CommandLine like r"%.0x%" or Process.CommandLine like r"%.00x%" or Process.CommandLine like r"%http://\%%" and Process.CommandLine like r"%\%2e%" or Process.CommandLine regex "https?://[0-9]{1,3}\\.[0-9]{1,3}\\.0[0-9]{3,4}" or Process.CommandLine regex "https?://[0-9]{1,3}\\.0[0-9]{3,7}" or Process.CommandLine regex "https?://0[0-9]{3,11}" or Process.CommandLine regex "https?://(0[0-9]{1,11}\\.){3}0[0-9]{1,11}" or Process.CommandLine regex "https?://0[0-9]{1,11}" or Process.CommandLine regex " [0-7]{7,13}") and not Process.CommandLine regex "https?://((25[0-5]|(2[0-4]|1\\d|[1-9])?\\d)(\\.|\\b)){4}"


[ActivityMonitoringRule platform=Windows]
# Detects the expansion or decompression of cabinet files from potentially suspicious or uncommon locations, e.g. seen in Iranian MeteorExpress related attacks
# Author: Bhabesh Raj, X__Junior (Nextron Systems)
RuleId = 9f107a84-532c-41af-b005-8d12a607639f
RuleName = Potentially Suspicious Cabinet File Expansion
EventType = Process.Start
Tag = proc-start-potentially-suspicious-cabinet-file-expansion
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Bhabesh Raj, X__Junior (Nextron Systems)"}
Query = Process.Path like r"%\\expand.exe" and (Process.CommandLine like r"%-F:%" or Process.CommandLine like r"%/F:%") and (Process.CommandLine like r"%:\\Perflogs\\%" or Process.CommandLine like r"%:\\Users\\Public\\%" or Process.CommandLine like r"%\\Temporary Internet%" or Process.CommandLine like r"%:\\ProgramData%" or Process.CommandLine like r"%\\AppData\\Local\\Temp%" or Process.CommandLine like r"%\\AppData\\Roaming\\Temp%" or Process.CommandLine like r"%:\\Windows\\Temp%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Favorites\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Favourites\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Contacts\\%") and not (Parent.Path == "C:\\Program Files (x86)\\Dell\\UpdateService\\ServiceShell.exe" and Process.CommandLine like r"%C:\\ProgramData\\Dell\\UpdateService\\Temp\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects audio capture via PowerShell Cmdlet.
# Author: E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 932fb0d8-692b-4b0f-a26e-5643a50fe7d6
RuleName = Audio Capture via PowerShell
EventType = Process.Start
Tag = proc-start-audio-capture-via-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1123"], "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%WindowsAudioDevice-Powershell-Cmdlet%" or Process.CommandLine like r"%Toggle-AudioDevice%" or Process.CommandLine like r"%Get-AudioDevice %" or Process.CommandLine like r"%Set-AudioDevice %" or Process.CommandLine like r"%Write-AudioDevice %"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a new office macro files on the systems via an application (browser, mail client).
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 0e29e3a7-1ad8-40aa-b691-9f82ecd33d66
RuleName = Office Macro File Download
EventType = File.Create
Tag = office-macro-file-download
RiskScore = 50
Annotation = {"mitre_attack": ["T1566.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\RuntimeBroker.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\thunderbird.exe" or Process.Path like r"%\\brave.exe" or Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\firefox.exe" or Process.Path like r"%\\iexplore.exe" or Process.Path like r"%\\maxthon.exe" or Process.Path like r"%\\MicrosoftEdge.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe" or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe") and (File.Path like r"%.docm" or File.Path like r"%.dotm" or File.Path like r"%.xlsm" or File.Path like r"%.xltm" or File.Path like r"%.potm" or File.Path like r"%.pptm" or File.Path like r"%.docm:Zone%" or File.Path like r"%.dotm:Zone%" or File.Path like r"%.xlsm:Zone%" or File.Path like r"%.xltm:Zone%" or File.Path like r"%.potm:Zone%" or File.Path like r"%.pptm:Zone%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of rundll32 with a command line that doesn't contain a common extension
# Author: Tim Shelton, Florian Roth (Nextron Systems), Yassine Oukessou
RuleId = c3a99af4-35a9-4668-879e-c09aeb4f2bdf
RuleName = Rundll32 Execution With Uncommon DLL Extension
EventType = Process.Start
Tag = proc-start-rundll32-execution-with-uncommon-dll-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Tim Shelton, Florian Roth (Nextron Systems), Yassine Oukessou"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and not (isnull(Process.CommandLine) or Process.CommandLine == "" or Process.CommandLine like r"%.cpl %" or Process.CommandLine like r"%.cpl,%" or Process.CommandLine like r"%.cpl\"%" or Process.CommandLine like r"%.cpl'%" or Process.CommandLine like r"%.dll %" or Process.CommandLine like r"%.dll,%" or Process.CommandLine like r"%.dll\"%" or Process.CommandLine like r"%.dll'%" or Process.CommandLine like r"%.inf %" or Process.CommandLine like r"%.inf,%" or Process.CommandLine like r"%.inf\"%" or Process.CommandLine like r"%.inf'%" or Process.CommandLine like r"%.cpl" or Process.CommandLine like r"%.dll" or Process.CommandLine like r"%.inf" or Process.CommandLine like r"% -localserver %" or Parent.Path like r"%\\msiexec.exe" and Process.CommandLine like r"%:\\Windows\\Installer\\%" and Process.CommandLine like r"%.tmp%" and Process.CommandLine like r"%zzzzInvokeManagedCustomActionOutOfProc%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects DSParse DLL being loaded by an Office Product
# Author: Antonlovesdnb
RuleId = a2a3b925-7bb0-433b-b508-db9003263cc4
RuleName = Active Directory Parsing DLL Loaded Via Office Application
EventType = Image.Load
Tag = active-directory-parsing-dll-loaded-via-office-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Antonlovesdnb"}
Query = (Process.Path like r"%\\excel.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\onenote.exe" or Process.Path like r"%\\onenoteim.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and Image.Path like r"%\\dsparse.dll%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of the built-in PowerShell cmdlet "Enable-WindowsOptionalFeature" used as a Deployment Image Servicing and Management tool.
# Similar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c740d4cf-a1e9-41de-bb16-8a46a4f57918
RuleName = Potential Suspicious Windows Feature Enabled - ProcCreation
EventType = Process.Start
Tag = proc-start-potential-suspicious-windows-feature-enabled-proccreation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Enable-WindowsOptionalFeature%" and Process.CommandLine like r"%-Online%" and Process.CommandLine like r"%-FeatureName%" and (Process.CommandLine like r"%TelnetServer%" or Process.CommandLine like r"%Internet-Explorer-Optional-amd64%" or Process.CommandLine like r"%TFTP%" or Process.CommandLine like r"%SMB1Protocol%" or Process.CommandLine like r"%Client-ProjFS%" or Process.CommandLine like r"%Microsoft-Windows-Subsystem-Linux%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "reg.exe" to alter registry keys that would replace the user's desktop background.
# This is a common technique used by malware to change the desktop background to a ransom note or other image.
# Author: Stephen Lincoln @slincoln-aiq (AttackIQ)
RuleId = 8cbc9475-8d05-4e27-9c32-df960716c701
RuleName = Potentially Suspicious Desktop Background Change Using Reg.EXE
EventType = Process.Start
Tag = proc-start-potentially-suspicious-desktop-background-change-using-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1112", "T1491.001"], "author": "Stephen Lincoln @slincoln-aiq (AttackIQ)"}
Query = (Process.Path like r"%\\reg.exe" or Process.Name == "reg.exe") and Process.CommandLine like r"%add%" and (Process.CommandLine like r"%Control Panel\\Desktop%" or Process.CommandLine like r"%CurrentVersion\\Policies\\ActiveDesktop%" or Process.CommandLine like r"%CurrentVersion\\Policies\\System%") and (Process.CommandLine like r"%/v NoChangingWallpaper%" and Process.CommandLine like r"%/d 1%" or Process.CommandLine like r"%/v Wallpaper%" and Process.CommandLine like r"%/t REG\_SZ%" or Process.CommandLine like r"%/v WallpaperStyle%" and Process.CommandLine like r"%/d 2%")


[ActivityMonitoringRule platform=Windows]
# Detects the usage of "reg.exe" in order to query reconnaissance information from the registry. Adversaries may interact with the Windows registry to gather information about credentials, the system, configuration, and installed software.
# Author: Timur Zinniatullin, oscd.community
RuleId = 970007b7-ce32-49d0-a4a4-fbef016950bd
RuleName = Potential Configuration And Service Reconnaissance Via Reg.EXE
EventType = Process.Start
Tag = proc-start-potential-configuration-and-service-reconnaissance-via-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1012", "T1007"], "author": "Timur Zinniatullin, oscd.community"}
Query = (Process.Path like r"%\\reg.exe" or Process.Name == "reg.exe") and Process.CommandLine like r"%query%" and (Process.CommandLine like r"%currentVersion\\windows%" or Process.CommandLine like r"%winlogon\\%" or Process.CommandLine like r"%currentVersion\\shellServiceObjectDelayLoad%" or Process.CommandLine like r"%currentVersion\\run%" or Process.CommandLine like r"%currentVersion\\policies\\explorer\\run%" or Process.CommandLine like r"%currentcontrolset\\services%")


[ActivityMonitoringRule platform=Windows]
# Detects when a system process (i.e. located in system32, syswow64, etc.) loads a DLL from a suspicious location or a location with permissive permissions such as "C:\Users\Public"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9e9a9002-56c4-40fd-9eff-e4b09bfa5f6c
RuleName = DLL Load By System Process From Suspicious Locations
EventType = Image.Load
Tag = dll-load-by-system-process-from-suspicious-locations
RiskScore = 50
Annotation = {"mitre_attack": ["T1070"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"C:\\Windows\\%" and (Image.Path like r"C:\\Users\\Public\\%" or Image.Path like r"C:\\PerfLogs\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects DLL sideloading of DLLs that are part of third party software (zoom, discord....etc)
# Author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
RuleId = f9df325d-d7bc-4a32-8a1a-2cc61dcefc63
RuleName = Third Party Software DLL Sideloading
EventType = Image.Load
Tag = third-party-software-dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)"}
Query = Image.Path like r"%\\commfunc.dll" and not (Image.Path like r"%\\AppData\\local\\Google\\Chrome\\Application\\%" or Image.Path like r"C:\\Program Files\\Lenovo\\Communications Utility\\%" or Image.Path like r"C:\\Program Files (x86)\\Lenovo\\Communications Utility\\%") or Image.Path like r"%\\tosbtkbd.dll" and not (Image.Path like r"C:\\Program Files\\Toshiba\\Bluetooth Toshiba Stack\\%" or Image.Path like r"C:\\Program Files (x86)\\Toshiba\\Bluetooth Toshiba Stack\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detection of sc.exe utility adding a new service with special permission which hides that service.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 98c5aeef-32d5-492f-b174-64a691896d25
RuleName = Service Security Descriptor Tampering Via Sc.EXE
EventType = Process.Start
Tag = proc-start-service-security-descriptor-tampering-via-sc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.011"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\sc.exe" or Process.Name == "sc.exe") and Process.CommandLine like r"%sdset%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a macro file for Outlook.
# Author: @ScoubiMtl
RuleId = 8c31f563-f9a7-450c-bfa8-35f8f32f1f61
RuleName = New Outlook Macro Created
EventType = File.Create
Tag = new-outlook-macro-created
RiskScore = 50
Annotation = {"mitre_attack": ["T1137", "T1008", "T1546"], "author": "@ScoubiMtl"}
Query = Process.Path like r"%\\outlook.exe" and File.Path like r"%\\Microsoft\\Outlook\\VbaProject.OTM"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = d6c2ce7e-afb5-4337-9ca4-4b5254ed0565
RuleName = WinSock2 Autorun Keys Modification
EventType = Reg.Any
Tag = winsock2-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters%" and (Reg.TargetObject like r"%\\Protocol\_Catalog9\\Catalog\_Entries%" or Reg.TargetObject like r"%\\NameSpace\_Catalog5\\Catalog\_Entries%") and not (Reg.Value.Data == "(Empty)" or Process.Path == "C:\\Windows\\System32\\MsiExec.exe" or Process.Path == "C:\\Windows\\syswow64\\MsiExec.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Hides the file extension through modification of the registry
# Author: frack113
RuleId = 45e112d0-7759-4c2a-aa36-9f8fb79d3393
RuleName = IE Change Domain Zone
EventType = Reg.Any
Tag = ie-change-domain-zone
RiskScore = 50
Annotation = {"mitre_attack": ["T1137"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\%" and not (Reg.Value.Data in ["DWORD (0x00000000)", "DWORD (0x00000001)", "(Empty)"])
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects Schtask creations that point to a suspicious folder or an environment variable often used by malware
# Author: Florian Roth (Nextron Systems)
RuleId = 81325ce1-be01-4250-944f-b4789644556f
RuleName = Suspicious Schtasks From Env Var Folder
EventType = Process.Start
Tag = proc-start-suspicious-schtasks-from-env-var-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"% /create %" and (Process.CommandLine like r"%:\\Perflogs%" or Process.CommandLine like r"%:\\Windows\\Temp%" or Process.CommandLine like r"%\\AppData\\Local\\%" or Process.CommandLine like r"%\\AppData\\Roaming\\%" or Process.CommandLine like r"%\\Users\\Public%" or Process.CommandLine like r"%\%AppData\%%" or Process.CommandLine like r"%\%Public\%%") or Parent.CommandLine like r"%\\svchost.exe -k netsvcs -p -s Schedule" and (Process.CommandLine like r"%:\\Perflogs%" or Process.CommandLine like r"%:\\Windows\\Temp%" or Process.CommandLine like r"%\\Users\\Public%" or Process.CommandLine like r"%\%Public\%%")) and not (Process.CommandLine like r"%update\_task.xml%" or Process.CommandLine like r"%/Create /TN TVInstallRestore /TR%" or Parent.CommandLine like r"%unattended.ini%" or Process.CommandLine like r"%/Create /Xml \"C:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\Temp\\.CR.%" and Process.CommandLine like r"%Avira\_Security\_Installation.xml%" or Process.CommandLine like r"%/Create /F /TN%" and Process.CommandLine like r"%/Xml %" and Process.CommandLine like r"%\\AppData\\Local\\Temp\\is-%" and Process.CommandLine like r"%Avira\_%" and (Process.CommandLine like r"%.tmp\\UpdateFallbackTask.xml%" or Process.CommandLine like r"%.tmp\\WatchdogServiceControlManagerTimeout.xml%" or Process.CommandLine like r"%.tmp\\SystrayAutostart.xml%" or Process.CommandLine like r"%.tmp\\MaintenanceTask.xml%") or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" and Process.CommandLine like r"%/Create /TN \"klcp\_update\" /XML %" and Process.CommandLine like r"%\\klcp\_update\_task.xml%")
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects netsh commands that turns off the Windows firewall
# Author: Fatih Sirin
RuleId = 57c4bf16-227f-4394-8ec7-1b745ee061c3
RuleName = Firewall Disabled via Netsh.EXE
EventType = Process.Start
Tag = proc-start-firewall-disabled-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "Fatih Sirin"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and (Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%opmode%" and Process.CommandLine like r"%disable%" or Process.CommandLine like r"%advfirewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%state%" and Process.CommandLine like r"%off%")


[ActivityMonitoringRule platform=Windows]
# Detects inline execution of PowerShell code from a file
# Author: frack113
RuleId = ee218c12-627a-4d27-9e30-d6fb2fe22ed2
RuleName = Powershell Inline Execution From A File
EventType = Process.Start
Tag = proc-start-powershell-inline-execution-from-a-file
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "frack113"}
Query = (Process.CommandLine like r"%iex %" or Process.CommandLine like r"%Invoke-Expression %" or Process.CommandLine like r"%Invoke-Command %" or Process.CommandLine like r"%icm %") and (Process.CommandLine like r"%cat %" or Process.CommandLine like r"%get-content %" or Process.CommandLine like r"%type %") and Process.CommandLine like r"% -raw%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of an "Active Directory Schema Cache File" (.sch) file by an uncommon tool.
# Author: xknow @xknow_infosec, Tim Shelton
RuleId = 75bf09fa-1dd7-4d18-9af9-dd9e492562eb
RuleName = ADSI-Cache File Creation By Uncommon Tool
EventType = File.Create
Tag = adsi-cache-file-creation-by-uncommon-tool
RiskScore = 50
Annotation = {"mitre_attack": ["T1001.003"], "author": "xknow @xknow_infosec, Tim Shelton"}
Query = File.Path like r"%\\Local\\Microsoft\\Windows\\SchCache\\%" and File.Path like r"%.sch" and not (Process.Path like r"%:\\Program Files\\Cylance\\Desktop\\CylanceSvc.exe" or Process.Path like r"%:\\Windows\\CCM\\CcmExec.exe" or Process.Path like r"%:\\windows\\system32\\dllhost.exe" or Process.Path like r"%:\\Windows\\system32\\dsac.exe" or Process.Path like r"%:\\Windows\\system32\\efsui.exe" or Process.Path like r"%:\\windows\\system32\\mmc.exe" or Process.Path like r"%:\\windows\\system32\\svchost.exe" or Process.Path like r"%:\\Windows\\System32\\wbem\\WmiPrvSE.exe" or Process.Path like r"%:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe" or Process.Path like r"%:\\Windows\\ccmsetup\\autoupgrade\\ccmsetup%" or Process.Path like r"%:\\Program Files\\SentinelOne\\Sentinel Agent%" or Process.Path like r"%:\\Program Files\\%" and Process.Path like r"%\\Microsoft Office%" and Process.Path like r"%\\OUTLOOK.EXE") and not (Process.Path like r"%\\LANDesk\\LDCLient\\ldapwhoami.exe" or Process.Path like r"%:\\Program Files\\Citrix\\Receiver StoreFront\\Services\\DefaultDomainServices\\Citrix.DeliveryServices.DomainServices.ServiceHost.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community
RuleId = 1ac8666b-046f-4201-8aba-1951aaec03a3
RuleName = Command Line Execution with Suspicious URL and AppData Strings
EventType = Process.Start
Tag = proc-start-command-line-execution-with-suspicious-url-and-appdata-strings
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.003", "T1059.001", "T1105"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community"}
Query = Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%http%" and Process.CommandLine like r"%://%" and Process.CommandLine like r"%\%AppData\%%"


[ActivityMonitoringRule platform=Windows]
# Adversaries may search the Registry on compromised systems for insecurely stored credentials.
# The Windows Registry stores configuration information that can be used by the system or other programs.
# Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services
# Author: frack113
RuleId = e0b0c2ab-3d52-46d9-8cb7-049dc775fbd1
RuleName = Enumeration for Credentials in Registry
EventType = Process.Start
Tag = proc-start-enumeration-for-credentials-in-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.002"], "author": "frack113"}
Query = Process.Path like r"%\\reg.exe" and Process.CommandLine like r"% query %" and Process.CommandLine like r"%/t %" and Process.CommandLine like r"%REG\_SZ%" and Process.CommandLine like r"%/s%" and (Process.CommandLine like r"%/f %" and Process.CommandLine like r"%HKLM%" or Process.CommandLine like r"%/f %" and Process.CommandLine like r"%HKCU%" or Process.CommandLine like r"%HKCU\\Software\\SimonTatham\\PuTTY\\Sessions%")


[ActivityMonitoringRule platform=Windows]
# Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community
RuleId = ac175779-025a-4f12-98b0-acdaeb77ea85
RuleName = PowerShell Script Run in AppData
EventType = Process.Start
Tag = proc-start-powershell-script-run-in-appdata
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community"}
Query = (Process.CommandLine like r"%powershell.exe%" or Process.CommandLine like r"%\\powershell%" or Process.CommandLine like r"%\\pwsh%" or Process.CommandLine like r"%pwsh.exe%") and Process.CommandLine like r"%/c %" and Process.CommandLine like r"%\\AppData\\%" and (Process.CommandLine like r"%Local\\%" or Process.CommandLine like r"%Roaming\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the addition of a new rule to the Windows firewall via netsh
# Author: Markus Neis, Sander Wiebing
RuleId = cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c
RuleName = New Firewall Rule Added Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-new-firewall-rule-added-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "Markus Neis, Sander Wiebing"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"% firewall %" and Process.CommandLine like r"% add %" and not (Process.CommandLine like r"%advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=_:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any%" or Process.CommandLine like r"%advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=_:\\Program Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of the "cloudflared" tool to connect back to a tunnel. This was seen used by threat actors to maintain persistence and remote access to compromised networks.
# Author: Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)
RuleId = 9a019ffc-3580-4c9d-8d87-079f7e8d3fd4
RuleName = Cloudflared Tunnel Execution
EventType = Process.Start
Tag = proc-start-cloudflared-tunnel-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1102", "T1090", "T1572"], "author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"% tunnel %" and Process.CommandLine like r"% run %" and (Process.CommandLine like r"%-config %" or Process.CommandLine like r"%-credentials-contents %" or Process.CommandLine like r"%-credentials-file %" or Process.CommandLine like r"%-token %")


[ActivityMonitoringRule platform=Windows]
# Detects when a possible suspicious driver is being installed via pnputil.exe lolbin
# Author: Hai Vaknin @LuxNoBulIshit, Avihay eldad  @aloneliassaf, Austin Songer @austinsonger
RuleId = a2ea3ae7-d3d0-40a0-a55c-25a45c87cac1
RuleName = Suspicious Driver Install by pnputil.exe
EventType = Process.Start
Tag = proc-start-suspicious-driver-install-by-pnputil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1547"], "author": "Hai Vaknin @LuxNoBulIshit, Avihay eldad  @aloneliassaf, Austin Songer @austinsonger"}
Query = (Process.CommandLine like r"%-i%" or Process.CommandLine like r"%/install%" or Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/add-driver%" or Process.CommandLine like r"%.inf%") and Process.Path like r"%\\pnputil.exe"


[ActivityMonitoringRule platform=Windows]
# Detects attempts to disable the Windows Firewall using PowerShell
# Author: Tim Rauch, Elastic (idea)
RuleId = 12f6b752-042d-483e-bf9c-915a6d06ad75
RuleName = Windows Firewall Disabled via PowerShell
EventType = Process.Start
Tag = proc-start-windows-firewall-disabled-via-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1562"], "author": "Tim Rauch, Elastic (idea)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\powershell\_ise.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%Set-NetFirewallProfile %" and Process.CommandLine like r"% -Enabled %" and Process.CommandLine like r"% False%" and (Process.CommandLine like r"% -All %" or Process.CommandLine like r"%Public%" or Process.CommandLine like r"%Domain%" or Process.CommandLine like r"%Private%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "chrome_frame_helper.dll"
# Author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
RuleId = 72ca7c75-bf85-45cd-aca7-255d360e423c
RuleName = Potential Chrome Frame Helper DLL Sideloading
EventType = Image.Load
Tag = potential-chrome-frame-helper-dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)"}
Query = Image.Path like r"%\\chrome\_frame\_helper.dll" and not (Image.Path like r"C:\\Program Files\\Google\\Chrome\\Application\\%" or Image.Path like r"C:\\Program Files (x86)\\Google\\Chrome\\Application\\%") and not Image.Path like r"%\\AppData\\local\\Google\\Chrome\\Application\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detect malicious GPO modifications can be used to implement many other malicious behaviors.
# Author: frack113
RuleId = ada4b0c4-758b-46ac-9033-9004613a150d
RuleName = Modify Group Policy Settings
EventType = Process.Start
Tag = proc-start-modify-group-policy-settings
RiskScore = 50
Annotation = {"mitre_attack": ["T1484.001"], "author": "frack113"}
Query = (Process.Path like r"%\\reg.exe" or Process.Name == "reg.exe") and Process.CommandLine like r"%\\SOFTWARE\\Policies\\Microsoft\\Windows\\System%" and (Process.CommandLine like r"%GroupPolicyRefreshTimeDC%" or Process.CommandLine like r"%GroupPolicyRefreshTimeOffsetDC%" or Process.CommandLine like r"%GroupPolicyRefreshTime%" or Process.CommandLine like r"%GroupPolicyRefreshTimeOffset%" or Process.CommandLine like r"%EnableSmartScreen%" or Process.CommandLine like r"%ShellSmartScreenLevel%")


[ActivityMonitoringRule platform=Windows]
# Detects file access requests to the Windows Credential History File by an uncommon application.
# This can be a sign of credential stealing. Example case would be usage of mimikatz "dpapi::credhist" function
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7a2a22ea-a203-4cd3-9abf-20eb1c5c6cd2
RuleName = Access To Windows Credential History File By Uncommon Application
EventType = File.Read
Tag = access-to-windows-credential-history-file-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1555.004"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\Microsoft\\Protect\\CREDHIST" and not (Process.Path like r"%:\\Program Files\\%" or Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\Windows\\system32\\%" or Process.Path like r"%:\\Windows\\SysWOW64\\%" or Process.Path like r"%:\\Windows\\explorer.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe.
# Author: frack113
RuleId = fbd7c32d-db2a-4418-b92c-566eb8911133
RuleName = SyncAppvPublishingServer Execute Arbitrary PowerShell Code
EventType = Process.Start
Tag = proc-start-syncappvpublishingserver-execute-arbitrary-powershell-code
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = (Process.Path like r"%\\SyncAppvPublishingServer.exe" or Process.Name == "syncappvpublishingserver.exe") and Process.CommandLine like r"%\"n; %"


[ActivityMonitoringRule platform=Windows]
# Detects Microsoft Visual Studio vsls-agent.exe lolbin execution with a suspicious library load using the --agentExtensionPath parameter
# Author: bohops
RuleId = 43103702-5886-11ed-9b6a-0242ac120002
RuleName = Suspicious Vsls-Agent Command With AgentExtensionPath Load
EventType = Process.Start
Tag = proc-start-suspicious-vsls-agent-command-with-agentextensionpath-load
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "bohops"}
Query = Process.Path like r"%\\vsls-agent.exe" and Process.CommandLine like r"%--agentExtensionPath%" and not Process.CommandLine like r"%Microsoft.VisualStudio.LiveShare.Agent.%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "ConvertTo-SecureString" cmdlet via the commandline. Which is fairly uncommon and could indicate potential suspicious activity
# Author: Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton
RuleId = 74403157-20f5-415d-89a7-c505779585cf
RuleName = ConvertTo-SecureString Cmdlet Usage Via CommandLine
EventType = Process.Start
Tag = proc-start-convertto-securestring-cmdlet-usage-via-commandline
RiskScore = 50
Annotation = {"mitre_attack": ["T1027", "T1059.001"], "author": "Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%ConvertTo-SecureString%"


[ActivityMonitoringRule platform=Windows]
# Detects outlvba (Microsoft VBA for Outlook Addin) DLL being loaded by the outlook process
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9a0b8719-cd3c-4f0a-90de-765a4cb3f5ed
RuleName = Microsoft VBA For Outlook Addin Loaded Via Outlook
EventType = Image.Load
Tag = microsoft-vba-for-outlook-addin-loaded-via-outlook
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\outlook.exe" and Image.Path like r"%\\outlvba.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of different log query utilities and commands to search and dump the content of specific event logs or look for specific event IDs.
# This technique is used by threat actors in order to extract sensitive information from events logs such as usernames, IP addresses, hostnames, etc.
# Author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
RuleId = beaa66d6-aa1b-4e3c-80f5-e0145369bfaf
RuleName = Potentially Suspicious EventLog Recon Activity Using Log Query Utilities
EventType = Process.Start
Tag = proc-start-potentially-suspicious-eventlog-recon-activity-using-log-query-utilities
RiskScore = 50
Annotation = {"mitre_attack": ["T1552"], "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)"}
Query = (Process.CommandLine like r"%Microsoft-Windows-TerminalServices-LocalSessionManager/Operational%" or Process.CommandLine like r"%Microsoft-Windows-Terminal-Services-RemoteConnectionManager/Operational%" or Process.CommandLine like r"%Security%" or Process.CommandLine like r"%-InstanceId 4624%" or Process.CommandLine like r"%System[EventID=4624]%" or Process.CommandLine like r"%EventCode=_4624_%" or Process.CommandLine like r"%EventIdentifier=_4624_%" or Process.CommandLine like r"%-InstanceId 4778%" or Process.CommandLine like r"%System[EventID=4778]%" or Process.CommandLine like r"%EventCode=_4778_%" or Process.CommandLine like r"%EventIdentifier=_4778_%" or Process.CommandLine like r"%-InstanceId 25%" or Process.CommandLine like r"%System[EventID=25]%" or Process.CommandLine like r"%EventCode=_25_%" or Process.CommandLine like r"%EventIdentifier=_25_%") and (Process.CommandLine like r"%Select%" and Process.CommandLine like r"%Win32\_NTLogEvent%" or (Process.Path like r"%\\wevtutil.exe" or Process.Name == "wevtutil.exe") and (Process.CommandLine like r"% qe %" or Process.CommandLine like r"% query-events %") or (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"% ntevent%" or Process.CommandLine like r"%Get-WinEvent %" or Process.CommandLine like r"%get-eventlog %")


[ActivityMonitoringRule platform=Windows]
# Detects execution of the "VMwareToolBoxCmd.exe" with the "script" and "set" flag to setup a specific script to run for a specific VM state
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7aa4e81a-a65c-4e10-9f81-b200eb229d7d
RuleName = Potential Persistence Via VMwareToolBoxCmd.EXE VM State Change Script
EventType = Process.Start
Tag = proc-start-potential-persistence-via-vmwaretoolboxcmd.exe-vm-state-change-script
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\VMwareToolBoxCmd.exe" or Process.Name == "toolbox-cmd.exe") and Process.CommandLine like r"% script %" and Process.CommandLine like r"% set %"


[ActivityMonitoringRule platform=Windows]
# Detects the creation or modification of a vscode related powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3a9fa2ec-30bc-4ebd-b49e-7c9cff225502
RuleName = VsCode Powershell Profile Modification
EventType = File.Create
Tag = vscode-powershell-profile-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.013"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\Microsoft.VSCode\_profile.ps1"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker adds a new "Debugger" value to the "AeDebug" key in order to achieve persistence which will get invoked when an application crashes
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 092af964-4233-4373-b4ba-d86ea2890288
RuleName = Add Debugger Entry To AeDebug For Persistence
EventType = Reg.Any
Tag = add-debugger-entry-to-aedebug-for-persistence
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\\Debugger%" and Reg.Value.Data like r"%.dll" and not Reg.Value.Data == "\"C:\\WINDOWS\\system32\\vsjitdebugger.exe\" -p \%ld -e \%ld -j 0x\%p"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab.
# Author: sam0x90
RuleId = 7df1713a-1a5b-4a4b-a071-dc83b144a101
RuleName = Esentutl Gather Credentials
EventType = Process.Start
Tag = proc-start-esentutl-gather-credentials
RiskScore = 50
Annotation = {"mitre_attack": ["T1003", "T1003.003"], "author": "sam0x90"}
Query = Process.CommandLine like r"%esentutl%" and Process.CommandLine like r"% /p%"


[ActivityMonitoringRule platform=Windows]
# Detects the use of Jlaive to execute assemblies in a copied PowerShell
# Author: Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)
RuleId = 0a99eb3e-1617-41bd-b095-13dc767f3def
RuleName = HackTool - Jlaive In-Memory Assembly Execution
EventType = Process.Start
Tag = proc-start-hacktool-jlaive-in-memory-assembly-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.003"], "author": "Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)"}
Query = Parent.Path like r"%\\cmd.exe" and Parent.CommandLine like r"%.bat" and (Process.Path like r"%\\xcopy.exe" and Process.CommandLine like r"%powershell.exe%" and Process.CommandLine like r"%.bat.exe%" or Process.Path like r"%\\xcopy.exe" and Process.CommandLine like r"%pwsh.exe%" and Process.CommandLine like r"%.bat.exe%" or Process.Path like r"%\\attrib.exe" and Process.CommandLine like r"%+s%" and Process.CommandLine like r"%+h%" and Process.CommandLine like r"%.bat.exe%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Aversaries may use to interact with a remote network share using Server Message Block (SMB).
# This technique is used by post-exploitation frameworks.
# Author: frack113
RuleId = 4aafb0fa-bff5-4b9d-b99e-8093e659c65f
RuleName = Writing Local Admin Share
EventType = File.Create
Tag = writing-local-admin-share
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.002"], "author": "frack113"}
Query = File.Path like r"%\\\\127.0.0%" and File.Path like r"%\\ADMIN$\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of certutil with the "encode" flag to encode a file to base64. This can be abused by threat actors and attackers for data exfiltration
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a
RuleName = File Encoded To Base64 Via Certutil.EXE
EventType = Process.Start
Tag = proc-start-file-encoded-to-base64-via-certutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1027"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\certutil.exe" or Process.Name == "CertUtil.exe") and (Process.CommandLine like r"%-encode%" or Process.CommandLine like r"%/encode%")


[ActivityMonitoringRule platform=Windows]
# Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
# Author: Harish Segar (rule)
RuleId = b3512211-c67e-4707-bedc-66efc7848863
RuleName = Potential PowerShell Downgrade Attack
EventType = Process.Start
Tag = proc-start-potential-powershell-downgrade-attack
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "Harish Segar (rule)"}
Query = Process.Path like r"%\\powershell.exe" and (Process.CommandLine like r"% -version 2 %" or Process.CommandLine like r"% -versio 2 %" or Process.CommandLine like r"% -versi 2 %" or Process.CommandLine like r"% -vers 2 %" or Process.CommandLine like r"% -ver 2 %" or Process.CommandLine like r"% -ve 2 %" or Process.CommandLine like r"% -v 2 %")


[ActivityMonitoringRule platform=Windows]
# This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server.
# Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
# Author: Agro (@agro_sev) oscd.community
RuleId = 0152550d-3a26-4efd-9f0e-54a0b28ae2f3
RuleName = Detection of PowerShell Execution via Sqlps.exe
EventType = Process.Start
Tag = proc-start-detection-of-powershell-execution-via-sqlps.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1127"], "author": "Agro (@agro_sev) oscd.community"}
Query = Parent.Path like r"%\\sqlps.exe" or (Process.Path like r"%\\sqlps.exe" or Process.Name == "sqlps.exe") and not Parent.Path like r"%\\sqlagent.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "ProtocolHandler" to download files. Downloaded files will be located in the cache folder (for example - %LOCALAPPDATA%\Microsoft\Windows\INetCache\IE)
# Author: frack113
RuleId = 104cdb48-a7a8-4ca7-a453-32942c6e5dcb
RuleName = File Download Using ProtocolHandler.exe
EventType = Process.Start
Tag = proc-start-file-download-using-protocolhandler.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = (Process.Path like r"%\\protocolhandler.exe" or Process.Name == "ProtocolHandler.exe") and (Process.CommandLine like r"%ftp://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%")


[ActivityMonitoringRule platform=Windows]
# Detects Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel
# Author: Nasreddine Bencherchali (Nextron Systems), citron_ninja
RuleId = 90d6bd71-dffb-4989-8d86-a827fedd6624
RuleName = Visual Studio Code Tunnel Execution
EventType = Process.Start
Tag = proc-start-visual-studio-code-tunnel-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "Nasreddine Bencherchali (Nextron Systems), citron_ninja"}
Query = isnull(Process.Name) and Process.CommandLine like r"%.exe tunnel" or Process.CommandLine like r"%.exe tunnel%" and Process.CommandLine like r"%--name %" and Process.CommandLine like r"%--accept-server-license-terms%" or Parent.CommandLine like r"% tunnel" and Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%/d /c %" and Process.CommandLine like r"%\\servers\\Stable-%" and Process.CommandLine like r"%code-server.cmd%"
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the usage of "mstsc.exe" with the "/v" flag to initiate a connection to a remote server.
# Adversaries may use valid accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.
# Author: frack113
RuleId = 954f0af7-62dd-418f-b3df-a84bc2c7a774
RuleName = New Remote Desktop Connection Initiated Via Mstsc.EXE
EventType = Process.Start
Tag = proc-start-new-remote-desktop-connection-initiated-via-mstsc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1021.001"], "author": "frack113"}
Query = (Process.Path like r"%\\mstsc.exe" or Process.Name == "mstsc.exe") and Process.CommandLine like r"% /v:%" and not (Parent.Path == "C:\\Windows\\System32\\lxss\\wslhost.exe" and Process.CommandLine like r"%C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = cbf93e5d-ca6c-4722-8bea-e9119007c248
RuleName = CurrentVersion NT Autorun Keys Modification
EventType = Reg.Any
Tag = currentversion-nt-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion%" and (Reg.TargetObject like r"%\\Winlogon\\VmApplet%" or Reg.TargetObject like r"%\\Winlogon\\Userinit%" or Reg.TargetObject like r"%\\Winlogon\\Taskman%" or Reg.TargetObject like r"%\\Winlogon\\Shell%" or Reg.TargetObject like r"%\\Winlogon\\GpExtensions%" or Reg.TargetObject like r"%\\Winlogon\\AppSetup%" or Reg.TargetObject like r"%\\Winlogon\\AlternateShells\\AvailableShells%" or Reg.TargetObject like r"%\\Windows\\IconServiceLib%" or Reg.TargetObject like r"%\\Windows\\Appinit\_Dlls%" or Reg.TargetObject like r"%\\Image File Execution Options%" or Reg.TargetObject like r"%\\Font Drivers%" or Reg.TargetObject like r"%\\Drivers32%" or Reg.TargetObject like r"%\\Windows\\Run%" or Reg.TargetObject like r"%\\Windows\\Load%") and not (Reg.Value.Data == "(Empty)" or Reg.TargetObject like r"%\\Image File Execution Options\\%" and (Reg.TargetObject like r"%\\DisableExceptionChainValidation" or Reg.TargetObject like r"%\\MitigationOptions") or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\Temp\\%" and Process.Path like r"%\\MicrosoftEdgeUpdate.exe" or Reg.TargetObject like r"%\\ClickToRunStore\\HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\%" or Reg.TargetObject like r"%\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\%" or Process.Path in ["C:\\Program Files\\Microsoft Office\\root\\integration\\integrator.exe", "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"] or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path == "C:\\Windows\\system32\\svchost.exe" and (Reg.TargetObject like r"%\\Winlogon\\GPExtensions\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\PreviousPolicyAreas%" or Reg.TargetObject like r"%\\Winlogon\\GPExtensions\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\MaxNoGPOListChangesInterval%") and (Reg.Value.Data in ["DWORD (0x00000009)", "DWORD (0x000003c0)"]) or Process.Path like r"C:\\Windows\\Microsoft.NET\\Framework%" and Process.Path like r"%\\ngen.exe" or Process.Path like r"%\\AppData\\Local\\Microsoft\\OneDrive\\StandaloneUpdater\\OneDriveSetup.exe" and Reg.TargetObject like r"%\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Delete Cached Update Binary" and Reg.Value.Data like r"C:\\Windows\\system32\\cmd.exe /q /c del /q \"C:\\Users\\%" and Reg.Value.Data like r"%\\AppData\\Local\\Microsoft\\OneDrive\\Update\\OneDriveSetup.exe\"")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects PowerShell creating a binary executable or a script file.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 7047d730-036f-4f40-b9d8-1c63e36d5e62
RuleName = Potential Binary Or Script Dropper Via PowerShell
EventType = File.Create
Tag = potential-binary-or-script-dropper-via-powershell
RiskScore = 50
Annotation = {"author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (File.Path like r"%.bat" or File.Path like r"%.chm" or File.Path like r"%.cmd" or File.Path like r"%.com" or File.Path like r"%.dll" or File.Path like r"%.exe" or File.Path like r"%.hta" or File.Path like r"%.jar" or File.Path like r"%.js" or File.Path like r"%.ocx" or File.Path like r"%.scr" or File.Path like r"%.sys" or File.Path like r"%.vbe" or File.Path like r"%.vbs" or File.Path like r"%.wsf") and not (File.Path like r"C:\\Users\\%" and File.Path like r"%\\AppData\\Local\\Temp\\%" and (File.Path like r"%.dll" or File.Path like r"%.exe") or File.Path like r"C:\\Windows\\Temp\\%" and (File.Path like r"%.dll" or File.Path like r"%.exe"))
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).
# Author: Roberto Rodriguez @Cyb3rWard0g
RuleId = 734f8d9b-42b8-41b2-bcf5-abaf49d5a3c8
RuleName = Remote PowerShell Session Host Process (WinRM)
EventType = Process.Start
Tag = proc-start-remote-powershell-session-host-process-(winrm)
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1021.006"], "author": "Roberto Rodriguez @Cyb3rWard0g"}
Query = Process.Path like r"%\\wsmprovhost.exe" or Parent.Path like r"%\\wsmprovhost.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
# Author: Nikita Nazarov, oscd.community
RuleId = e13f668e-7f95-443d-98d2-1816a7648a7b
RuleName = Detected Windows Software Discovery
EventType = Process.Start
Tag = proc-start-detected-windows-software-discovery
RiskScore = 50
Annotation = {"mitre_attack": ["T1518"], "author": "Nikita Nazarov, oscd.community"}
Query = Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%query%" and Process.CommandLine like r"%\\software\\%" and Process.CommandLine like r"%/v%" and Process.CommandLine like r"%svcversion%"


[ActivityMonitoringRule platform=Windows]
# Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
# Author: Julia Fomina, oscd.community
RuleId = cd3d1298-eb3b-476c-ac67-12847de55813
RuleName = DLL Execution via Rasautou.exe
EventType = Process.Start
Tag = proc-start-dll-execution-via-rasautou.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Julia Fomina, oscd.community"}
Query = (Process.Path like r"%\\rasautou.exe" or Process.Name == "rasdlui.exe") and Process.CommandLine like r"% -d %" and Process.CommandLine like r"% -p %"


[ActivityMonitoringRule platform=Windows]
# Detects attempts of decoding a base64 Gzip archive via PowerShell. This technique is often used as a method to load malicious content into memory afterward.
# Author: frack113
RuleId = d75d6b6b-adb9-48f7-824b-ac2e786efe1f
RuleName = Suspicious FromBase64String Usage On Gzip Archive - Process Creation
EventType = Process.Start
Tag = proc-start-suspicious-frombase64string-usage-on-gzip-archive-process-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1132.001"], "author": "frack113"}
Query = Process.CommandLine like r"%FromBase64String%" and Process.CommandLine like r"%MemoryStream%" and Process.CommandLine like r"%H4sI%"


[ActivityMonitoringRule platform=Windows]
# Detects remote binary or command execution via the ScreenConnect Service.
# Use this rule in order to hunt for potentially anomalous executions originating from ScreenConnect
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d1a401ab-8c47-4e86-a7d8-2460b6a53e4a
RuleName = Remote Access Tool - ScreenConnect Remote Command Execution - Hunting
EventType = Process.Start
Tag = proc-start-remote-access-tool-screenconnect-remote-command-execution-hunting
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\ScreenConnect.ClientService.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the usage of the "Squirrel.exe" binary to execute arbitrary processes. This binary is part of multiple Electron based software installations (Slack, Teams, Discord, etc.)
# Author: Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community
RuleId = 45239e6a-b035-4aaf-b339-8ad379fcb67e
RuleName = Process Proxy Execution Via Squirrel.EXE
EventType = Process.Start
Tag = proc-start-process-proxy-execution-via-squirrel.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community"}
Query = (Process.Path like r"%\\squirrel.exe" or Process.Path like r"%\\update.exe") and (Process.CommandLine like r"%--processStart%" or Process.CommandLine like r"%--processStartAndWait%" or Process.CommandLine like r"%--createShortcut%") and not (Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\Discord\\Update.exe%" and Process.CommandLine like r"% --processStart%" and Process.CommandLine like r"%Discord.exe%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\GitHubDesktop\\Update.exe%" and Process.CommandLine like r"%GitHubDesktop.exe%" and (Process.CommandLine like r"%--createShortcut%" or Process.CommandLine like r"%--processStartAndWait%") or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\Microsoft\\Teams\\Update.exe%" and Process.CommandLine like r"%Teams.exe%" and (Process.CommandLine like r"%--processStart%" or Process.CommandLine like r"%--createShortcut%") or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\yammerdesktop\\Update.exe%" and Process.CommandLine like r"%Yammer.exe%" and (Process.CommandLine like r"%--processStart%" or Process.CommandLine like r"%--createShortcut%"))


[ActivityMonitoringRule platform=Windows]
# Detects the execution of well known tools that can be abused for data exfiltration and tunneling.
# Author: Daniil Yugoslavskiy, oscd.community
RuleId = c75309a3-59f8-4a8d-9c2c-4c927ad50555
RuleName = Tunneling Tool Execution
EventType = Process.Start
Tag = proc-start-tunneling-tool-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1041", "T1572", "T1071.001"], "author": "Daniil Yugoslavskiy, oscd.community"}
Query = Process.Path like r"%\\httptunnel.exe" or Process.Path like r"%\\plink.exe" or Process.Path like r"%\\socat.exe" or Process.Path like r"%\\stunnel.exe"


[ActivityMonitoringRule platform=Windows]
# The "VSIISExeLauncher.exe" binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 18749301-f1c5-4efc-a4c3-276ff1f5b6f8
RuleName = Use of VSIISExeLauncher.exe
EventType = Process.Start
Tag = proc-start-use-of-vsiisexelauncher.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\VSIISExeLauncher.exe" or Process.Name == "VSIISExeLauncher.exe") and (Process.CommandLine like r"% -p %" or Process.CommandLine like r"% -a %")


[ActivityMonitoringRule platform=Windows]
# Detects the rare use of the command line tool shutdown to logoff a user
# Author: frack113
RuleId = ec290c06-9b6b-4338-8b6b-095c0f284f10
RuleName = Suspicious Execution of Shutdown to Log Out
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-shutdown-to-log-out
RiskScore = 50
Annotation = {"mitre_attack": ["T1529"], "author": "frack113"}
Query = Process.Path like r"%\\shutdown.exe" and Process.CommandLine like r"%/l%"


[ActivityMonitoringRule platform=Windows]
# Detects the Installation of a Exchange Transport Agent
# Author: Tobias Michalski (Nextron Systems)
RuleId = 83809e84-4475-4b69-bc3e-4aad8568612f
RuleName = MSExchange Transport Agent Installation
EventType = Process.Start
Tag = proc-start-msexchange-transport-agent-installation
RiskScore = 50
Annotation = {"mitre_attack": ["T1505.002"], "author": "Tobias Michalski (Nextron Systems)"}
Query = Process.CommandLine like r"%Install-TransportAgent%"


[ActivityMonitoringRule platform=Windows]
# The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules.
# Author: Christopher Peacock @SecurePeacock, SCYTHE @scythe_io
RuleId = 49be8799-7b4d-4fda-ad23-cafbefdebbc5
RuleName = Use of Wfc.exe
EventType = Process.Start
Tag = proc-start-use-of-wfc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io"}
Query = Process.Path like r"%\\wfc.exe" or Process.Name == "wfc.exe"


[ActivityMonitoringRule platform=Windows]
# Detect the use of "<" to read and potentially execute a file via cmd.exe
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 241e802a-b65e-484f-88cd-c2dc10f9206d
RuleName = Read Contents From Stdin Via Cmd.EXE
EventType = Process.Start
Tag = proc-start-read-contents-from-stdin-via-cmd.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.003"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "Cmd.Exe" or Process.Path like r"%\\cmd.exe") and Process.CommandLine like r"%<%"


[ActivityMonitoringRule platform=Windows]
# Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group
# Author: Florian Roth (Nextron Systems), Bartlomiej Czyz (@bczyz1)
RuleId = 958d81aa-8566-4cea-a565-59ccd4df27b0
RuleName = Defrag Deactivation
EventType = Process.Start
Tag = proc-start-defrag-deactivation
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Florian Roth (Nextron Systems), Bartlomiej Czyz (@bczyz1)"}
Query = Process.Path like r"%\\schtasks.exe" and (Process.CommandLine like r"%/delete%" or Process.CommandLine like r"%/change%") and Process.CommandLine like r"%/TN%" and Process.CommandLine like r"%\\Microsoft\\Windows\\Defrag\\ScheduledDefrag%"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "libcurl.dll" by the "gup.exe" process from an uncommon location
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = e49b5745-1064-4ac1-9a2e-f687bc2dd37e
RuleName = Potential DLL Sideloading Of Libcurl.DLL Via GUP.EXE
EventType = Image.Load
Tag = potential-dll-sideloading-of-libcurl.dll-via-gup.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\gup.exe" and Image.Path like r"%\\libcurl.dll" and not Process.Path like r"%\\Notepad++\\updater\\GUP.exe"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects file access requests to browser credential stores by uncommon processes.
# Could indicate potential attempt of credential stealing.
# Requires heavy baselining before usage
# Author: frack113
RuleId = 91cb43db-302a-47e3-b3c8-7ede481e27bf
RuleName = Access To Browser Credential Files By Uncommon Application
EventType = File.Read
Tag = access-to-browser-credential-files-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "frack113"}
Query = (File.Path like r"%\\Appdata\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV01.dat" or File.Path like r"%\\cookies.sqlite" or File.Path like r"%release\\key3.db" or File.Path like r"%release\\key4.db" or File.Path like r"%release\\logins.json" or File.Path like r"%\\Appdata\\Local\\Chrome\\User Data\\Default\\Login Data%" or File.Path like r"%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Network\\Cookies%" or File.Path like r"%\\AppData\\Local\\Google\\Chrome\\User Data\\Local State%") and not (Process.Path == "System" or Process.Path like r"%:\\Program Files\\%" or Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\WINDOWS\\system32\\%" or Process.Path like r"%:\\WINDOWS\\SysWOW64\\%") and not (Process.Path like r"%:\\ProgramData\\Microsoft\\Windows Defender\\%" and (Process.Path like r"%\\MpCopyAccelerator.exe" or Process.Path like r"%\\MsMpEng.exe") or Process.Path like r"%\\thor64.exe" or Process.Path like r"%\\thor.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a registry value in the ".wav\OpenWithProgIds" key with an uncommon name. This could be related to SNAKE Malware as reported by CISA
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7e163e96-b9a5-45d6-b2cd-d7d87b13c60b
RuleName = Potential Encrypted Registry Blob Related To SNAKE Malware
EventType = Reg.Any
Tag = potential-encrypted-registry-blob-related-to-snake-malware
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds\\%" and not (Reg.TargetObject like r"%.AssocFile.WAV" or Reg.TargetObject like r"%.wav.%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detect VBoxDrvInst.exe run with parameters allowing processing INF file.
# This allows to create values in the registry and install drivers.
# For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
# Author: Konstantin Grishchenko, oscd.community
RuleId = b7b19cb6-9b32-4fc4-a108-73f19acfe262
RuleName = Suspicious VBoxDrvInst.exe Parameters
EventType = Process.Start
Tag = proc-start-suspicious-vboxdrvinst.exe-parameters
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Konstantin Grishchenko, oscd.community"}
Query = Process.Path like r"%\\VBoxDrvInst.exe" and Process.CommandLine like r"%driver%" and Process.CommandLine like r"%executeinf%"


[ActivityMonitoringRule platform=Windows]
# Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system
# Author: frack113
RuleId = f8ad2e2c-40b6-4117-84d7-20b89896ab23
RuleName = Suspicious Scan Loop Network
EventType = Process.Start
Tag = proc-start-suspicious-scan-loop-network
RiskScore = 50
Annotation = {"mitre_attack": ["T1059", "T1018"], "author": "frack113"}
Query = (Process.CommandLine like r"%for %" or Process.CommandLine like r"%foreach %") and (Process.CommandLine like r"%nslookup%" or Process.CommandLine like r"%ping%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of msdt.exe using the "cab" flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190
# Author: Nasreddine Bencherchali (Nextron Systems), GossiTheDog, frack113
RuleId = dc4576d4-7467-424f-9eee-fd2b02855fe0
RuleName = Suspicious Cabinet File Execution Via Msdt.EXE
EventType = Process.Start
Tag = proc-start-suspicious-cabinet-file-execution-via-msdt.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1202"], "author": "Nasreddine Bencherchali (Nextron Systems), GossiTheDog, frack113"}
Query = (Process.Path like r"%\\msdt.exe" or Process.Name == "msdt.exe") and (Process.CommandLine like r"% -cab %" or Process.CommandLine like r"% /cab %")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "whoami.exe" with the "/FO" flag to choose CSV as output format or with redirection options to export the results to a file for later use.
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = c30fb093-1109-4dc8-88a8-b30d11c95a5d
RuleName = Whoami.EXE Execution With Output Option
EventType = Process.Start
Tag = proc-start-whoami.exe-execution-with-output-option
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\whoami.exe" or Process.Name == "whoami.exe") and (Process.CommandLine like r"% /FO CSV%" or Process.CommandLine like r"% -FO CSV%") or Process.CommandLine like r"%whoami%>%"


[ActivityMonitoringRule platform=Windows]
# Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.
# Author: Maxime Thiebaut (@0xThiebaut), Tim Shelton (HAWK.IO)
RuleId = 81315b50-6b60-4d8f-9928-3466e1022515
RuleName = Suspicious desktop.ini Action
EventType = File.Create
Tag = suspicious-desktop.ini-action
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.009"], "author": "Maxime Thiebaut (@0xThiebaut), Tim Shelton (HAWK.IO)"}
Query = File.Path like r"%\\desktop.ini" and not (Process.Path like r"C:\\Windows\\%" or Process.Path like r"C:\\Program Files\\%" or Process.Path like r"C:\\Program Files (x86)\\%" or Process.Path like r"%\\AppData\\Local\\JetBrains\\Toolbox\\bin\\7z.exe" and File.Path like r"%\\JetBrains\\apps\\%" or File.Path like r"C:\\$WINDOWS.~BT\\NewOS\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects DNS queries to a TeamViewer domain only resolved by a TeamViewer client by an image that isn't named TeamViewer (sometimes used by threat actors for obfuscation)
# Author: Florian Roth (Nextron Systems)
RuleId = 778ba9a8-45e4-4b80-8e3e-34a419f0b85e
RuleName = TeamViewer Domain Query By Non-TeamViewer Application
EventType = Dns.Query
Tag = teamviewer-domain-query-by-non-teamviewer-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Florian Roth (Nextron Systems)"}
Query = (Dns.QueryRequest in ["taf.teamviewer.com", "udp.ping.teamviewer.com"]) and not Process.Path like r"%TeamViewer%"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects possible payload obfuscation via the commandline
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = a77c1610-fc73-4019-8e29-0f51efc04a51
RuleName = Potential Dosfuscation Activity
EventType = Process.Start
Tag = proc-start-potential-dosfuscation-activity
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%^^%" or Process.CommandLine like r"%^|^%" or Process.CommandLine like r"%,;,%" or Process.CommandLine like r"%;;;;%" or Process.CommandLine like r"%;; ;;%" or Process.CommandLine like r"%(,(,%" or Process.CommandLine like r"%\%COMSPEC:~%" or Process.CommandLine like r"% c^m^d%" or Process.CommandLine like r"%^c^m^d%" or Process.CommandLine like r"% c^md%" or Process.CommandLine like r"% cm^d%" or Process.CommandLine like r"%^cm^d%" or Process.CommandLine like r"% s^et %" or Process.CommandLine like r"% s^e^t %" or Process.CommandLine like r"% se^t %"


[ActivityMonitoringRule platform=Windows]
# setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
# Author: Konstantin Grishchenko, oscd.community
RuleId = 285b85b1-a555-4095-8652-a8a4106af63f
RuleName = Suspicious Rundll32 Setupapi.dll Activity
EventType = Process.Start
Tag = proc-start-suspicious-rundll32-setupapi.dll-activity
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Konstantin Grishchenko, oscd.community"}
Query = Process.Path like r"%\\runonce.exe" and Parent.Path like r"%\\rundll32.exe" and Parent.CommandLine like r"%setupapi.dll%" and Parent.CommandLine like r"%InstallHinfSection%"
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = a80f662f-022f-4429-9b8c-b1a41aaa6688
RuleName = Internet Explorer Autorun Keys Modification
EventType = Reg.Any
Tag = internet-explorer-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = (Reg.TargetObject like r"%\\Software\\Wow6432Node\\Microsoft\\Internet Explorer%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Internet Explorer%") and (Reg.TargetObject like r"%\\Toolbar%" or Reg.TargetObject like r"%\\Extensions%" or Reg.TargetObject like r"%\\Explorer Bars%") and not (Reg.Value.Data == "(Empty)" or Reg.TargetObject like r"%\\Extensions\\{2670000A-7350-4f3c-8081-5663EE0C6C49}%" or Reg.TargetObject like r"%\\Extensions\\{31D09BA0-12F5-4CCE-BE8A-2923E76605DA}%" or Reg.TargetObject like r"%\\Extensions\\{789FE86F-6FC4-46A1-9849-EDE0DB0C95CA}%" or Reg.TargetObject like r"%\\Extensions\\{A95fe080-8f5d-11d2-a20b-00aa003c157a}%" or Reg.TargetObject like r"%\\Toolbar\\ShellBrowser\\ITBar7Layout" or Reg.TargetObject like r"%\\Toolbar\\ShowDiscussionButton" or Reg.TargetObject like r"%\\Toolbar\\Locked")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process
# Author: Roberto Rodriguez @Cyb3rWard0g
RuleId = 052ec6f6-1adc-41e6-907a-f1c813478bee
RuleName = CreateRemoteThread API and LoadLibrary
EventType = Process.CreateRemoteThread
Tag = createremotethread-api-and-loadlibrary
RiskScore = 50
Annotation = {"mitre_attack": ["T1055.001"], "author": "Roberto Rodriguez @Cyb3rWard0g"}
Query = Thread.StartModule like r"%\\kernel32.dll" and Thread.StartFunctionName == "LoadLibraryA"
GenericProperty1 = Thread.StartModule
GenericProperty2 = Thread.StartFunctionName


[ActivityMonitoringRule platform=Windows]
# Detects modification addition to the 'TypedPaths' key in the user or admin registry via the commandline. Which might indicate persistence attempt
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ec88289a-7e1a-4cc3-8d18-bd1f60e4b9ba
RuleName = Persistence Via TypedPaths - CommandLine
EventType = Process.Start
Tag = proc-start-persistence-via-typedpaths-commandline
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\TypedPaths%"


[ActivityMonitoringRule platform=Windows]
# Detects execution from an Alternate Data Stream (ADS). Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection
# Author: frack113
RuleId = 7f43c430-5001-4f8b-aaa9-c3b88f18fa5c
RuleName = Execute From Alternate Data Streams
EventType = Process.Start
Tag = proc-start-execute-from-alternate-data-streams
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113"}
Query = Process.CommandLine like r"%txt:%" and (Process.CommandLine like r"%type %" and Process.CommandLine like r"% > %" or Process.CommandLine like r"%makecab %" and Process.CommandLine like r"%.cab%" or Process.CommandLine like r"%reg %" and Process.CommandLine like r"% export %" or Process.CommandLine like r"%regedit %" and Process.CommandLine like r"% /E %" or Process.CommandLine like r"%esentutl %" and Process.CommandLine like r"% /y %" and Process.CommandLine like r"% /d %" and Process.CommandLine like r"% /o %")


[ActivityMonitoringRule platform=Windows]
# Detects the import of the specified file to the registry with regedit.exe.
# Author: Oddvar Moe, Sander Wiebing, oscd.community
RuleId = 73bba97f-a82d-42ce-b315-9182e76c57b1
RuleName = Imports Registry Key From a File
EventType = Process.Start
Tag = proc-start-imports-registry-key-from-a-file
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Oddvar Moe, Sander Wiebing, oscd.community"}
Query = (Process.Path like r"%\\regedit.exe" or Process.Name == "REGEDIT.EXE") and (Process.CommandLine like r"% /i %" or Process.CommandLine like r"% /s %" or Process.CommandLine like r"%.reg%") and not ((Process.CommandLine like r"% -e %" or Process.CommandLine like r"% /e %" or Process.CommandLine like r"% -a %" or Process.CommandLine like r"% /a %" or Process.CommandLine like r"% -c %" or Process.CommandLine like r"% /c %") and Process.CommandLine regex ":[^ \\\\]")


[ActivityMonitoringRule platform=Windows]
# Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = dd6b39d9-d9be-4a3b-8fe0-fe3c6a5c1795
RuleName = Use NTFS Short Name in Command Line
EventType = Process.Start
Tag = proc-start-use-ntfs-short-name-in-command-line
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%~1.exe%" or Process.CommandLine like r"%~1.bat%" or Process.CommandLine like r"%~1.msi%" or Process.CommandLine like r"%~1.vbe%" or Process.CommandLine like r"%~1.vbs%" or Process.CommandLine like r"%~1.dll%" or Process.CommandLine like r"%~1.ps1%" or Process.CommandLine like r"%~1.js%" or Process.CommandLine like r"%~1.hta%" or Process.CommandLine like r"%~2.exe%" or Process.CommandLine like r"%~2.bat%" or Process.CommandLine like r"%~2.msi%" or Process.CommandLine like r"%~2.vbe%" or Process.CommandLine like r"%~2.vbs%" or Process.CommandLine like r"%~2.dll%" or Process.CommandLine like r"%~2.ps1%" or Process.CommandLine like r"%~2.js%" or Process.CommandLine like r"%~2.hta%") and not (Parent.Path like r"%\\WebEx\\WebexHost.exe" or Parent.Path like r"%\\thor\\thor64.exe" or Process.CommandLine like r"%C:\\xampp\\vcredist\\VCREDI~1.EXE%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
# Author: Florian Roth (Nextron Systems)
RuleId = d5b9ae7a-e6fc-405e-80ff-2ff9dcc64e7e
RuleName = Sysprep on AppData Folder
EventType = Process.Start
Tag = proc-start-sysprep-on-appdata-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\sysprep.exe" and Process.CommandLine like r"%\\AppData\\%"


[ActivityMonitoringRule platform=Windows]
# Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
# Author: Florian Roth (Nextron Systems)
RuleId = 864403a1-36c9-40a2-a982-4c9a45f7d833
RuleName = Exploit for CVE-2017-0261
EventType = Process.Start
Tag = proc-start-exploit-for-cve-2017-0261
RiskScore = 50
Annotation = {"mitre_attack": ["T1203", "T1204.002", "T1566.001"], "author": "Florian Roth (Nextron Systems)"}
Query = Parent.Path like r"%\\WINWORD.EXE" and Process.Path like r"%\\FLTLDR.exe%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of WMIC to query information on a remote system
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 7773b877-5abb-4a3e-b9c9-fd0369b59b00
RuleName = WMIC Remote Command Execution
EventType = Process.Start
Tag = proc-start-wmic-remote-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%/node:%" and not (Process.CommandLine like r"%/node:127.0.0.1 %" or Process.CommandLine like r"%/node:localhost %")


[ActivityMonitoringRule platform=Windows]
# Detect set DisallowRun to 1 to prevent user running specific computer program
# Author: frack113
RuleId = 275641a5-a492-45e2-a817-7c81e9d9d3e9
RuleName = Add DisallowRun Execution to Registry
EventType = Reg.Any
Tag = add-disallowrun-execution-to-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = Reg.TargetObject like r"%Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects when the Console Window Host (conhost.exe) process is spawned by an uncommon parent process, which could be indicative of potential code injection activity.
# Author: Tim Rauch, Elastic (idea)
RuleId = cbb9e3d1-2386-4e59-912e-62f1484f7a89
RuleName = Conhost Spawned By Uncommon Parent Process
EventType = Process.Start
Tag = proc-start-conhost-spawned-by-uncommon-parent-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Tim Rauch, Elastic (idea)"}
Query = Process.Path like r"%\\conhost.exe" and (Parent.Path like r"%\\explorer.exe" or Parent.Path like r"%\\lsass.exe" or Parent.Path like r"%\\regsvr32.exe" or Parent.Path like r"%\\rundll32.exe" or Parent.Path like r"%\\services.exe" or Parent.Path like r"%\\smss.exe" or Parent.Path like r"%\\spoolsv.exe" or Parent.Path like r"%\\svchost.exe" or Parent.Path like r"%\\userinit.exe" or Parent.Path like r"%\\wininit.exe" or Parent.Path like r"%\\winlogon.exe") and not (Parent.CommandLine like r"%-k apphost -s AppHostSvc%" or Parent.CommandLine like r"%-k imgsvc%" or Parent.CommandLine like r"%-k localService -p -s RemoteRegistry%" or Parent.CommandLine like r"%-k LocalSystemNetworkRestricted -p -s NgcSvc%" or Parent.CommandLine like r"%-k NetSvcs -p -s NcaSvc%" or Parent.CommandLine like r"%-k netsvcs -p -s NetSetupSvc%" or Parent.CommandLine like r"%-k netsvcs -p -s wlidsvc%" or Parent.CommandLine like r"%-k NetworkService -p -s DoSvc%" or Parent.CommandLine like r"%-k wsappx -p -s AppXSvc%" or Parent.CommandLine like r"%-k wsappx -p -s ClipSVC%") and not (Parent.CommandLine like r"%C:\\Program Files (x86)\\Dropbox\\Client\\%" or Parent.CommandLine like r"%C:\\Program Files\\Dropbox\\Client\\%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the use of a Microsoft signed script 'REGISTER_APP.VBS' to register a VSS/VDS Provider as a COM+ application.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1c8774a0-44d4-4db0-91f8-e792359c70bd
RuleName = REGISTER_APP.VBS Proxy Execution
EventType = Process.Start
Tag = proc-start-register_app.vbs-proxy-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%\\register\_app.vbs%" and Process.CommandLine like r"%-register%"


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious execution of the Regasm/Regsvcs utilities from a potentially suspicious location
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = cc368ed0-2411-45dc-a222-510ace303cb2
RuleName = Potentially Suspicious Execution Of Regasm/Regsvcs From Uncommon Location
EventType = Process.Start
Tag = proc-start-potentially-suspicious-execution-of-regasm/regsvcs-from-uncommon-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.009"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\Regsvcs.exe" or Process.Path like r"%\\Regasm.exe" or Process.Name in ["RegSvcs.exe", "RegAsm.exe"]) and (Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\%" or Process.CommandLine like r"%\\PerfLogs\\%" or Process.CommandLine like r"%\\Users\\Public\\%" or Process.CommandLine like r"%\\Windows\\Temp\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the use of the Microsoft signed script "CL_mutexverifiers" to proxy the execution of additional PowerShell script commands
# Author: Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova, frack113
RuleId = 1e0e1a81-e79b-44bc-935b-ddb9c8006b3d
RuleName = Potential Script Proxy Execution Via CL_Mutexverifiers.ps1
EventType = Process.Start
Tag = proc-start-potential-script-proxy-execution-via-cl_mutexverifiers.ps1
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova, frack113"}
Query = (Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe") and Process.Path like r"%\\powershell.exe" and Process.CommandLine like r"% -nologo -windowstyle minimized -file %" and (Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%\\Windows\\Temp\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "certmgr" with the "add" flag in order to install a new certificate on the system.
# Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
# Author: oscd.community, @redcanary, Zach Stanford @svch0st
RuleId = ff992eac-6449-4c60-8c1d-91c9722a1d48
RuleName = New Root Certificate Installed Via CertMgr.EXE
EventType = Process.Start
Tag = proc-start-new-root-certificate-installed-via-certmgr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1553.004"], "author": "oscd.community, @redcanary, Zach Stanford @svch0st"}
Query = (Process.Path like r"%\\CertMgr.exe" or Process.Name == "CERTMGT.EXE") and Process.CommandLine like r"%/add%" and Process.CommandLine like r"%root%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with uncommon Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload.
# Author: Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)
RuleId = 4f2cd9b6-4a17-440f-bb2a-687abb65993a
RuleName = Uncommon AddinUtil.EXE CommandLine Execution
EventType = Process.Start
Tag = proc-start-uncommon-addinutil.exe-commandline-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)"}
Query = (Process.Path like r"%\\addinutil.exe" or Process.Name == "AddInUtil.exe") and (Process.CommandLine like r"%-AddInRoot:%" or Process.CommandLine like r"%-PipelineRoot:%") and not (Process.CommandLine like r"%-AddInRoot:\"C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA%" or Process.CommandLine like r"%-AddInRoot:C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA%" or Process.CommandLine like r"%-PipelineRoot:\"C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA%" or Process.CommandLine like r"%-PipelineRoot:C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc
# Author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
RuleId = 552b6b65-df37-4d3e-a258-f2fc4771ae54
RuleName = Potential Antivirus Software DLL Sideloading
EventType = Image.Load
Tag = potential-antivirus-software-dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)"}
Query = Image.Path like r"%\\log.dll" and not (Image.Path like r"C:\\Program Files\\Bitdefender Antivirus Free\\%" or Image.Path like r"C:\\Program Files (x86)\\Bitdefender Antivirus Free\\%" or Process.Path == "C:\\Program Files\\Dell\\SARemediation\\audit\\TelemetryUtility.exe" and (Image.Path in ["C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll", "C:\\Program Files\\Dell\\SARemediation\\audit\\log.dll"]) or Image.Path like r"C:\\Program Files\\Canon\\MyPrinter\\%") or Image.Path like r"%\\qrt.dll" and not (Image.Path like r"C:\\Program Files\\F-Secure\\Anti-Virus\\%" or Image.Path like r"C:\\Program Files (x86)\\F-Secure\\Anti-Virus\\%") or (Image.Path like r"%\\ashldres.dll" or Image.Path like r"%\\lockdown.dll" or Image.Path like r"%\\vsodscpl.dll") and not (Image.Path like r"C:\\Program Files\\McAfee\\%" or Image.Path like r"C:\\Program Files (x86)\\McAfee\\%") or Image.Path like r"%\\vftrace.dll" and not (Image.Path like r"C:\\Program Files\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\%" or Image.Path like r"C:\\Program Files (x86)\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\%") or Image.Path like r"%\\wsc.dll" and not (Image.Path like r"C:\\program Files\\AVAST Software\\Avast\\%" or Image.Path like r"C:\\program Files (x86)\\AVAST Software\\Avast\\%") or Image.Path like r"%\\tmdbglog.dll" and not (Image.Path like r"C:\\program Files\\Trend Micro\\Titanium\\%" or Image.Path like r"C:\\program Files (x86)\\Trend Micro\\Titanium\\%") or Image.Path like r"%\\DLPPREM32.dll" and not (Image.Path like r"C:\\program Files\\ESET%" or Image.Path like r"C:\\program Files (x86)\\ESET%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Identifies the creation of local users via the net.exe command.
# Author: Endgame, JHasenbusch (adapted to Sigma for oscd.community)
RuleId = cd219ff3-fa99-45d4-8380-a7d15116c6dc
RuleName = New User Created Via Net.EXE
EventType = Process.Start
Tag = proc-start-new-user-created-via-net.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1136.001"], "author": "Endgame, JHasenbusch (adapted to Sigma for oscd.community)"}
Query = (Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Name in ["net.exe", "net1.exe"]) and Process.CommandLine like r"%user%" and Process.CommandLine like r"%add%"


[ActivityMonitoringRule platform=Windows]
# Detects shell spawned from Java host process, which could be a sign of exploitation (e.g. log4j exploitation)
# Author: Andreas Hunkeler (@Karneades), Nasreddine Bencherchali
RuleId = dff1e1cc-d3fd-47c8-bfc2-aeb878a754c0
RuleName = Shell Process Spawned by Java.EXE
EventType = Process.Start
Tag = proc-start-shell-process-spawned-by-java.exe
RiskScore = 50
Annotation = {"author": "Andreas Hunkeler (@Karneades), Nasreddine Bencherchali"}
Query = Parent.Path like r"%\\java.exe" and (Process.Path like r"%\\bash.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and not (Parent.Path like r"%build%" and Process.CommandLine like r"%build%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential BlueMushroom DLL loading activity via regsvr32 from AppData Local
# Author: Florian Roth (Nextron Systems), Tim Shelton, Nasreddine Bencherchali (Nextron Systems)
RuleId = bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0
RuleName = Potential APT-C-12 BlueMushroom DLL Load Activity Via Regsvr32
EventType = Process.Start
Tag = proc-start-potential-apt-c-12-bluemushroom-dll-load-activity-via-regsvr32
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.010"], "author": "Florian Roth (Nextron Systems), Tim Shelton, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%regsvr32%" and Process.CommandLine like r"%\\AppData\\Local\\%" and Process.CommandLine like r"%.dll%" and Process.CommandLine like r"%,DllEntry%"


[ActivityMonitoringRule platform=Windows]
# Detects an uncommon child process of "odbcconf.exe" binary which normally shouldn't have any child processes.
# Author: Harjot Singh @cyb3rjy0t
RuleId = 8e3c7994-131e-4ba5-b6ea-804d49113a26
RuleName = Uncommon Child Process Spawned By Odbcconf.EXE
EventType = Process.Start
Tag = proc-start-uncommon-child-process-spawned-by-odbcconf.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.008"], "author": "Harjot Singh @cyb3rjy0t"}
Query = Parent.Path like r"%\\odbcconf.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects creation/modification of Assistive Technology applications and persistence with usage of 'at'
# Author: Mateusz Wydra, oscd.community
RuleId = 9577edbb-851f-4243-8c91-1d5b50c1a39b
RuleName = Atbroker Registry Change
EventType = Reg.Any
Tag = atbroker-registry-change
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1547"], "author": "Mateusz Wydra, oscd.community"}
Query = (Reg.TargetObject like r"%Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\ATs%" or Reg.TargetObject like r"%Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\Configuration%") and not (Process.Path == "C:\\Windows\\system32\\atbroker.exe" and Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\Configuration%" and Reg.Value.Data == "(Empty)" or Process.Path like r"C:\\Windows\\Installer\\MSI%" and Reg.TargetObject like r"%Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\ATs%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects manual execution of the "Microsoft Compatibility Appraiser" task via schtasks.
# In order to trigger persistence stored in the "\AppCompatFlags\TelemetryController" registry key.
# Author: Sreeman
RuleId = f548a603-c9f2-4c89-b511-b089f7e94549
RuleName = Potential Persistence Via Microsoft Compatibility Appraiser
EventType = Process.Start
Tag = proc-start-potential-persistence-via-microsoft-compatibility-appraiser
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Sreeman"}
Query = (Process.Path like r"%\\schtasks.exe" or Process.Name == "schtasks.exe") and Process.CommandLine like r"%run %" and Process.CommandLine like r"%\\Application Experience\\Microsoft Compatibility Appraiser%"


[ActivityMonitoringRule platform=Windows]
# Detects default CSExec service filename which indicates CSExec service installation and execution
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f0e2b768-5220-47dd-b891-d57b96fc0ec1
RuleName = CSExec Service File Creation
EventType = File.Create
Tag = csexec-service-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1569.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\csexecsvc.exe"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects setting of a new registry value related to BgInfo configuration, which can be abused to execute custom VBScript via "BgInfo.exe"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 992dd79f-dde8-4bb0-9085-6350ba97cfb3
RuleName = New BgInfo.EXE Custom VBScript Registry Configuration
EventType = Reg.Any
Tag = new-bginfo.exe-custom-vbscript-registry-configuration
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "SetValue" and Reg.TargetObject like r"%\\Software\\Winternals\\BGInfo\\UserFields\\%" and Reg.Value.Data like r"4%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data
GenericProperty3 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver
# Author: Christopher Peacock @securepeacock, SCYTHE @scythe_io, TactiKoolSec
RuleId = 15bd98ea-55f4-4d37-b09a-e7caa0fa2221
RuleName = Rundll32 InstallScreenSaver Execution
EventType = Process.Start
Tag = proc-start-rundll32-installscreensaver-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io, TactiKoolSec"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%InstallScreenSaver%"


[ActivityMonitoringRule platform=Windows]
# Detects a program executing from a web server root folder. Use this rule to hunt for potential interesting activity such as webshell or backdoors
# Author: Florian Roth (Nextron Systems)
RuleId = 35efb964-e6a5-47ad-bbcd-19661854018d
RuleName = Execution From Webserver Root Folder
EventType = Process.Start
Tag = proc-start-execution-from-webserver-root-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1505.003"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\wwwroot\\%" or Process.Path like r"%\\wmpub\\%" or Process.Path like r"%\\htdocs\\%") and not ((Process.Path like r"%bin\\%" or Process.Path like r"%\\Tools\\%" or Process.Path like r"%\\SMSComponent\\%") and Parent.Path like r"%\\services.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = e7a2fd40-3ae1-4a85-bf80-15cf624fb1b1
RuleName = System Scripts Autorun Keys Modification
EventType = Reg.Any
Tag = system-scripts-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts%" and (Reg.TargetObject like r"%\\Startup%" or Reg.TargetObject like r"%\\Shutdown%" or Reg.TargetObject like r"%\\Logon%" or Reg.TargetObject like r"%\\Logoff%") and not Reg.Value.Data == "(Empty)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects "svchost.exe" spawning "rundll32.exe" with command arguments like "C:\windows\system32\davclnt.dll,DavSetCookie".
# This could be an indicator of exfiltration or use of WebDav to launch code (hosted on a WebDav server).
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 2dbd9d3d-9e27-42a8-b8df-f13825c6c3d5
RuleName = WebDav Client Execution Via Rundll32.EXE
EventType = Process.Start
Tag = proc-start-webdav-client-execution-via-rundll32.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1048.003"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Parent.Path like r"%\\svchost.exe" and (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%C:\\windows\\system32\\davclnt.dll,DavSetCookie%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of recent element file that points to an .ISO, .IMG, .VHD or .VHDX file as often used in phishing attacks.
# This can be a false positive on server systems but on workstations users should rarely mount .iso or .img files.
# Author: Florian Roth (Nextron Systems)
RuleId = 4358e5a5-7542-4dcb-b9f3-87667371839b
RuleName = ISO or Image Mount Indicator in Recent Files
EventType = File.Create
Tag = iso-or-image-mount-indicator-in-recent-files
RiskScore = 50
Annotation = {"mitre_attack": ["T1566.001"], "author": "Florian Roth (Nextron Systems)"}
Query = (File.Path like r"%.iso.lnk" or File.Path like r"%.img.lnk" or File.Path like r"%.vhd.lnk" or File.Path like r"%.vhdx.lnk") and File.Path like r"%\\Microsoft\\Windows\\Recent\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Administrative shares are hidden network shares created by Microsoft Windows NT operating systems that grant system administrators remote access to every disk volume on a network-connected system
# Author: frack113
RuleId = c7dcacd0-cc59-4004-b0a4-1d6cdebe6f3e
RuleName = Disable Administrative Share Creation at Startup
EventType = Reg.Any
Tag = disable-administrative-share-creation-at-startup
RiskScore = 50
Annotation = {"mitre_attack": ["T1070.005"], "author": "frack113"}
Query = Reg.TargetObject like r"HKLM\\System\\CurrentControlSet\\Services\\LanmanServer\\Parameters\\%" and (Reg.TargetObject like r"%AutoShareWks" or Reg.TargetObject like r"%AutoShareServer") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects attempts to create a DLL file to a known desktop application dependencies folder such as Slack, Teams or OneDrive and by an unusual process. This may indicate an attempt to load a malicious module via DLL search order hijacking.
# Author: Tim Rauch (rule), Elastic (idea)
RuleId = dbbd9f66-2ed3-4ca2-98a4-6ea985dd1a1c
RuleName = Potential Initial Access via DLL Search Order Hijacking
EventType = File.Create
Tag = potential-initial-access-via-dll-search-order-hijacking
RiskScore = 50
Annotation = {"mitre_attack": ["T1566", "T1566.001", "T1574", "T1574.001"], "author": "Tim Rauch (rule), Elastic (idea)"}
Query = (Process.Path like r"%\\winword.exe" or Process.Path like r"%\\excel.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\MSACCESS.EXE" or Process.Path like r"%\\MSPUB.EXE" or Process.Path like r"%\\fltldr.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\curl.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and File.Path like r"%.dll" and File.Path like r"%\\Users\\%" and File.Path like r"%\\AppData\\%" and (File.Path like r"%\\Microsoft\\OneDrive\\%" or File.Path like r"%\\Microsoft OneDrive\\%" or File.Path like r"%\\Microsoft\\Teams\\%" or File.Path like r"%\\Local\\slack\\app-%" or File.Path like r"%\\Local\\Programs\\Microsoft VS Code\\%") and not (Process.Path like r"%\\cmd.exe" and File.Path like r"%\\Users\\%" and File.Path like r"%\\AppData\\%" and File.Path like r"%\\Microsoft\\OneDrive\\%" and File.Path like r"%\\api-ms-win-core-%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of files with an "LNK" as a second extension. This is sometimes used by malware as a method to abuse the fact that Windows hides the "LNK" extension by default.
# Author: Nasreddine Bencherchali (Nextron Systems), frack113
RuleId = 3215aa19-f060-4332-86d5-5602511f3ca8
RuleName = Suspicious LNK Double Extension File Created
EventType = File.Create
Tag = suspicious-lnk-double-extension-file-created
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.007"], "author": "Nasreddine Bencherchali (Nextron Systems), frack113"}
Query = File.Path like r"%.lnk" and (File.Path like r"%.doc.%" or File.Path like r"%.docx.%" or File.Path like r"%.jpg.%" or File.Path like r"%.pdf.%" or File.Path like r"%.ppt.%" or File.Path like r"%.pptx.%" or File.Path like r"%.xls.%" or File.Path like r"%.xlsx.%") and not File.Path like r"%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\%" and not ((Process.Path like r"%\\excel.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and File.Path like r"%\\AppData\\Roaming\\Microsoft\\Office\\Recent\\%" or Process.Path like r"%\\excel.exe" and File.Path like r"%\\AppData\\Roaming\\Microsoft\\Excel%" or Process.Path like r"%\\powerpnt.exe" and File.Path like r"%\\AppData\\Roaming\\Microsoft\\PowerPoint%" or Process.Path like r"%\\winword.exe" and File.Path like r"%\\AppData\\Roaming\\Microsoft\\Word%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of the "Zone.Identifier" ADS by an uncommon process. Attackers can leverage this in order to bypass security restrictions that make use of the ADS such as Microsoft Office apps.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3109530e-ab47-4cc6-a953-cac5ebcc93ae
RuleName = ADS Zone.Identifier Deleted By Uncommon Application
EventType = File.Delete
Tag = ads-zone.identifier-deleted-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1070.004"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%:Zone.Identifier" and not (Process.Path like r"%:\\Program Files\\PowerShell\\7-preview\\pwsh.exe" or Process.Path like r"%:\\Program Files\\PowerShell\\7\\pwsh.exe" or Process.Path like r"%:\\Windows\\explorer.exe" or Process.Path like r"%:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\explorer.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of the built-in script located in "C:\Windows\System32\gatherNetworkInfo.vbs". Which can be used to gather information about the target machine
# Author: blueteamer8699
RuleId = 575dce0c-8139-4e30-9295-1ee75969f7fe
RuleName = Potential Reconnaissance Activity Via GatherNetworkInfo.VBS
EventType = Process.Start
Tag = proc-start-potential-reconnaissance-activity-via-gathernetworkinfo.vbs
RiskScore = 50
Annotation = {"mitre_attack": ["T1615", "T1059.005"], "author": "blueteamer8699"}
Query = (Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Name in ["cscript.exe", "wscript.exe"]) and Process.CommandLine like r"%gatherNetworkInfo.vbs%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "dotnet-dump" with the "collect" flag. The execution could indicate potential process dumping of critical processes such as LSASS
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 53d8d3e1-ca33-4012-adf3-e05a4d652e34
RuleName = Process Memory Dump Via Dotnet-Dump
EventType = Process.Start
Tag = proc-start-process-memory-dump-via-dotnet-dump
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\dotnet-dump.exe" or Process.Name == "dotnet-dump.dll") and Process.CommandLine like r"%collect%"


[ActivityMonitoringRule platform=Windows]
# Detects creation of new ".dll" files inside the plugins directory of a notepad++ installation by a process other than "gup.exe". Which could indicates possible persistence
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 54127bd4-f541-4ac3-afdb-ea073f63f692
RuleName = Potential Persistence Via Notepad++ Plugins
EventType = File.Create
Tag = potential-persistence-via-notepad++-plugins
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\Notepad++\\plugins\\%" and File.Path like r"%.dll" and not (Process.Path like r"%\\Notepad++\\updater\\gup.exe" or Process.Path like r"C:\\Users\\%" and Process.Path like r"%\\AppData\\Local\\Temp\\%" and (Process.Path like r"%\\target.exe" or Process.Path like r"%Installer.x64.exe"))
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
# Author: Konstantin Grishchenko, oscd.community
RuleId = 40b95d31-1afc-469e-8d34-9a3a667d058e
RuleName = Suspicious Csi.exe Usage
EventType = Process.Start
Tag = proc-start-suspicious-csi.exe-usage
RiskScore = 50
Annotation = {"mitre_attack": ["T1072", "T1218"], "author": "Konstantin Grishchenko, oscd.community"}
Query = (Process.Path like r"%\\csi.exe" or Process.Path like r"%\\rcsi.exe" or Process.Name in ["csi.exe", "rcsi.exe"]) and Process.Company == "Microsoft Corporation"
GenericProperty1 = Process.Company


[ActivityMonitoringRule platform=Windows]
# Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format
# Author: frack113
RuleId = 52788a70-f1da-40dd-8fbd-73b5865d6568
RuleName = JSC Convert Javascript To Executable
EventType = Process.Start
Tag = proc-start-jsc-convert-javascript-to-executable
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "frack113"}
Query = Process.Path like r"%\\jsc.exe" and Process.CommandLine like r"%.js%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation or modification of the Windows Terminal Profile settings file "settings.json" by an uncommon process.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 9b64de98-9db3-4033-bd7a-f51430105f00
RuleName = Windows Terminal Profile Settings Modification By Uncommon Process
EventType = File.Create
Tag = windows-terminal-profile-settings-modification-by-uncommon-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.015"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wscript.exe") and File.Path like r"%\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal\_8wekyb3d8bbwe\\LocalState\\settings.json"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious command line reg.exe tool adding key to RUN key in Registry
# Author: Florian Roth (Nextron Systems)
RuleId = de587dce-915e-4218-aac4-835ca6af6f70
RuleName = Potential Persistence Attempt Via Run Keys Using Reg.EXE
EventType = Process.Start
Tag = proc-start-potential-persistence-attempt-via-run-keys-using-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"%reg%" and Process.CommandLine like r"% ADD %" and Process.CommandLine like r"%Software\\Microsoft\\Windows\\CurrentVersion\\Run%"


[ActivityMonitoringRule platform=Windows]
# Detects creation of files which are the results of executing the built-in reconnaissance script "C:\Windows\System32\gatherNetworkInfo.vbs".
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f92a6f1e-a512-4a15-9735-da09e78d7273
RuleName = GatherNetworkInfo.VBS Reconnaissance Script Output
EventType = File.Create
Tag = gathernetworkinfo.vbs-reconnaissance-script-output
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"C:\\Windows\\System32\\config%" and (File.Path like r"%\\Hotfixinfo.txt" or File.Path like r"%\\netiostate.txt" or File.Path like r"%\\sysportslog.txt" or File.Path like r"%\\VmSwitchLog.evtx")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects ScreenConnect program starts that establish a remote access to a system.
# Author: Florian Roth (Nextron Systems)
RuleId = 75bfe6e6-cd8e-429e-91d3-03921e1d7962
RuleName = Remote Access Tool - ScreenConnect Installation Execution
EventType = Process.Start
Tag = proc-start-remote-access-tool-screenconnect-installation-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1133"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"%e=Access&%" and Process.CommandLine like r"%y=Guest&%" and Process.CommandLine like r"%&p=%" and Process.CommandLine like r"%&c=%" and Process.CommandLine like r"%&k=%"


[ActivityMonitoringRule platform=Windows]
# Detect usage of the "defaultpack.exe" binary as a proxy to launch other programs
# Author: frack113
RuleId = b2309017-4235-44fe-b5af-b15363011957
RuleName = Lolbin Defaultpack.exe Use As Proxy
EventType = Process.Start
Tag = proc-start-lolbin-defaultpack.exe-use-as-proxy
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = Parent.Path like r"%\\defaultpack.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects loading of "credui.dll" and related DLLs by an uncommon process. Attackers might leverage this DLL for potential use of "CredUIPromptForCredentials" or "CredUnPackAuthenticationBufferW".
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 9ae01559-cf7e-4f8e-8e14-4c290a1b4784
RuleName = CredUI.DLL Loaded By Uncommon Process
EventType = Image.Load
Tag = credui.dll-loaded-by-uncommon-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1056.002"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = (Image.Path like r"%\\credui.dll" or Image.Path like r"%\\wincredui.dll" or Process.Name in ["credui.dll", "wincredui.dll"]) and not (Process.Path like r"C:\\Program Files (x86)\\%" or Process.Path like r"C:\\Program Files\\%" or Process.Path like r"C:\\Windows\\System32\\%" or Process.Path like r"C:\\Windows\\SysWOW64\\%" or Process.Path in ["C:\\Windows\\explorer.exe", "C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe", "C:\\Windows\\regedit.exe"]) and not (Process.Path like r"%\\opera\_autoupdate.exe" or Process.Path like r"%\\procexp64.exe" or Process.Path like r"%\\procexp.exe" or Process.Path like r"C:\\Users\\%" and Process.Path like r"%\\AppData\\Local\\Microsoft\\Teams\\%" and Process.Path like r"%\\Teams.exe" or Process.Path like r"C:\\Users\\%" and Process.Path like r"%\\AppData\\Local\\Microsoft\\OneDrive\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects when the 'AllowMultipleTSSessions' value is enabled.
# Which allows for multiple Remote Desktop connection sessions to be opened at once.
# This is often used by attacker as a way to connect to an RDP session without disconnecting the other users
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f7997770-92c3-4ec9-b112-774c4ef96f96
RuleName = Winlogon AllowMultipleTSSessions Enable
EventType = Reg.Any
Tag = winlogon-allowmultipletssessions-enable
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AllowMultipleTSSessions" and Reg.Value.Data like r"%DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the modification of an existing service in order to execute an arbitrary payload when the service is started or killed as a potential method for persistence.
# Author: Sreeman
RuleId = 38879043-7e1e-47a9-8d46-6bec88e201df
RuleName = Potential Persistence Attempt Via Existing Service Tampering
EventType = Process.Start
Tag = proc-start-potential-persistence-attempt-via-existing-service-tampering
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003", "T1574.011"], "author": "Sreeman"}
Query = Process.CommandLine like r"%sc %" and Process.CommandLine like r"%config %" and Process.CommandLine like r"%binpath=%" or Process.CommandLine like r"%sc %" and Process.CommandLine like r"%failure%" and Process.CommandLine like r"%command=%" or (Process.CommandLine like r"%reg %" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%FailureCommand%" or Process.CommandLine like r"%reg %" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%ImagePath%") and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin$%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh$%" or Process.CommandLine like r"%.reg$%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%")


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker modifies values of the Disk Cleanup Handler in the registry to achieve persistence via autorun.
# The disk cleanup manager is part of the operating system.
# It displays the dialog box […] The user has the option of enabling or disabling individual handlers by selecting or clearing their check box in the disk cleanup manager's UI.
# Although Windows comes with a number of disk cleanup handlers, they aren't designed to handle files produced by other applications.
# Instead, the disk cleanup manager is designed to be flexible and extensible by enabling any developer to implement and register their own disk cleanup handler.
# Any developer can extend the available disk cleanup services by implementing and registering a disk cleanup handler.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d4e2745c-f0c6-4bde-a3ab-b553b3f693cc
RuleName = Persistence Via Disk Cleanup Handler - Autorun
EventType = Reg.Any
Tag = persistence-via-disk-cleanup-handler-autorun
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VolumeCaches\\%" and (Reg.TargetObject like r"%\\Autorun%" and Reg.Value.Data == "DWORD (0x00000001)" or (Reg.TargetObject like r"%\\CleanupString%" or Reg.TargetObject like r"%\\PreCleanupString%") and (Reg.Value.Data like r"%cmd%" or Reg.Value.Data like r"%powershell%" or Reg.Value.Data like r"%rundll32%" or Reg.Value.Data like r"%mshta%" or Reg.Value.Data like r"%cscript%" or Reg.Value.Data like r"%wscript%" or Reg.Value.Data like r"%wsl%" or Reg.Value.Data like r"%\\Users\\Public\\%" or Reg.Value.Data like r"%\\Windows\\TEMP\\%" or Reg.Value.Data like r"%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\%"))
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects suspicious reconnaissance command line activity on Windows systems using the PowerShell Get-LocalGroupMember Cmdlet
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c8a180d6-47a3-4345-a609-53f9c3d834fc
RuleName = Suspicious Reconnaissance Activity Using Get-LocalGroupMember Cmdlet
EventType = Process.Start
Tag = proc-start-suspicious-reconnaissance-activity-using-get-localgroupmember-cmdlet
RiskScore = 50
Annotation = {"mitre_attack": ["T1087.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Get-LocalGroupMember %" and (Process.CommandLine like r"%domain admins%" or Process.CommandLine like r"% administrator%" or Process.CommandLine like r"% administrateur%" or Process.CommandLine like r"%enterprise admins%" or Process.CommandLine like r"%Exchange Trusted Subsystem%" or Process.CommandLine like r"%Remote Desktop Users%" or Process.CommandLine like r"%Utilisateurs du Bureau à distance%" or Process.CommandLine like r"%Usuarios de escritorio remoto%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "Wlrmdr.exe" with the "-u" command line flag which allows anything passed to it to be an argument of the ShellExecute API, which would allow an attacker to execute arbitrary binaries.
# This detection also focuses on any uncommon child processes spawned from "Wlrmdr.exe" as a supplement for those that posses "ParentImage" telemetry.
# Author: frack113, manasmbellani
RuleId = 9cfc00b6-bfb7-49ce-9781-ef78503154bb
RuleName = Wlrmdr.EXE Uncommon Argument Or Child Process
EventType = Process.Start
Tag = proc-start-wlrmdr.exe-uncommon-argument-or-child-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113, manasmbellani"}
Query = Parent.Path like r"%\\wlrmdr.exe" or (Process.Path like r"%\\wlrmdr.exe" or Process.Name == "WLRMNDR.EXE") and (Process.CommandLine like r"%-s %" or Process.CommandLine like r"%/s %") and (Process.CommandLine like r"%-f %" or Process.CommandLine like r"%/f %") and (Process.CommandLine like r"%-t %" or Process.CommandLine like r"%/t %") and (Process.CommandLine like r"%-m %" or Process.CommandLine like r"%/m %") and (Process.CommandLine like r"%-a %" or Process.CommandLine like r"%/a %") and (Process.CommandLine like r"%-u %" or Process.CommandLine like r"%/u %") and not (Parent.Path == "C:\\Windows\\System32\\winlogon.exe" or Parent.Path in ["", "-"] or isnull(Parent.Path))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of LiveKD based on PE metadata or image name
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a85f7765-698a-4088-afa0-ecfbf8d01fa4
RuleName = Potential Memory Dumping Activity Via LiveKD
EventType = Process.Start
Tag = proc-start-potential-memory-dumping-activity-via-livekd
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\livekd.exe" or Process.Path like r"%\\livekd64.exe" or Process.Name == "livekd.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of IIS WebServer access logs which may indicate an attempt to destroy forensic evidence
# Author: Tim Rauch (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 3eb8c339-a765-48cc-a150-4364c04652bf
RuleName = IIS WebServer Access Logs Deleted
EventType = File.Delete
Tag = iis-webserver-access-logs-deleted
RiskScore = 50
Annotation = {"mitre_attack": ["T1070"], "author": "Tim Rauch (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\inetpub\\logs\\LogFiles\\%" and File.Path like r"%.log"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
# These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
# Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
# Author: frack113
RuleId = 5d756aee-ad3e-4306-ad95-cb1abec48de2
RuleName = GoToAssist Temporary Installation Artefact
EventType = File.Create
Tag = gotoassist-temporary-installation-artefact
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "frack113"}
Query = File.Path like r"%\\AppData\\Local\\Temp\\LogMeInInc\\GoToAssist Remote Support Expert\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of netsh with the "advfirewall" and the "set" option in order to set new values for properties of a existing rule
# Author: X__Junior (Nextron Systems)
RuleId = a70dcb37-3bee-453a-99df-d0c683151be6
RuleName = Firewall Rule Update Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-firewall-rule-update-via-netsh.exe
RiskScore = 50
Annotation = {"author": "X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"% firewall %" and Process.CommandLine like r"% set %"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious powershell download cradle using nslookup. This cradle uses nslookup to extract payloads from DNS records
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1b3b01c7-84e9-4072-86e5-fc285a41ff23
RuleName = Nslookup PowerShell Download Cradle - ProcessCreation
EventType = Process.Start
Tag = proc-start-nslookup-powershell-download-cradle-processcreation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\nslookup.exe%" or Process.Name == "\\nslookup.exe") and (Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"% -q=txt %" or Process.CommandLine like r"% -querytype=txt %")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.
# The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time
# Author: frack113
RuleId = dfb5b4e8-91d0-4291-b40a-e3b0d3942c45
RuleName = Potential Persistence Via Shim Database Modification
EventType = Reg.Any
Tag = potential-persistence-via-shim-database-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.011"], "author": "frack113"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\%") and not Reg.Value.Data == ""
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects when the "index" value of a scheduled task is removed or deleted from the registry. Which effectively hides it from any tooling such as "schtasks /query"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 526cc8bc-1cdc-48ad-8b26-f19bff969cec
RuleName = Removal Of Index Value to Hide Schedule Task - Registry
EventType = Reg.Any
Tag = removal-of-index-value-to-hide-schedule-task-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.EventType == "DeleteKey" and Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\%" and Reg.TargetObject like r"%Index%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage
# Author: frack113
RuleId = 974515da-6cc5-4c95-ae65-f97f9150ec7f
RuleName = Disable Microsoft Defender Firewall via Registry
EventType = Reg.Any
Tag = disable-microsoft-defender-firewall-via-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "frack113"}
Query = Reg.TargetObject like r"HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\%" and Reg.TargetObject like r"%\\EnableFirewall" and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the execution of netsh commands that configure a new port forwarding (PortProxy) rule
# Author: Florian Roth (Nextron Systems), omkar72, oscd.community, Swachchhanda Shrawan Poudel
RuleId = 322ed9ec-fcab-4f67-9a34-e7c6aef43614
RuleName = New Port Forwarding Rule Added Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-new-port-forwarding-rule-added-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1090"], "author": "Florian Roth (Nextron Systems), omkar72, oscd.community, Swachchhanda Shrawan Poudel"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and (Process.CommandLine like r"%interface%" and Process.CommandLine like r"%portproxy%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%v4tov4%" or Process.CommandLine like r"%i %" and Process.CommandLine like r"%p %" and Process.CommandLine like r"%a %" and Process.CommandLine like r"%v %" or Process.CommandLine like r"%connectp%" and Process.CommandLine like r"%listena%" and Process.CommandLine like r"%c=%")


[ActivityMonitoringRule platform=Windows]
# Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
# Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
# Author: frack113
RuleId = 6f4191bb-912b-48a8-9ce7-682769541e6d
RuleName = Suspicious Msiexec Execute Arbitrary DLL
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-execute-arbitrary-dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.007"], "author": "frack113"}
Query = Process.Path like r"%\\msiexec.exe" and (Process.CommandLine like r"% -y%" or Process.CommandLine like r"% /y%") and not (Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y C:\\Windows\\CCM\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder
# Author: elhoim
RuleId = 5f87308a-0a5b-4623-ae15-d8fa1809bc60
RuleName = Suspicious Files in Default GPO Folder
EventType = File.Create
Tag = suspicious-files-in-default-gpo-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.005"], "author": "elhoim"}
Query = File.Path like r"%\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\%" and (File.Path like r"%.dll" or File.Path like r"%.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.
# If these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process
# Author: frack113
RuleId = 1a3d42dd-3763-46b9-8025-b5f17f340dfb
RuleName = Suspicious Unattend.xml File Access
EventType = File.Create
Tag = suspicious-unattend.xml-file-access
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.001"], "author": "frack113"}
Query = File.Path like r"%\\unattend.xml"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects changes to the Internet Explorer "DisableFirstRunCustomize" value, which prevents Internet Explorer from running the first run wizard the first time a user starts the browser after installing Internet Explorer or Windows.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ab567429-1dfb-4674-b6d2-979fd2f9d125
RuleName = Internet Explorer DisableFirstRunCustomize Enabled
EventType = Reg.Any
Tag = internet-explorer-disablefirstruncustomize-enabled
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\Microsoft\\Internet Explorer\\Main\\DisableFirstRunCustomize" and (Reg.Value.Data in ["DWORD (0x00000001)", "DWORD (0x00000002)"]) and not (Process.Path in ["C:\\Windows\\explorer.exe", "C:\\Windows\\System32\\ie4uinit.exe"])
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects file renames where the target filename uses an uncommon double extension. Could indicate potential ransomware activity renaming files and adding a custom extension to the encrypted files, such as ".jpg.crypted", ".docx.locky", etc.
# Author: frack113
RuleId = e3f673b3-65d1-4d80-9146-466f8b63fa99
RuleName = Suspicious Appended Extension
EventType = File.Rename
Tag = suspicious-appended-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1486"], "author": "frack113"}
Query = (File.PreviousPath like r"%.doc" or File.PreviousPath like r"%.docx" or File.PreviousPath like r"%.jpeg" or File.PreviousPath like r"%.jpg" or File.PreviousPath like r"%.lnk" or File.PreviousPath like r"%.pdf" or File.PreviousPath like r"%.png" or File.PreviousPath like r"%.pst" or File.PreviousPath like r"%.rtf" or File.PreviousPath like r"%.xls" or File.PreviousPath like r"%.xlsx") and (File.Path like r"%.doc.%" or File.Path like r"%.docx.%" or File.Path like r"%.jpeg.%" or File.Path like r"%.jpg.%" or File.Path like r"%.lnk.%" or File.Path like r"%.pdf.%" or File.Path like r"%.png.%" or File.Path like r"%.pst.%" or File.Path like r"%.rtf.%" or File.Path like r"%.xls.%" or File.Path like r"%.xlsx.%") and not (File.Path like r"%.backup" or File.Path like r"%.bak" or File.Path like r"%.old" or File.Path like r"%.orig" or File.Path like r"%.temp" or File.Path like r"%.tmp") and not (File.Path like r"%:\\ProgramData\\Anaconda3\\%" and File.Path like r"%.c~")
GenericProperty1 = File.Path
GenericProperty2 = File.PreviousPath


[ActivityMonitoringRule platform=Windows]
# Detects possible password spraying attempts using Dsacls
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = bac9fb54-2da7-44e9-988f-11e9a5edbc0c
RuleName = Potential Password Spraying Attempt Using Dsacls.EXE
EventType = Process.Start
Tag = proc-start-potential-password-spraying-attempt-using-dsacls.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\dsacls.exe" or Process.Name == "DSACLS.EXE") and Process.CommandLine like r"%/user:%" and Process.CommandLine like r"%/passwd:%"


[ActivityMonitoringRule platform=Windows]
# Detect use of X509Enrollment
# Author: frack113
RuleId = 114de787-4eb2-48cc-abdb-c0b449f93ea4
RuleName = Suspicious X509Enrollment - Process Creation
EventType = Process.Start
Tag = proc-start-suspicious-x509enrollment-process-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1553.004"], "author": "frack113"}
Query = Process.CommandLine like r"%X509Enrollment.CBinaryConverter%" or Process.CommandLine like r"%884e2002-217d-11da-b2a4-000e7bbb2b09%"


[ActivityMonitoringRule platform=Windows]
# Detects an uncommon svchost parent process
# Author: Florian Roth (Nextron Systems)
RuleId = 01d2e2a1-5f09-44f7-9fc1-24faa7479b6d
RuleName = Uncommon Svchost Parent Process
EventType = Process.Start
Tag = proc-start-uncommon-svchost-parent-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.005"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\svchost.exe" and not (Parent.Path like r"%\\Mrt.exe" or Parent.Path like r"%\\MsMpEng.exe" or Parent.Path like r"%\\ngen.exe" or Parent.Path like r"%\\rpcnet.exe" or Parent.Path like r"%\\services.exe" or Parent.Path like r"%\\TiWorker.exe" or isnull(Parent.Path) or Parent.Path in ["-", ""])
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of screensaver files (.scr) outside of system folders. Attackers may execute an application as an ".SCR" file using "rundll32.exe desk.cpl,InstallScreenSaver" for example.
# Author: Christopher Peacock @securepeacock, SCYTHE @scythe_io
RuleId = c048f047-7e2a-4888-b302-55f509d4a91d
RuleName = SCR File Write Event
EventType = File.Create
Tag = scr-file-write-event
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io"}
Query = File.Path like r"%.scr" and not (File.Path like r"%:\\$WINDOWS.~BT\\NewOS\\%" or File.Path like r"%:\\Windows\\System32\\%" or File.Path like r"%:\\Windows\\SysWOW64\\%" or File.Path like r"%:\\Windows\\WinSxS\\%" or File.Path like r"%:\\WUDownloadCache\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of Dsacls to grant over permissive permissions
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 01c42d3c-242d-4655-85b2-34f1739632f7
RuleName = Potentially Over Permissive Permissions Granted Using Dsacls.EXE
EventType = Process.Start
Tag = proc-start-potentially-over-permissive-permissions-granted-using-dsacls.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\dsacls.exe" or Process.Name == "DSACLS.EXE") and Process.CommandLine like r"% /G %" and (Process.CommandLine like r"%GR%" or Process.CommandLine like r"%GE%" or Process.CommandLine like r"%GW%" or Process.CommandLine like r"%GA%" or Process.CommandLine like r"%WP%" or Process.CommandLine like r"%WD%")


[ActivityMonitoringRule platform=Windows]
# lolbas Cmdl32 is use to download a payload to evade antivirus
# Author: frack113
RuleId = f37aba28-a9e6-4045-882c-d5004043b337
RuleName = Suspicious Cmdl32 Execution
EventType = Process.Start
Tag = proc-start-suspicious-cmdl32-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "frack113"}
Query = (Process.Path like r"%\\cmdl32.exe" or Process.Name == "CMDL32.EXE") and Process.CommandLine like r"%/vpn %" and Process.CommandLine like r"%/lan %"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious command line flags that let the user set a target user and command as e.g. seen in PsExec-like tools
# Author: Florian Roth (Nextron Systems)
RuleId = 50d66fb0-03f8-4da0-8add-84e77d12a020
RuleName = Suspicious RunAs-Like Flag Combination
EventType = Process.Start
Tag = proc-start-suspicious-runas-like-flag-combination
RiskScore = 50
Annotation = {"author": "Florian Roth (Nextron Systems)"}
Query = (Process.CommandLine like r"% -u system %" or Process.CommandLine like r"% --user system %" or Process.CommandLine like r"% -u NT%" or Process.CommandLine like r"% -u \"NT%" or Process.CommandLine like r"% -u 'NT%" or Process.CommandLine like r"% --system %" or Process.CommandLine like r"% -u administrator %") and (Process.CommandLine like r"% -c cmd%" or Process.CommandLine like r"% -c \"cmd%" or Process.CommandLine like r"% -c powershell%" or Process.CommandLine like r"% -c \"powershell%" or Process.CommandLine like r"% --command cmd%" or Process.CommandLine like r"% --command powershell%" or Process.CommandLine like r"% -c whoami%" or Process.CommandLine like r"% -c wscript%" or Process.CommandLine like r"% -c cscript%")


[ActivityMonitoringRule platform=Windows]
# Detects calls to PowerShell with Invoke-WebRequest cmdlet using direct IP access
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1edff897-9146-48d2-9066-52e8d8f80a2f
RuleName = Suspicious Invoke-WebRequest Execution With DirectIP
EventType = Process.Start
Tag = proc-start-suspicious-invoke-webrequest-execution-with-directip
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%curl %" or Process.CommandLine like r"%Invoke-WebRequest%" or Process.CommandLine like r"%iwr %" or Process.CommandLine like r"%wget %") and (Process.CommandLine like r"%://1%" or Process.CommandLine like r"%://2%" or Process.CommandLine like r"%://3%" or Process.CommandLine like r"%://4%" or Process.CommandLine like r"%://5%" or Process.CommandLine like r"%://6%" or Process.CommandLine like r"%://7%" or Process.CommandLine like r"%://8%" or Process.CommandLine like r"%://9%")


[ActivityMonitoringRule platform=Windows]
# Detects the invocation of PowerShell commands with references to classes from the "System.Security.Cryptography" namespace.
# The PowerShell namespace "System.Security.Cryptography" provides classes for on-the-fly encryption and decryption.
# These can be used for example in decrypting malicious payload for defense evasion.
# Author: Andreas Braathen (mnemonic.io)
RuleId = ad856965-f44d-42a8-945e-bbf7bd03d05a
RuleName = Invocation Of Crypto-Classes From The "Cryptography" PowerShell Namespace
EventType = Process.Start
Tag = proc-start-invocation-of-crypto-classes-from-the-"cryptography"-powershell-namespace
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1027.010"], "author": "Andreas Braathen (mnemonic.io)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%System.Security.Cryptography.%" and (Process.CommandLine like r"%.AesCryptoServiceProvider%" or Process.CommandLine like r"%.DESCryptoServiceProvider%" or Process.CommandLine like r"%.DSACryptoServiceProvider%" or Process.CommandLine like r"%.RC2CryptoServiceProvider%" or Process.CommandLine like r"%.Rijndael%" or Process.CommandLine like r"%.RSACryptoServiceProvider%" or Process.CommandLine like r"%.TripleDESCryptoServiceProvider%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of "git" in order to clone a remote repository that contain suspicious keywords which might be suspicious
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = aef9d1f1-7396-4e92-a927-4567c7a495c1
RuleName = Suspicious Git Clone
EventType = Process.Start
Tag = proc-start-suspicious-git-clone
RiskScore = 50
Annotation = {"mitre_attack": ["T1593.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\git.exe" or Process.Path like r"%\\git-remote-https.exe" or Process.Name == "git.exe") and (Process.CommandLine like r"% clone %" or Process.CommandLine like r"%git-remote-https %") and (Process.CommandLine like r"%exploit%" or Process.CommandLine like r"%Vulns%" or Process.CommandLine like r"%vulnerability%" or Process.CommandLine like r"%RemoteCodeExecution%" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%CVE-%" or Process.CommandLine like r"%poc-%" or Process.CommandLine like r"%ProofOfConcept%" or Process.CommandLine like r"%proxyshell%" or Process.CommandLine like r"%log4shell%" or Process.CommandLine like r"%eternalblue%" or Process.CommandLine like r"%eternal-blue%" or Process.CommandLine like r"%MS17-%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
# Author: Thomas Patzke
RuleId = 2afafd61-6aae-4df4-baed-139fa1f4c345
RuleName = Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)
EventType = Process.Start
Tag = proc-start-invocation-of-active-directory-diagnostic-tool-(ntdsutil.exe)
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.003"], "author": "Thomas Patzke"}
Query = Process.Path like r"%\\ntdsutil.exe"


[ActivityMonitoringRule platform=Windows]
# Detects when an admin share is mounted using net.exe
# Author: oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, wagga
RuleId = 3abd6094-7027-475f-9630-8ab9be7b9725
RuleName = Windows Admin Share Mount Via Net.EXE
EventType = Process.Start
Tag = proc-start-windows-admin-share-mount-via-net.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1021.002"], "author": "oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, wagga"}
Query = (Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Name in ["net.exe", "net1.exe"]) and Process.CommandLine like r"% use %" and Process.CommandLine like r"% \\\\%\\%$%"


[ActivityMonitoringRule platform=Windows]
# Detect changes to the "PendingFileRenameOperations" registry key from uncommon or suspicious images lcoations to stage currently used files for rename after reboot.
# Author: frack113
RuleId = 4eec988f-7bf0-49f1-8675-1e6a510b3a2a
RuleName = Potential PendingFileRenameOperations Tamper
EventType = Reg.Any
Tag = potential-pendingfilerenameoperations-tamper
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.003"], "author": "frack113"}
Query = Reg.EventType == "SetValue" and Reg.TargetObject like r"%\\CurrentControlSet\\Control\\Session Manager\\PendingFileRenameOperations%" and (Process.Path like r"%\\AppData\\Local\\Temp\\%" or Process.Path like r"%\\Users\\Public\\%" or Process.Path like r"%\\reg.exe" or Process.Path like r"%\\regedit.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious changes to the SentinelOne context menu scan command by a process other than SentinelOne.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 6c304b02-06e6-402d-8be4-d5833cdf8198
RuleName = Potential SentinelOne Shell Context Menu Scan Command Tampering
EventType = Reg.Any
Tag = potential-sentinelone-shell-context-menu-scan-command-tampering
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\shell\\SentinelOneScan\\command\\%" and not ((Reg.Value.Data like r"C:\\Program Files\\SentinelOne\\Sentinel Agent%" or Reg.Value.Data like r"C:\\Program Files (x86)\\SentinelOne\\Sentinel Agent%") and Reg.Value.Data like r"%\\SentinelScanFromContextMenu.exe%" or Process.Path like r"%C:\\Program Files\\SentinelOne\\" or Process.Path like r"%C:\\Program Files (x86)\\SentinelOne\\")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of namp/zenmap. Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation
# Author: frack113
RuleId = f6ecd1cf-19b8-4488-97f6-00f0924991a3
RuleName = PUA - Nmap/Zenmap Execution
EventType = Process.Start
Tag = proc-start-pua-nmap/zenmap-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1046"], "author": "frack113"}
Query = Process.Path like r"%\\nmap.exe" or Process.Path like r"%\\zennmap.exe" or Process.Name in ["nmap.exe", "zennmap.exe"]


[ActivityMonitoringRule platform=Windows]
# Detects creation of a new service (kernel driver) with the type "kernel"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 431a1fdb-4799-4f3b-91c3-a683b003fc49
RuleName = New Kernel Driver Via SC.EXE
EventType = Process.Start
Tag = proc-start-new-kernel-driver-via-sc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\sc.exe" and (Process.CommandLine like r"%create%" or Process.CommandLine like r"%config%") and Process.CommandLine like r"%binPath%" and Process.CommandLine like r"%type%" and Process.CommandLine like r"%kernel%"


[ActivityMonitoringRule platform=Windows]
# Detects addition of users to the local administrator group via "Net" or "Add-LocalGroupMember".
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = ad720b90-25ad-43ff-9b5e-5c841facc8e5
RuleName = User Added to Local Administrators Group
EventType = Process.Start
Tag = proc-start-user-added-to-local-administrators-group
RiskScore = 50
Annotation = {"mitre_attack": ["T1098"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%localgroup %" and Process.CommandLine like r"% /add%" or Process.CommandLine like r"%Add-LocalGroupMember %" and Process.CommandLine like r"% -Group %") and (Process.CommandLine like r"% administrators %" or Process.CommandLine like r"% administrateur%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of "rundll32" with potential obfuscated ordinal calls
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 43fa5350-db63-4b8f-9a01-789a427074e1
RuleName = Potential Obfuscated Ordinal Call Via Rundll32
EventType = Process.Start
Tag = proc-start-potential-obfuscated-ordinal-call-via-rundll32
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE" or Process.CommandLine like r"%rundll32%") and (Process.CommandLine like r"%#+%" or Process.CommandLine like r"%#-%")


[ActivityMonitoringRule platform=Windows]
# Detects applications or users re-enabling old TLS versions by setting the "Enabled" value to "1" for the "Protocols" registry key.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 439957a7-ad86-4a8f-9705-a28131c6821b
RuleName = Old TLS1.0/TLS1.1 Protocol Version Enabled
EventType = Reg.Any
Tag = old-tls1.0/tls1.1-protocol-version-enabled
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Reg.TargetObject like r"%\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\%" or Reg.TargetObject like r"%\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\%") and Reg.TargetObject like r"%\\Enabled" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the use of a Microsoft signed script executing a managed DLL with PowerShell.
# Author: frack113
RuleId = 0403d67d-6227-4ea8-8145-4e72db7da120
RuleName = UtilityFunctions.ps1 Proxy Dll
EventType = Process.Start
Tag = proc-start-utilityfunctions.ps1-proxy-dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "frack113"}
Query = Process.CommandLine like r"%UtilityFunctions.ps1%" or Process.CommandLine like r"%RegSnapin %"


[ActivityMonitoringRule platform=Windows]
# Detects execution of PktMon, a tool that captures network packets.
# Author: frack113
RuleId = f956c7c1-0f60-4bc5-b7d7-b39ab3c08908
RuleName = PktMon.EXE Execution
EventType = Process.Start
Tag = proc-start-pktmon.exe-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1040"], "author": "frack113"}
Query = Process.Path like r"%\\pktmon.exe" or Process.Name == "PktMon.exe"


[ActivityMonitoringRule platform=Windows]
# Detects Windows Installer service (msiexec.exe) spawning "cmd" or "powershell"
# Author: Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community
RuleId = 1e53dd56-8d83-4eb4-a43e-b790a05510aa
RuleName = Always Install Elevated MSI Spawned Cmd And Powershell
EventType = Process.Start
Tag = proc-start-always-install-elevated-msi-spawned-cmd-and-powershell
RiskScore = 50
Annotation = {"mitre_attack": ["T1548.002"], "author": "Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["Cmd.Exe", "PowerShell.EXE", "pwsh.dll"]) and Parent.Path like r"%\\Windows\\Installer\\%" and Parent.Path like r"%msi%" and Parent.Path like r"%tmp"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of powershell scripts via Runscripthelper.exe
# Author: Victor Sergeev, oscd.community
RuleId = eca49c87-8a75-4f13-9c73-a5a29e845f03
RuleName = Suspicious Runscripthelper.exe
EventType = Process.Start
Tag = proc-start-suspicious-runscripthelper.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059", "T1202"], "author": "Victor Sergeev, oscd.community"}
Query = Process.Path like r"%\\Runscripthelper.exe" and Process.CommandLine like r"%surfacecheck%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of GfxDownloadWrapper.exe with a URL as an argument to download file.
# Author: Victor Sergeev, oscd.community
RuleId = eee00933-a761-4cd0-be70-c42fe91731e7
RuleName = Arbitrary File Download Via GfxDownloadWrapper.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-gfxdownloadwrapper.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Victor Sergeev, oscd.community"}
Query = Process.Path like r"%\\GfxDownloadWrapper.exe" and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%") and not Process.CommandLine like r"%https://gameplayapi.intel.com/%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "odbcconf" with "INSTALLDRIVER" which installs a new ODBC driver. Attackers abuse this to install and run malicious DLLs.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3f5491e2-8db8-496b-9e95-1029fce852d4
RuleName = Driver/DLL Installation Via Odbcconf.EXE
EventType = Process.Start
Tag = proc-start-driver/dll-installation-via-odbcconf.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.008"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\odbcconf.exe" or Process.Name == "odbcconf.exe") and Process.CommandLine like r"%INSTALLDRIVER %" and Process.CommandLine like r"%.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects the use of Rundll32 to launch an NSIS module that serves as the main stealer capability of Rhadamanthys infostealer, as observed in reports and samples in early 2023
# Author: TropChaud
RuleId = 5cdbc2e8-86dd-43df-9a1a-200d4745fba5
RuleName = Rhadamanthys Stealer Module Launch Via Rundll32.EXE
EventType = Process.Start
Tag = proc-start-rhadamanthys-stealer-module-launch-via-rundll32.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "TropChaud"}
Query = (Process.Name == "RUNDLL32.EXE" or Process.Path like r"%\\rundll32.exe") and Process.CommandLine like r"%nsis\_uns%" and Process.CommandLine like r"%PrintUIEntry%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of WMIC in order to get a list of firewall and antivirus products
# Author: Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community
RuleId = e568650b-5dcd-4658-8f34-ded0b1e13992
RuleName = Potential Product Class Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-potential-product-class-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%AntiVirusProduct%" or Process.CommandLine like r"%FirewallProduct%")


[ActivityMonitoringRule platform=Windows]
# Detects calls to the "terminate" function via wmic in order to kill an application
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 49d9671b-0a0a-4c09-8280-d215bfd30662
RuleName = Application Terminated Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-application-terminated-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%call%" and Process.CommandLine like r"%terminate%"


[ActivityMonitoringRule platform=Windows]
# Detects disabling Windows Defender Tamper Protection
# Author: Austin Songer @austinsonger
RuleId = 93d298a1-d28f-47f1-a468-d971e7796679
RuleName = Disable Tamper Protection on Windows Defender
EventType = Reg.Any
Tag = disable-tamper-protection-on-windows-defender
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Austin Songer @austinsonger"}
Query = Reg.TargetObject like r"%\\Microsoft\\Windows Defender\\Features\\TamperProtection%" and Reg.Value.Data == "DWORD (0x00000000)" and not (Process.Path like r"C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\%" and Process.Path like r"%\\MsMpEng.exe" or Process.Path == "C:\\Program Files\\Windows Defender\\MsMpEng.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects file downloads directly from IP address URL using curl.exe
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9cc85849-3b02-4cb5-b371-3a1ff54f2218
RuleName = File Download From IP URL Via Curl.EXE
EventType = Process.Start
Tag = proc-start-file-download-from-ip-url-via-curl.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and Process.CommandLine regex "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}" and Process.CommandLine like r"%http%" and (Process.CommandLine like r"% -O%" or Process.CommandLine like r"%--remote-name%" or Process.CommandLine like r"%--output%") and not (Process.CommandLine like r"%.bat" or Process.CommandLine like r"%.bat\"" or Process.CommandLine like r"%.dat" or Process.CommandLine like r"%.dat\"" or Process.CommandLine like r"%.dll" or Process.CommandLine like r"%.dll\"" or Process.CommandLine like r"%.exe" or Process.CommandLine like r"%.exe\"" or Process.CommandLine like r"%.gif" or Process.CommandLine like r"%.gif\"" or Process.CommandLine like r"%.hta" or Process.CommandLine like r"%.hta\"" or Process.CommandLine like r"%.jpeg" or Process.CommandLine like r"%.jpeg\"" or Process.CommandLine like r"%.log" or Process.CommandLine like r"%.log\"" or Process.CommandLine like r"%.msi" or Process.CommandLine like r"%.msi\"" or Process.CommandLine like r"%.png" or Process.CommandLine like r"%.png\"" or Process.CommandLine like r"%.ps1" or Process.CommandLine like r"%.ps1\"" or Process.CommandLine like r"%.psm1" or Process.CommandLine like r"%.psm1\"" or Process.CommandLine like r"%.vbe" or Process.CommandLine like r"%.vbe\"" or Process.CommandLine like r"%.vbs" or Process.CommandLine like r"%.vbs\"" or Process.CommandLine like r"%.bat'" or Process.CommandLine like r"%.dat'" or Process.CommandLine like r"%.dll'" or Process.CommandLine like r"%.exe'" or Process.CommandLine like r"%.gif'" or Process.CommandLine like r"%.hta'" or Process.CommandLine like r"%.jpeg'" or Process.CommandLine like r"%.log'" or Process.CommandLine like r"%.msi'" or Process.CommandLine like r"%.png'" or Process.CommandLine like r"%.ps1'" or Process.CommandLine like r"%.psm1'" or Process.CommandLine like r"%.vbe'" or Process.CommandLine like r"%.vbs'")


[ActivityMonitoringRule platform=Windows]
# Detects the removal of a port or application rule in the Windows Firewall configuration using netsh
# Author: frack113
RuleId = 1a5fefe6-734f-452e-a07d-fc1c35bce4b2
RuleName = Firewall Rule Deleted Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-firewall-rule-deleted-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "frack113"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%delete %" and not (Parent.Path like r"%\\Dropbox.exe" and Process.CommandLine like r"%name=Dropbox%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detect use of the Windows 8.3 short name. Which could be used as a method to avoid Image based detection
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 3ef5605c-9eb9-47b0-9a71-b727e6aa5c3b
RuleName = Use NTFS Short Name in Image
EventType = Process.Start
Tag = proc-start-use-ntfs-short-name-in-image
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%~1.bat%" or Process.Path like r"%~1.dll%" or Process.Path like r"%~1.exe%" or Process.Path like r"%~1.hta%" or Process.Path like r"%~1.js%" or Process.Path like r"%~1.msi%" or Process.Path like r"%~1.ps1%" or Process.Path like r"%~1.tmp%" or Process.Path like r"%~1.vbe%" or Process.Path like r"%~1.vbs%" or Process.Path like r"%~2.bat%" or Process.Path like r"%~2.dll%" or Process.Path like r"%~2.exe%" or Process.Path like r"%~2.hta%" or Process.Path like r"%~2.js%" or Process.Path like r"%~2.msi%" or Process.Path like r"%~2.ps1%" or Process.Path like r"%~2.tmp%" or Process.Path like r"%~2.vbe%" or Process.Path like r"%~2.vbs%") and not Parent.Path == "C:\\Windows\\explorer.exe" and not (Parent.Path like r"%\\WebEx\\WebexHost.exe" or Parent.Path like r"%\\thor\\thor64.exe" or Process.Path == "C:\\PROGRA~1\\WinZip\\WZPREL~1.EXE" or Process.Path like r"%\\VCREDI~1.EXE")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects when an attacker register a new IFilter for an extension. Microsoft Windows Search uses filters to extract the content of items for inclusion in a full-text index. You can extend Windows Search to index new or proprietary file types by writing filters to extract the content, and property handlers to extract the properties of files
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b23818c7-e575-4d13-8012-332075ec0a2b
RuleName = Register New IFiltre For Persistence
EventType = Reg.Any
Tag = register-new-ifiltre-for-persistence
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = ((Reg.TargetObject like r"HKLM\\SOFTWARE\\Classes\\.%" or Reg.TargetObject like r"HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Classes\\.%") and Reg.TargetObject like r"%\\PersistentHandler%" or (Reg.TargetObject like r"HKLM\\SOFTWARE\\Classes\\CLSID%" or Reg.TargetObject like r"HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Classes\\CLSID%") and Reg.TargetObject like r"%\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}%") and not (Reg.TargetObject like r"%\\CLSID\\{4F46F75F-199F-4C63-8B7D-86D48FE7970C}\\%" or Reg.TargetObject like r"%\\CLSID\\{4887767F-7ADC-4983-B576-88FB643D6F79}\\%" or Reg.TargetObject like r"%\\CLSID\\{D3B41FA1-01E3-49AF-AA25-1D0D824275AE}\\%" or Reg.TargetObject like r"%\\CLSID\\{72773E1A-B711-4d8d-81FA-B9A43B0650DD}\\%" or Reg.TargetObject like r"%\\CLSID\\{098f2470-bae0-11cd-b579-08002b30bfeb}\\%" or Reg.TargetObject like r"%\\CLSID\\{1AA9BF05-9A97-48c1-BA28-D9DCE795E93C}\\%" or Reg.TargetObject like r"%\\CLSID\\{2e2294a9-50d7-4fe7-a09f-e6492e185884}\\%" or Reg.TargetObject like r"%\\CLSID\\{34CEAC8D-CBC0-4f77-B7B1-8A60CB6DA0F7}\\%" or Reg.TargetObject like r"%\\CLSID\\{3B224B11-9363-407e-850F-C9E1FFACD8FB}\\%" or Reg.TargetObject like r"%\\CLSID\\{3DDEB7A4-8ABF-4D82-B9EE-E1F4552E95BE}\\%" or Reg.TargetObject like r"%\\CLSID\\{5645C8C1-E277-11CF-8FDA-00AA00A14F93}\\%" or Reg.TargetObject like r"%\\CLSID\\{5645C8C4-E277-11CF-8FDA-00AA00A14F93}\\%" or Reg.TargetObject like r"%\\CLSID\\{58A9EBF6-5755-4554-A67E-A2467AD1447B}\\%" or Reg.TargetObject like r"%\\CLSID\\{5e941d80-bf96-11cd-b579-08002b30bfeb}\\%" or Reg.TargetObject like r"%\\CLSID\\{698A4FFC-63A3-4E70-8F00-376AD29363FB}\\%" or Reg.TargetObject like r"%\\CLSID\\{7E9D8D44-6926-426F-AA2B-217A819A5CCE}\\%" or Reg.TargetObject like r"%\\CLSID\\{8CD34779-9F10-4f9b-ADFB-B3FAEABDAB5A}\\%" or Reg.TargetObject like r"%\\CLSID\\{9694E38A-E081-46ac-99A0-8743C909ACB6}\\%" or Reg.TargetObject like r"%\\CLSID\\{98de59a0-d175-11cd-a7bd-00006b827d94}\\%" or Reg.TargetObject like r"%\\CLSID\\{AA10385A-F5AA-4EFF-B3DF-71B701E25E18}\\%" or Reg.TargetObject like r"%\\CLSID\\{B4132098-7A03-423D-9463-163CB07C151F}\\%" or Reg.TargetObject like r"%\\CLSID\\{d044309b-5da6-4633-b085-4ed02522e5a5}\\%" or Reg.TargetObject like r"%\\CLSID\\{D169C14A-5148-4322-92C8-754FC9D018D8}\\%" or Reg.TargetObject like r"%\\CLSID\\{DD75716E-B42E-4978-BB60-1497B92E30C4}\\%" or Reg.TargetObject like r"%\\CLSID\\{E2F83EED-62DE-4A9F-9CD0-A1D40DCD13B6}\\%" or Reg.TargetObject like r"%\\CLSID\\{E772CEB3-E203-4828-ADF1-765713D981B8}\\%" or Reg.TargetObject like r"%\\CLSID\\{eec97550-47a9-11cf-b952-00aa0051fe20}%" or Reg.TargetObject like r"%\\CLSID\\{FB10BD80-A331-4e9e-9EB7-00279903AD99}\\%" or Process.Path like r"C:\\Windows\\System32\\%" or Process.Path like r"C:\\Program Files (x86)\\%" or Process.Path like r"C:\\Program Files\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# dotnet.exe will execute any DLL and execute unsigned code
# Author: Beyu Denis, oscd.community
RuleId = d80d5c81-04ba-45b4-84e4-92eba40e0ad3
RuleName = Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN
EventType = Process.Start
Tag = proc-start-dotnet.exe-exec-dll-and-execute-unsigned-code-lolbin
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Beyu Denis, oscd.community"}
Query = (Process.Path like r"%\\dotnet.exe" or Process.Name == ".NET Host") and (Process.CommandLine like r"%.dll" or Process.CommandLine like r"%.csproj")


[ActivityMonitoringRule platform=Windows]
# Detects execution of "WerFault.exe" with the "-pr" commandline flag that is used to run files stored in the ReflectDebugger key which could be used to store the path to the malware in order to masquerade the execution flow
# Author: X__Junior (Nextron Systems)
RuleId = fabfb3a7-3ce1-4445-9c7c-3c27f1051cdd
RuleName = Potential ReflectDebugger Content Execution Via WerFault.EXE
EventType = Process.Start
Tag = proc-start-potential-reflectdebugger-content-execution-via-werfault.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\WerFault.exe" or Process.Name == "WerFault.exe") and Process.CommandLine like r"% -pr %"


[ActivityMonitoringRule platform=Windows]
# Detect modification of TreatAs key to enable "rundll32.exe -sta" command
# Author: frack113
RuleId = dc5c24af-6995-49b2-86eb-a9ff62199e82
RuleName = COM Hijacking via TreatAs
EventType = Reg.Any
Tag = com-hijacking-via-treatas
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.015"], "author": "frack113"}
Query = Reg.TargetObject like r"%TreatAs\\(Default)" and not (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path == "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe" or Process.Path == "C:\\Windows\\system32\\svchost.exe" or Process.Path in ["C:\\Windows\\system32\\msiexec.exe", "C:\\Windows\\SysWOW64\\msiexec.exe"])
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects usage of the Get-ADComputer cmdlet to collect computer information and output it to a file
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 435e10e4-992a-4281-96f3-38b11106adde
RuleName = Computer Discovery And Export Via Get-ADComputer Cmdlet
EventType = Process.Start
Tag = proc-start-computer-discovery-and-export-via-get-adcomputer-cmdlet
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%Get-ADComputer %" and Process.CommandLine like r"% -Filter *%" and (Process.CommandLine like r"% > %" or Process.CommandLine like r"% | Select %" or Process.CommandLine like r"%Out-File%" or Process.CommandLine like r"%Set-Content%" or Process.CommandLine like r"%Add-Content%")


[ActivityMonitoringRule platform=Windows]
# Detects uncommon child processes of Appvlp.EXE
# Appvlp or the Application Virtualization Utility is included with Microsoft Office. Attackers are able to abuse "AppVLP" to execute shell commands.
# Normally, this binary is used for Application Virtualization, but it can also be abused to circumvent the ASR file path rule folder
# or to mark a file as a system file.
# Author: Sreeman
RuleId = 9c7e131a-0f2c-4ae0-9d43-b04f4e266d43
RuleName = Uncommon Child Process Of Appvlp.EXE
EventType = Process.Start
Tag = proc-start-uncommon-child-process-of-appvlp.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Sreeman"}
Query = Parent.Path like r"%\\appvlp.exe" and not (Process.Path like r"%:\\Windows\\SysWOW64\\rundll32.exe" or Process.Path like r"%:\\Windows\\System32\\rundll32.exe") and not (Process.Path like r"%:\\Program Files\\Microsoft Office%" and Process.Path like r"%\\msoasb.exe" or Process.Path like r"%:\\Program Files\\Microsoft Office%" and Process.Path like r"%\\SkypeSrv\\%" and Process.Path like r"%\\SKYPESERVER.EXE" or Process.Path like r"%:\\Program Files\\Microsoft Office%" and Process.Path like r"%\\MSOUC.EXE")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of the MSXSL utility. This can be used to execute Extensible Stylesheet Language (XSL) files. These files are commonly used to describe the processing and rendering of data within XML files.
# Adversaries can abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
# Author: Timur Zinniatullin, oscd.community
RuleId = 9e50a8b3-dd05-4eb8-9153-bdb6b79d50b0
RuleName = Msxsl.EXE Execution
EventType = Process.Start
Tag = proc-start-msxsl.exe-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1220"], "author": "Timur Zinniatullin, oscd.community"}
Query = Process.Path like r"%\\msxsl.exe"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL side loading of DLLs that are part of the Wazuh security platform
# Author: X__Junior (Nextron Systems)
RuleId = db77ce78-7e28-4188-9337-cf30e2b3ba9f
RuleName = Potential Wazuh Security Platform DLL Sideloading
EventType = Image.Load
Tag = potential-wazuh-security-platform-dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = (Image.Path like r"%\\libwazuhshared.dll" or Image.Path like r"%\\libwinpthread-1.dll") and not (Image.Path like r"C:\\Program Files\\%" or Image.Path like r"C:\\Program Files (x86)\\%") and not ((Image.Path like r"%\\AppData\\Local\\%" or Image.Path like r"%\\ProgramData\\%") and Image.Path like r"%\\mingw64\\bin\\libwinpthread-1.dll")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child processes of a ClickOnce deployment application
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 67bc0e75-c0a9-4cfc-8754-84a505b63c04
RuleName = Potentially Suspicious Child Process Of ClickOnce Application
EventType = Process.Start
Tag = proc-start-potentially-suspicious-child-process-of-clickonce-application
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\AppData\\Local\\Apps\\2.0\\%" and (Process.Path like r"%\\calc.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\explorer.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Path like r"%\\nltest.exe" or Process.Path like r"%\\notepad.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\reg.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\schtasks.exe" or Process.Path like r"%\\werfault.exe" or Process.Path like r"%\\wscript.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Extexport.exe loads dll and is execute from other folder the original path
# Author: frack113
RuleId = fb0b815b-f5f6-4f50-970f-ffe21f253f7a
RuleName = Suspicious Extexport Execution
EventType = Process.Start
Tag = proc-start-suspicious-extexport-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = Process.CommandLine like r"%Extexport.exe%" or Process.Path like r"%\\Extexport.exe" or Process.Name == "extexport.exe"


[ActivityMonitoringRule platform=Windows]
# Detects signs of the WMI script host process "scrcons.exe" loading scripting DLLs which could indicates WMI ActiveScriptEventConsumers EventConsumers activity.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = b439f47d-ef52-4b29-9a2f-57d8a96cb6b8
RuleName = WMI ActiveScriptEventConsumers Activity Via Scrcons.EXE DLL Load
EventType = Image.Load
Tag = wmi-activescripteventconsumers-activity-via-scrcons.exe-dll-load
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.003"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Process.Path like r"%\\scrcons.exe" and (Image.Path like r"%\\vbscript.dll" or Image.Path like r"%\\wbemdisp.dll" or Image.Path like r"%\\wshom.ocx" or Image.Path like r"%\\scrrun.dll")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of Sysinternals PsService which can be abused for service reconnaissance and tampering
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3371f518-5fe3-4cf6-a14b-2a0ae3fd8a4f
RuleName = Sysinternals PsService Execution
EventType = Process.Start
Tag = proc-start-sysinternals-psservice-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Name == "psservice.exe" or Process.Path like r"%\\PsService.exe" or Process.Path like r"%\\PsService64.exe"


[ActivityMonitoringRule platform=Windows]
# Detect the harvesting of wifi credentials using netsh.exe
# Author: Andreas Hunkeler (@Karneades), oscd.community
RuleId = 42b1a5b8-353f-4f10-b256-39de4467faff
RuleName = Harvesting Of Wifi Credentials Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-harvesting-of-wifi-credentials-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1040"], "author": "Andreas Hunkeler (@Karneades), oscd.community"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"%wlan%" and Process.CommandLine like r"% s%" and Process.CommandLine like r"% p%" and Process.CommandLine like r"% k%" and Process.CommandLine like r"%=clear%"


[ActivityMonitoringRule platform=Windows]
# Detects creation of a file named "ErrorHandler.cmd" in the "C:\WINDOWS\Setup\Scripts\" directory which could be used as a method of persistence
# The content of C:\WINDOWS\Setup\Scripts\ErrorHandler.cmd is read whenever some tools under C:\WINDOWS\System32\oobe\ (e.g. Setup.exe) fail to run for any reason.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 15904280-565c-4b73-9303-3291f964e7f9
RuleName = Potential Persistence Attempt Via ErrorHandler.Cmd
EventType = File.Create
Tag = potential-persistence-attempt-via-errorhandler.cmd
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\WINDOWS\\Setup\\Scripts\\ErrorHandler.cmd"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "cmdkey.exe" to add generic credentials.
# As an example, this can be used before connecting to an RDP session via command line interface.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = b1ec66c6-f4d1-4b5c-96dd-af28ccae7727
RuleName = New Generic Credentials Added Via Cmdkey.EXE
EventType = Process.Start
Tag = proc-start-new-generic-credentials-added-via-cmdkey.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.005"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\cmdkey.exe" or Process.Name == "cmdkey.exe") and (Process.CommandLine like r"% -g%" or Process.CommandLine like r"% /g%") and (Process.CommandLine like r"% -u%" or Process.CommandLine like r"% /u%") and (Process.CommandLine like r"% -p%" or Process.CommandLine like r"% /p%")


[ActivityMonitoringRule platform=Windows]
# Detects usage of the SysInternals Procdump utility
# Author: Florian Roth (Nextron Systems)
RuleId = 2e65275c-8288-4ab4-aeb7-6274f58b6b20
RuleName = Procdump Execution
EventType = Process.Start
Tag = proc-start-procdump-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1036", "T1003.001"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\procdump.exe" or Process.Path like r"%\\procdump64.exe"


[ActivityMonitoringRule platform=Windows]
# Detects deletion of files with extensions often used for backup files. Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.
# Author: frack113
RuleId = 06125661-3814-4e03-bfa2-1e4411c60ac3
RuleName = Backup Files Deleted
EventType = File.Delete
Tag = backup-files-deleted
RiskScore = 50
Annotation = {"mitre_attack": ["T1490"], "author": "frack113"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wt.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe") and (File.Path like r"%.VHD" or File.Path like r"%.bac" or File.Path like r"%.bak" or File.Path like r"%.wbcat" or File.Path like r"%.bkf" or File.Path like r"%.set" or File.Path like r"%.win" or File.Path like r"%.dsk")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects creation of a scheduled task with a GUID like name
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ff2fff64-4cd6-4a2b-ba7d-e28a30bbe66b
RuleName = Suspicious Scheduled Task Name As GUID
EventType = Process.Start
Tag = proc-start-suspicious-scheduled-task-name-as-guid
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"%/Create %" and (Process.CommandLine like r"%/TN \"{%" or Process.CommandLine like r"%/TN '{%" or Process.CommandLine like r"%/TN {%") and (Process.CommandLine like r"%}\"%" or Process.CommandLine like r"%}'%" or Process.CommandLine like r"%} %")


[ActivityMonitoringRule platform=Windows]
# Detects registry key established after masqueraded .scr file execution using Rundll32 through desk.cpl
# Author: Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)
RuleId = 40b6e656-4e11-4c0c-8772-c1cc6dae34ce
RuleName = ScreenSaver Registry Key Set
EventType = Reg.Any
Tag = screensaver-registry-key-set
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)"}
Query = Process.Path like r"%\\rundll32.exe" and Reg.TargetObject like r"%\\Control Panel\\Desktop\\SCRNSAVE.EXE%" and Reg.Value.Data like r"%.scr" and not (Reg.Value.Data like r"%C:\\Windows\\System32\\%" or Reg.Value.Data like r"%C:\\Windows\\SysWOW64\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects suspicious msiexec process starts with web addresses as parameter
# Author: Florian Roth (Nextron Systems)
RuleId = f7b5f842-a6af-4da5-9e95-e32478f3cd2f
RuleName = MsiExec Web Install
EventType = Process.Start
Tag = proc-start-msiexec-web-install
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.007", "T1105"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"% msiexec%" and Process.CommandLine like r"%://%"


[ActivityMonitoringRule platform=Windows]
# Detects value modification of registry key containing path to binary used as screensaver.
# Author: Bartlomiej Czyz @bczyz1, oscd.community
RuleId = 67a6c006-3fbe-46a7-9074-2ba3b82c3000
RuleName = Path To Screensaver Binary Modified
EventType = Reg.Any
Tag = path-to-screensaver-binary-modified
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.002"], "author": "Bartlomiej Czyz @bczyz1, oscd.community"}
Query = Reg.TargetObject like r"%\\Control Panel\\Desktop\\SCRNSAVE.EXE" and not (Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\explorer.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.
# HxTsr.exe is part of Outlook apps, because it resides in a hidden "WindowsApps" subfolder of "C:\Program Files".
# Any instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe
# Author: Sreeman
RuleId = 4e762605-34a8-406d-b72e-c1a089313320
RuleName = Potential Fake Instance Of Hxtsr.EXE Executed
EventType = Process.Start
Tag = proc-start-potential-fake-instance-of-hxtsr.exe-executed
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Sreeman"}
Query = Process.Path like r"%\\hxtsr.exe" and not (Process.Path like r"%:\\program files\\windowsapps\\microsoft.windowscommunicationsapps\_%" and Process.Path like r"%\\hxtsr.exe")


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of the PowerShell console History logs which may indicate an attempt to destroy forensic evidence
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = ff301988-c231-4bd0-834c-ac9d73b86586
RuleName = PowerShell Console History Logs Deleted
EventType = File.Delete
Tag = powershell-console-history-logs-deleted
RiskScore = 50
Annotation = {"mitre_attack": ["T1070"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\PSReadLine\\ConsoleHost\_history.txt"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection
# Author: frack113, Nasreddine Bencherchali
RuleId = 349d891d-fef0-4fe4-bc53-eee623a15969
RuleName = Use Short Name Path in Command Line
EventType = Process.Start
Tag = proc-start-use-short-name-path-in-command-line
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "frack113, Nasreddine Bencherchali"}
Query = (Process.CommandLine like r"%~1\\%" or Process.CommandLine like r"%~2\\%") and not (Parent.Path in ["C:\\Windows\\System32\\Dism.exe", "C:\\Windows\\System32\\cleanmgr.exe", "C:\\Program Files\\GPSoftware\\Directory Opus\\dopus.exe"] or Parent.Path like r"%\\WebEx\\WebexHost.exe" or Parent.Path like r"%\\thor\\thor64.exe" or Parent.Path like r"%\\veam.backup.shell.exe" or Parent.Path like r"%\\winget.exe" or Parent.Path like r"%\\Everything\\Everything.exe" or Parent.Path like r"%\\AppData\\Local\\Temp\\WinGet\\%" or Process.CommandLine like r"%\\appdata\\local\\webex\\webex64\\meetings\\wbxreport.exe%" or Process.CommandLine like r"%C:\\Program Files\\Git\\post-install.bat%" or Process.CommandLine like r"%C:\\Program Files\\Git\\cmd\\scalar.exe%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "odbcconf" with the "-f" flag in order to load a response file which might contain a malicious action.
# Author: Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 5f03babb-12db-4eec-8c82-7b4cb5580868
RuleName = Response File Execution Via Odbcconf.EXE
EventType = Process.Start
Tag = proc-start-response-file-execution-via-odbcconf.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.008"], "author": "Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\odbcconf.exe" or Process.Name == "odbcconf.exe") and (Process.CommandLine like r"% -f %" or Process.CommandLine like r"% /f %") and Process.CommandLine like r"%.rsp%"


[ActivityMonitoringRule platform=Windows]
# Detects known WMI recon method to look for unquoted service paths using wmic. Often used by pentester and attacker enumeration scripts
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 68bcd73b-37ef-49cb-95fc-edc809730be6
RuleName = Potential Unquoted Service Path Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-potential-unquoted-service-path-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and Process.CommandLine like r"% service get %" and Process.CommandLine like r"%name,displayname,pathname,startmode%"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = baecf8fb-edbf-429f-9ade-31fc3f22b970
RuleName = Office Autorun Keys Modification
EventType = Reg.Any
Tag = office-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = (Reg.TargetObject like r"%\\Software\\Wow6432Node\\Microsoft\\Office%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Office%") and (Reg.TargetObject like r"%\\Word\\Addins%" or Reg.TargetObject like r"%\\PowerPoint\\Addins%" or Reg.TargetObject like r"%\\Outlook\\Addins%" or Reg.TargetObject like r"%\\Onenote\\Addins%" or Reg.TargetObject like r"%\\Excel\\Addins%" or Reg.TargetObject like r"%\\Access\\Addins%" or Reg.TargetObject like r"%test\\Special\\Perf%") and not (Reg.Value.Data == "(Empty)" or (Process.Path like r"C:\\Program Files\\Microsoft Office\\%" or Process.Path like r"C:\\Program Files (x86)\\Microsoft Office\\%" or Process.Path like r"C:\\Windows\\System32\\msiexec.exe%" or Process.Path like r"C:\\Windows\\System32\\regsvr32.exe%") and (Reg.TargetObject like r"%\\Excel\\Addins\\AdHocReportingExcelClientLib.AdHocReportingExcelClientAddIn.1\\%" or Reg.TargetObject like r"%\\Excel\\Addins\\ExcelPlugInShell.PowerMapConnect\\%" or Reg.TargetObject like r"%\\Excel\\Addins\\NativeShim\\%" or Reg.TargetObject like r"%\\Excel\\Addins\\NativeShim.InquireConnector.1\\%" or Reg.TargetObject like r"%\\Excel\\Addins\\PowerPivotExcelClientAddIn.NativeEntry.1\\%" or Reg.TargetObject like r"%\\Outlook\\AddIns\\AccessAddin.DC\\%" or Reg.TargetObject like r"%\\Outlook\\AddIns\\ColleagueImport.ColleagueImportAddin\\%" or Reg.TargetObject like r"%\\Outlook\\AddIns\\EvernoteCC.EvernoteContactConnector\\%" or Reg.TargetObject like r"%\\Outlook\\AddIns\\EvernoteOLRD.Connect\\%" or Reg.TargetObject like r"%\\Outlook\\Addins\\Microsoft.VbaAddinForOutlook.1\\%" or Reg.TargetObject like r"%\\Outlook\\Addins\\OcOffice.OcForms\\%" or Reg.TargetObject like r"%\\Outlook\\Addins\\OneNote.OutlookAddin%" or Reg.TargetObject like r"%\\Outlook\\Addins\\OscAddin.Connect\\%" or Reg.TargetObject like r"%\\Outlook\\Addins\\OutlookChangeNotifier.Connect\\%" or Reg.TargetObject like r"%\\Outlook\\Addins\\UCAddin.LyncAddin.1%" or Reg.TargetObject like r"%\\Outlook\\Addins\\UCAddin.UCAddin.1%" or Reg.TargetObject like r"%\\Outlook\\Addins\\UmOutlookAddin.FormRegionAddin\\%") or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path == "C:\\Program Files\\AVG\\Antivirus\\RegSvr.exe" and Reg.TargetObject like r"%\\Microsoft\\Office\\Outlook\\Addins\\Antivirus.AsOutExt\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery or delete events logs
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = aae1243f-d8af-40d8-ab20-33fc6d0c55bc
RuleName = Suspicious Use of PsLogList
EventType = Process.Start
Tag = proc-start-suspicious-use-of-psloglist
RiskScore = 50
Annotation = {"mitre_attack": ["T1087", "T1087.001", "T1087.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "psloglist.exe" or Process.Path like r"%\\psloglist.exe" or Process.Path like r"%\\psloglist64.exe") and (Process.CommandLine like r"% security%" or Process.CommandLine like r"% application%" or Process.CommandLine like r"% system%") and (Process.CommandLine like r"% -d%" or Process.CommandLine like r"% /d%" or Process.CommandLine like r"% -x%" or Process.CommandLine like r"% /x%" or Process.CommandLine like r"% -s%" or Process.CommandLine like r"% /s%" or Process.CommandLine like r"% -c%" or Process.CommandLine like r"% /c%" or Process.CommandLine like r"% -g%" or Process.CommandLine like r"% /g%")


[ActivityMonitoringRule platform=Windows]
# Detects registry modifications that disable internal tools or functions in explorer (malware like Agent Tesla uses this technique)
# Author: frack113
RuleId = 1c3121ed-041b-4d97-a075-07f54f20fb4a
RuleName = Registry Explorer Policy Modification
EventType = Reg.Any
Tag = registry-explorer-policy-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = (Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoLogOff" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoDesktop" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoRun" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoFind" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoControlPanel" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoFileMenu" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoClose" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoSetTaskbar" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoPropertiesMyDocuments" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoTrayContextMenu") and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of bitsadmin downloading a file
# Author: Michael Haag, FPT.EagleEye
RuleId = d059842b-6b9d-4ed1-b5c3-5b89143c6ede
RuleName = File Download Via Bitsadmin
EventType = Process.Start
Tag = proc-start-file-download-via-bitsadmin
RiskScore = 50
Annotation = {"mitre_attack": ["T1197", "T1036.003"], "author": "Michael Haag, FPT.EagleEye"}
Query = (Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"% /transfer %" or (Process.CommandLine like r"% /create %" or Process.CommandLine like r"% /addfile %") and Process.CommandLine like r"%http%")


[ActivityMonitoringRule platform=Windows]
# Detects DNS queries initiated by "Regsvr32.exe"
# Author: Dmitriy Lifanov, oscd.community
RuleId = 36e037c4-c228-4866-b6a3-48eb292b9955
RuleName = DNS Query Request By Regsvr32.EXE
EventType = Dns.Query
Tag = dns-query-request-by-regsvr32.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1559.001", "T1218.010"], "author": "Dmitriy Lifanov, oscd.community"}
Query = Process.Path like r"%\\regsvr32.exe"


[ActivityMonitoringRule platform=Windows]
# Detects execution of Microsoft bash launcher without any flags to execute the content of a bash script directly.
# This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 2d22a514-e024-4428-9dba-41505bd63a5b
RuleName = Indirect Command Execution From Script File Via Bash.EXE
EventType = Process.Start
Tag = proc-start-indirect-command-execution-from-script-file-via-bash.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1202"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%:\\Windows\\System32\\bash.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\bash.exe" or Process.Name == "Bash.exe") and not (Process.CommandLine like r"%bash.exe -%" or Process.CommandLine like r"%bash -%" or isnull(Process.CommandLine) or Process.CommandLine == "" or Process.CommandLine in ["bash.exe", "bash"])


[ActivityMonitoringRule platform=Windows]
# Detects an a non-browser process interacting with the Telegram API which could indicate use of a covert C2
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c3dbbc9f-ef1d-470a-a90a-d343448d5875
RuleName = Suspicious Non-Browser Network Communication With Telegram API
EventType = Net.Any
Tag = suspicious-non-browser-network-communication-with-telegram-api
RiskScore = 50
Annotation = {"mitre_attack": ["T1102"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Net.Target.Name like r"%api.telegram.org%" and not (Process.Path like r"%\\brave.exe" or Process.Path in ["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"] or Process.Path in ["C:\\Program Files\\Mozilla Firefox\\firefox.exe", "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"] or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or Process.Path like r"%\\maxthon.exe" or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\%" or Process.Path like r"%\\WindowsApps\\MicrosoftEdge.exe" or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeCore\\%" or Process.Path like r"C:\\Program Files\\Microsoft\\EdgeCore\\%") and (Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe") or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe")
GenericProperty1 = Net.Target.Name


[ActivityMonitoringRule platform=Windows]
# Detects usage of Msiexec.exe to install packages hosted remotely quietly
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 8150732a-0c9d-4a99-82b9-9efb9b90c40c
RuleName = Suspicious Msiexec Quiet Install From Remote Location
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-quiet-install-from-remote-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.007"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\msiexec.exe" or Process.Name == "msiexec.exe") and (Process.CommandLine like r"%-i%" or Process.CommandLine like r"%/i%" or Process.CommandLine like r"%-package%" or Process.CommandLine like r"%/package%" or Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/a%" or Process.CommandLine like r"%-j%" or Process.CommandLine like r"%/j%") and (Process.CommandLine like r"%-q%" or Process.CommandLine like r"%/q%") and (Process.CommandLine like r"%http%" or Process.CommandLine like r"%\\\\%")


[ActivityMonitoringRule platform=Windows]
# Detects uncommon or suspicious child processes spawning from a VsCode "code.exe" process. This could indicate an attempt of persistence via VsCode tasks or terminal profiles.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 5a3164f2-b373-4152-93cf-090b13c12d27
RuleName = Potentially Suspicious Child Process Of VsCode
EventType = Process.Start
Tag = proc-start-potentially-suspicious-child-process-of-vscode
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\code.exe" and (Process.Path like r"%\\calc.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\cmd.exe") and (Process.CommandLine like r"%Invoke-Expressions%" or Process.CommandLine like r"%IEX%" or Process.CommandLine like r"%Invoke-Command%" or Process.CommandLine like r"%ICM%" or Process.CommandLine like r"%DownloadString%" or Process.CommandLine like r"%rundll32%" or Process.CommandLine like r"%regsvr32%" or Process.CommandLine like r"%wscript%" or Process.CommandLine like r"%cscript%") or Process.Path like r"%:\\Users\\Public\\%" or Process.Path like r"%:\\Windows\\Temp\\%" or Process.Path like r"%:\\Temp\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of ntdsutil.exe to perform different actions such as restoring snapshots...etc.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a58353df-af43-4753-bad0-cd83ef35eef5
RuleName = Suspicious Usage Of Active Directory Diagnostic Tool (ntdsutil.exe)
EventType = Process.Start
Tag = proc-start-suspicious-usage-of-active-directory-diagnostic-tool-(ntdsutil.exe)
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ntdsutil.exe" or Process.Name == "ntdsutil.exe") and (Process.CommandLine like r"%snapshot%" and Process.CommandLine like r"%mount %" or Process.CommandLine like r"%ac%" and Process.CommandLine like r"% i%" and Process.CommandLine like r"% ntds%")


[ActivityMonitoringRule platform=Windows]
# Detect use of icacls to deny access for everyone in Users folder sometimes used to hide malicious files
# Author: frack113
RuleId = 4ae81040-fc1c-4249-bfa3-938d260214d9
RuleName = Use Icacls to Hide File to Everyone
EventType = Process.Start
Tag = proc-start-use-icacls-to-hide-file-to-everyone
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.001"], "author": "frack113"}
Query = (Process.Name == "iCACLS.EXE" or Process.Path like r"%\\icacls.exe") and Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%/deny%" and Process.CommandLine like r"%S-1-1-0:%"


[ActivityMonitoringRule platform=Windows]
# An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
# These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
# Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
# Author: frack113
RuleId = 0b9ad457-2554-44c1-82c2-d56a99c42377
RuleName = Anydesk Temporary Artefact
EventType = File.Create
Tag = anydesk-temporary-artefact
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "frack113"}
Query = (File.Path like r"%\\AppData\\Roaming\\AnyDesk\\user.conf%" or File.Path like r"%\\AppData\\Roaming\\AnyDesk\\system.conf%") and File.Path like r"%.temp"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects commandline arguments for executing a child process via dotnet-trace.exe
# Author: Jimmy Bayne (@bohops)
RuleId = 9257c05b-4a4a-48e5-a670-b7b073cf401b
RuleName = Binary Proxy Execution Via Dotnet-Trace.EXE
EventType = Process.Start
Tag = proc-start-binary-proxy-execution-via-dotnet-trace.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Jimmy Bayne (@bohops)"}
Query = (Process.Path like r"%\\dotnet-trace.exe" or Process.Name == "dotnet-trace.dll") and Process.CommandLine like r"%-- %" and Process.CommandLine like r"%collect%"


[ActivityMonitoringRule platform=Windows]
# Detects weak passwords or often abused passwords (seen used by threat actors) via the CLI.
# An example would be a threat actor creating a new user via the net command and providing the password inline
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 91edcfb1-2529-4ac2-9ecc-7617f895c7e4
RuleName = Weak or Abused Passwords In CLI
EventType = Process.Start
Tag = proc-start-weak-or-abused-passwords-in-cli
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%123456789%" or Process.CommandLine like r"%123123qwE%" or Process.CommandLine like r"%Asd123.aaaa%" or Process.CommandLine like r"%Decryptme%" or Process.CommandLine like r"%P@ssw0rd!%" or Process.CommandLine like r"%Pass8080%" or Process.CommandLine like r"%password123%" or Process.CommandLine like r"%test@202%"


[ActivityMonitoringRule platform=Windows]
# Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries,
# which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from "svchost"
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @gott_cyber
RuleId = 949f1ffb-6e85-4f00-ae1e-c3c5b190d605
RuleName = Explorer Process Tree Break
EventType = Process.Start
Tag = proc-start-explorer-process-tree-break
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @gott_cyber"}
Query = Process.CommandLine like r"%/factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b}%" or Process.CommandLine like r"%explorer.exe%" and Process.CommandLine like r"% /root,%"


[ActivityMonitoringRule platform=Windows]
# Detects scheduled task creations or modification to be run with high privileges on a suspicious schedule type
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7a02e22e-b885-4404-b38b-1ddc7e65258a
RuleName = Suspicious Schtasks Schedule Type With High Privileges
EventType = Process.Start
Tag = proc-start-suspicious-schtasks-schedule-type-with-high-privileges
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\schtasks.exe" or Process.Name == "schtasks.exe") and (Process.CommandLine like r"% ONLOGON %" or Process.CommandLine like r"% ONSTART %" or Process.CommandLine like r"% ONCE %" or Process.CommandLine like r"% ONIDLE %") and (Process.CommandLine like r"%NT AUT%" or Process.CommandLine like r"% SYSTEM%" or Process.CommandLine like r"%HIGHEST%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "goopdate.dll", a DLL used by googleupdate.exe
# Author: X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = b6188d2f-b3c4-4d2c-a17d-9706e0851af0
RuleName = Potential Goopdate.DLL Sideloading
EventType = Image.Load
Tag = potential-goopdate.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%\\goopdate.dll" and not (Image.Path like r"C:\\Program Files (x86)\\%" or Image.Path like r"C:\\Program Files\\%") and not (Process.Path like r"%\\AppData\\Local\\Temp\\GUM%" and Process.Path like r"%.tmp\\Dropbox%" and Image.Path like r"%\\AppData\\Local\\Temp\\GUM%" and Image.Path like r"%.tmp\\goopdate.dll%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects exploitation attempt of CVE-2023-22518 (Confluence Data Center / Confluence Server), where an attacker can exploit vulnerable endpoints to e.g. create admin accounts and execute arbitrary commands.
# Author: Andreas Braathen (mnemonic.io)
RuleId = 1ddaa9a4-eb0b-4398-a9fe-7b018f9e23db
RuleName = CVE-2023-22518 Exploitation Attempt - Suspicious Confluence Child Process (Windows)
EventType = Process.Start
Tag = proc-start-cve-2023-22518-exploitation-attempt-suspicious-confluence-child-process-(windows)
RiskScore = 50
Annotation = {"mitre_attack": ["T1059", "T1190"], "author": "Andreas Braathen (mnemonic.io)"}
Query = (Parent.Path like r"%\\tomcat8.exe" or Parent.Path like r"%\\tomcat9.exe" or Parent.Path like r"%\\tomcat10.exe") and Parent.CommandLine like r"%confluence%" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Name in ["Cmd.Exe", "PowerShell.EXE"])
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects execution of "aspnet_compiler.exe" which can be abused to compile and execute C# code.
# Author: frack113
RuleId = a01b8329-5953-4f73-ae2d-aa01e1f35f00
RuleName = AspNetCompiler Execution
EventType = Process.Start
Tag = proc-start-aspnetcompiler-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "frack113"}
Query = (Process.Path like r"%C:\\Windows\\Microsoft.NET\\Framework\\%" or Process.Path like r"%C:\\Windows\\Microsoft.NET\\Framework64\\%") and Process.Path like r"%\\aspnet\_compiler.exe"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor
# Author: frack113
RuleId = 68654bf0-4412-43d5-bfe8-5eaa393cd939
RuleName = Potential DLL Sideloading Via JsSchHlp
EventType = Image.Load
Tag = potential-dll-sideloading-via-jsschhlp
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "frack113"}
Query = Image.Path like r"%\\JSESPR.dll" and not Image.Path like r"C:\\Program Files\\Common Files\\Justsystem\\JsSchHlp\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.
# Author: frack113
RuleId = 90dcf730-1b71-4ae7-9ffc-6fcf62bd0132
RuleName = Suspicious ZipExec Execution
EventType = Process.Start
Tag = proc-start-suspicious-zipexec-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "frack113"}
Query = Process.CommandLine like r"%/generic:Microsoft\_Windows\_Shell\_ZipFolder:filename=%" and Process.CommandLine like r"%.zip%" and Process.CommandLine like r"%/pass:%" and Process.CommandLine like r"%/user:%" or Process.CommandLine like r"%/delete%" and Process.CommandLine like r"%Microsoft\_Windows\_Shell\_ZipFolder:filename=%" and Process.CommandLine like r"%.zip%"


[ActivityMonitoringRule platform=Windows]
# Hunts known SVR-specific DLL names.
# Author: CISA
RuleId = e64c8ef3-9f98-40c8-b71e-96110991cb4c
RuleName = DLL Names Used By SVR For GraphicalProton Backdoor
EventType = Image.Load
Tag = dll-names-used-by-svr-for-graphicalproton-backdoor
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.002"], "author": "CISA"}
Query = Image.Path like r"%\\AclNumsInvertHost.dll" or Image.Path like r"%\\AddressResourcesSpec.dll" or Image.Path like r"%\\BlendMonitorStringBuild.dll" or Image.Path like r"%\\ChildPaletteConnected.dll" or Image.Path like r"%\\DeregisterSeekUsers.dll" or Image.Path like r"%\\HandleFrequencyAll.dll" or Image.Path like r"%\\HardSwapColor.dll" or Image.Path like r"%\\LengthInMemoryActivate.dll" or Image.Path like r"%\\ModeBitmapNumericAnimate.dll" or Image.Path like r"%\\ModeFolderSignMove.dll" or Image.Path like r"%\\ParametersNamesPopup.dll" or Image.Path like r"%\\PerformanceCaptionApi.dll" or Image.Path like r"%\\ScrollbarHandleGet.dll" or Image.Path like r"%\\UnregisterAncestorAppendAuto.dll" or Image.Path like r"%\\WowIcmpRemoveReg.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects a CodePage modification using the "mode.com" utility to Russian language.
# This behavior has been used by threat actors behind Dharma ransomware.
# Author: Joseliyo Sanchez, @Joseliyo_Jstnk
RuleId = 12fbff88-16b5-4b42-9754-cd001a789fb3
RuleName = CodePage Modification Via MODE.COM To Russian Language
EventType = Process.Start
Tag = proc-start-codepage-modification-via-mode.com-to-russian-language
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Joseliyo Sanchez, @Joseliyo_Jstnk"}
Query = (Process.Path like r"%\\mode.com" or Process.Name == "MODE.COM") and Process.CommandLine like r"% con %" and Process.CommandLine like r"% cp %" and Process.CommandLine like r"% select=%" and (Process.CommandLine like r"%=1251" or Process.CommandLine like r"%=866")


[ActivityMonitoringRule platform=Windows]
# Detect enable rdp feature to allow specific user to rdp connect on the targeted machine
# Author: frack113
RuleId = 37b437cf-3fc5-4c8e-9c94-1d7c9aff842b
RuleName = Allow RDP Remote Assistance Feature
EventType = Reg.Any
Tag = allow-rdp-remote-assistance-feature
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = Reg.TargetObject like r"%System\\CurrentControlSet\\Control\\Terminal Server\\fAllowToGetHelp" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects a copy command or a copy utility execution to or from an Admin share or remote
# Author: Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Nasreddine Bencherchali
RuleId = 855bc8b5-2ae8-402e-a9ed-b889e6df1900
RuleName = Copy From Or To Admin Share Or Sysvol Folder
EventType = Process.Start
Tag = proc-start-copy-from-or-to-admin-share-or-sysvol-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1039", "T1048", "T1021.002"], "author": "Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Nasreddine Bencherchali"}
Query = (Process.CommandLine like r"%\\\\%$%" or Process.CommandLine like r"%\\Sysvol\\%") and (Process.Path like r"%\\robocopy.exe" or Process.Path like r"%\\xcopy.exe" or Process.Name in ["robocopy.exe", "XCOPY.EXE"] or (Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and Process.CommandLine like r"%copy%" or (Process.Path like r"%\\powershell.exe%" or Process.Path like r"%\\pwsh.exe%" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%copy-item%" or Process.CommandLine like r"%copy %" or Process.CommandLine like r"%cpi %" or Process.CommandLine like r"% cp %" or Process.CommandLine like r"%move %" or Process.CommandLine like r"%move-item%" or Process.CommandLine like r"% mi %" or Process.CommandLine like r"% mv %"))


[ActivityMonitoringRule platform=Windows]
# Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only
# Author: Florian Roth (Nextron Systems)
RuleId = 34aa0252-6039-40ff-951f-939fd6ce47d8
RuleName = Suspicious Keyboard Layout Load
EventType = Reg.Any
Tag = suspicious-keyboard-layout-load
RiskScore = 50
Annotation = {"mitre_attack": ["T1588.002"], "author": "Florian Roth (Nextron Systems)"}
Query = (Reg.TargetObject like r"%\\Keyboard Layout\\Preload\\%" or Reg.TargetObject like r"%\\Keyboard Layout\\Substitutes\\%") and (Reg.Value.Data like r"%00000429%" or Reg.Value.Data like r"%00050429%" or Reg.Value.Data like r"%0000042a%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects nltest commands that can be used for information discovery
# Author: Craig Young, oscd.community, Georg Lauenstein
RuleId = 5cc90652-4cbd-4241-aa3b-4b462fa5a248
RuleName = Potential Recon Activity Via Nltest.EXE
EventType = Process.Start
Tag = proc-start-potential-recon-activity-via-nltest.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1016", "T1482"], "author": "Craig Young, oscd.community, Georg Lauenstein"}
Query = (Process.Path like r"%\\nltest.exe" or Process.Name == "nltestrk.exe") and (Process.CommandLine like r"%server%" and Process.CommandLine like r"%query%" or Process.CommandLine like r"%/user%" or Process.CommandLine like r"%all\_trusts%" or Process.CommandLine like r"%dclist:%" or Process.CommandLine like r"%dnsgetdc:%" or Process.CommandLine like r"%domain\_trusts%" or Process.CommandLine like r"%dsgetdc:%" or Process.CommandLine like r"%parentdomain%" or Process.CommandLine like r"%trusted\_domains%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "SolidPDFCreator.dll"
# Author: X__Junior (Nextron Systems)
RuleId = a2edbce1-95c8-4291-8676-0d45146862b3
RuleName = Potential SolidPDFCreator.DLL Sideloading
EventType = Image.Load
Tag = potential-solidpdfcreator.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\SolidPDFCreator.dll" and not (Process.Path like r"%\\SolidPDFCreator.exe" and (Image.Path like r"C:\\Program Files (x86)\\SolidDocuments\\SolidPDFCreator\\%" or Image.Path like r"C:\\Program Files\\SolidDocuments\\SolidPDFCreator\\%"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects a specific file being created in the recent folder of Office. These files have been seen being dropped during potential exploitations of CVE-2023-36884
# Author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
RuleId = 8023d3a2-dcdc-44da-8fa9-5c7906e55b38
RuleName = Potential CVE-2023-36884 Exploitation Dropped File
EventType = File.Create
Tag = potential-cve-2023-36884-exploitation-dropped-file
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)"}
Query = File.Path like r"C:\\Users\\%" and File.Path like r"%\\AppData\\Roaming\\Microsoft\\Office\\Recent\\%" and File.Path like r"%\\file001.url"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects default RemCom service filename which indicates RemCom service installation and execution
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7eff1a7f-dd45-4c20-877a-f21e342a7611
RuleName = RemCom Service File Creation
EventType = File.Create
Tag = remcom-service-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1569.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\RemComSvc.exe"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Ntvdm.exe allows the execution of 16-bit Windows applications on 32-bit Windows operating systems, as well as the execution of both 16-bit and 32-bit DOS applications
# Author: frack113
RuleId = 16905e21-66ee-42fe-b256-1318ada2d770
RuleName = Start of NT Virtual DOS Machine
EventType = Process.Start
Tag = proc-start-start-of-nt-virtual-dos-machine
RiskScore = 50
Annotation = {"author": "frack113"}
Query = Process.Path like r"%\\ntvdm.exe" or Process.Path like r"%\\csrstub.exe"


[ActivityMonitoringRule platform=Windows]
# Once established within a system or network, an adversary may use automated techniques for collecting internal data.
# Author: frack113
RuleId = f576a613-2392-4067-9d1a-9345fb58d8d1
RuleName = Automated Collection Command Prompt
EventType = Process.Start
Tag = proc-start-automated-collection-command-prompt
RiskScore = 50
Annotation = {"mitre_attack": ["T1119", "T1552.001"], "author": "frack113"}
Query = (Process.CommandLine like r"%.doc%" or Process.CommandLine like r"%.docx%" or Process.CommandLine like r"%.xls%" or Process.CommandLine like r"%.xlsx%" or Process.CommandLine like r"%.ppt%" or Process.CommandLine like r"%.pptx%" or Process.CommandLine like r"%.rtf%" or Process.CommandLine like r"%.pdf%" or Process.CommandLine like r"%.txt%") and (Process.CommandLine like r"%dir %" and Process.CommandLine like r"% /b %" and Process.CommandLine like r"% /s %" or Process.Name == "FINDSTR.EXE" and (Process.CommandLine like r"% /e %" or Process.CommandLine like r"% /si %"))


[ActivityMonitoringRule platform=Windows]
# Detects the start of a non built-in assistive technology applications via "Atbroker.EXE".
# Author: Mateusz Wydra, oscd.community
RuleId = f24bcaea-0cd1-11eb-adc1-0242ac120002
RuleName = Uncommon  Assistive Technology Applications Execution Via AtBroker.EXE
EventType = Process.Start
Tag = proc-start-uncommon-assistive-technology-applications-execution-via-atbroker.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Mateusz Wydra, oscd.community"}
Query = (Process.Path like r"%\\AtBroker.exe" or Process.Name == "AtBroker.exe") and Process.CommandLine like r"%start%" and not (Process.CommandLine like r"%animations%" or Process.CommandLine like r"%audiodescription%" or Process.CommandLine like r"%caretbrowsing%" or Process.CommandLine like r"%caretwidth%" or Process.CommandLine like r"%colorfiltering%" or Process.CommandLine like r"%cursorindicator%" or Process.CommandLine like r"%cursorscheme%" or Process.CommandLine like r"%filterkeys%" or Process.CommandLine like r"%focusborderheight%" or Process.CommandLine like r"%focusborderwidth%" or Process.CommandLine like r"%highcontrast%" or Process.CommandLine like r"%keyboardcues%" or Process.CommandLine like r"%keyboardpref%" or Process.CommandLine like r"%livecaptions%" or Process.CommandLine like r"%magnifierpane%" or Process.CommandLine like r"%messageduration%" or Process.CommandLine like r"%minimumhitradius%" or Process.CommandLine like r"%mousekeys%" or Process.CommandLine like r"%Narrator%" or Process.CommandLine like r"%osk%" or Process.CommandLine like r"%overlappedcontent%" or Process.CommandLine like r"%showsounds%" or Process.CommandLine like r"%soundsentry%" or Process.CommandLine like r"%speechreco%" or Process.CommandLine like r"%stickykeys%" or Process.CommandLine like r"%togglekeys%" or Process.CommandLine like r"%voiceaccess%" or Process.CommandLine like r"%windowarranging%" or Process.CommandLine like r"%windowtracking%" or Process.CommandLine like r"%windowtrackingtimeout%" or Process.CommandLine like r"%windowtrackingzorder%") and not Process.CommandLine like r"%Oracle\_JavaAccessBridge%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious scheduled task creations from a parent stored in a temporary folder
# Author: Florian Roth (Nextron Systems)
RuleId = 9494479d-d994-40bf-a8b1-eea890237021
RuleName = Suspicious Add Scheduled Task Parent
EventType = Process.Start
Tag = proc-start-suspicious-add-scheduled-task-parent
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"%/Create %" and (Parent.Path like r"%\\AppData\\Local\\%" or Parent.Path like r"%\\AppData\\Roaming\\%" or Parent.Path like r"%\\Temporary Internet%" or Parent.Path like r"%\\Users\\Public\\%") and not (Process.CommandLine like r"%update\_task.xml%" or Process.CommandLine like r"%unattended.ini%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the usage of curl.exe, KeyScramblerLogon, or other non-standard/suspicious processes used to create Autoit3.exe.
# This activity has been associated with DarkGate malware, which uses Autoit3.exe to execute shellcode that performs
# process injection and connects to the DarkGate command-and-control server. Curl, KeyScramblerLogon, and these other
# processes consitute non-standard and suspicious ways to retrieve the Autoit3 executable.
# Author: Micah Babinski
RuleId = 1a433e1d-03d2-47a6-8063-ece992cf4e73
RuleName = DarkGate - Autoit3.EXE File Creation By Uncommon Process
EventType = File.Create
Tag = darkgate-autoit3.exe-file-creation-by-uncommon-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1105", "T1059"], "author": "Micah Babinski"}
Query = (Process.Path like r"%\\Autoit3.exe" or Process.Path like r"%\\curl.exe" or Process.Path like r"%\\ExtExport.exe" or Process.Path like r"%\\KeyScramblerLogon.exe" or Process.Path like r"%\\wmprph.exe") and File.Path like r"%\\Autoit3.exe"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "type" command to download/upload data from WebDAV server
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = aa0b3a82-eacc-4ec3-9150-b5a9a3e3f82f
RuleName = Potential Download/Upload Activity Using Type Command
EventType = Process.Start
Tag = proc-start-potential-download/upload-activity-using-type-command
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%type %" and Process.CommandLine like r"% > \\\\%" or Process.CommandLine like r"%type \\\\%" and Process.CommandLine like r"% > %"


[ActivityMonitoringRule platform=Windows]
# Detects execution of php using the "-r" flag. This is could be used as a way to launch a reverse shell or execute live php code.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d81871ef-5738-47ab-9797-7a9c90cd4bfb
RuleName = Php Inline Command Execution
EventType = Process.Start
Tag = proc-start-php-inline-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\php.exe" or Process.Name == "php.exe") and Process.CommandLine like r"% -r%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious children spawned via the Windows Terminal application which could be a sign of persistence via WindowsTerminal (see references section)
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 8de89e52-f6e1-4b5b-afd1-41ecfa300d48
RuleName = Suspicious WindowsTerminal Child Processes
EventType = Process.Start
Tag = proc-start-suspicious-windowsterminal-child-processes
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Parent.Path like r"%\\WindowsTerminal.exe" or Parent.Path like r"%\\wt.exe") and (Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\csc.exe" or Process.Path like r"%C:\\Users\\Public\\%" or Process.Path like r"%\\Downloads\\%" or Process.Path like r"%\\Desktop\\%" or Process.Path like r"%\\AppData\\Local\\Temp\\%" or Process.Path like r"%\\Windows\\TEMP\\%" or Process.CommandLine like r"% iex %" or Process.CommandLine like r"% icm%" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%Import-Module %" or Process.CommandLine like r"%ipmo %" or Process.CommandLine like r"%DownloadString(%" or Process.CommandLine like r"% /c %" or Process.CommandLine like r"% /k %" or Process.CommandLine like r"% /r %") and not (Process.CommandLine like r"%Import-Module%" and Process.CommandLine like r"%Microsoft.VisualStudio.DevShell.dll%" and Process.CommandLine like r"%Enter-VsDevShell%" or Process.CommandLine like r"%\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal\_%" and Process.CommandLine like r"%\\LocalState\\settings.json%" or Process.CommandLine like r"%C:\\Program Files\\Microsoft Visual Studio\\%" and Process.CommandLine like r"%\\Common7\\Tools\\VsDevCmd.bat%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of the SharpLDAPmonitor. Which can monitor the creation, deletion and changes to LDAP objects.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9f8fc146-1d1a-4dbf-b8fd-dfae15e08541
RuleName = HackTool - SharpLDAPmonitor Execution
EventType = Process.Start
Tag = proc-start-hacktool-sharpldapmonitor-execution
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\SharpLDAPmonitor.exe" or Process.Name == "SharpLDAPmonitor.exe" or Process.CommandLine like r"%/user:%" and Process.CommandLine like r"%/pass:%" and Process.CommandLine like r"%/dcip:%"


[ActivityMonitoringRule platform=Windows]
# Detects potential malicious and unauthorized usage of bcdedit.exe
# Author: @neu5ron
RuleId = c9fbe8e9-119d-40a6-9b59-dd58a5d84429
RuleName = Potential Ransomware or Unauthorized MBR Tampering Via Bcdedit.EXE
EventType = Process.Start
Tag = proc-start-potential-ransomware-or-unauthorized-mbr-tampering-via-bcdedit.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1070", "T1542.003"], "author": "@neu5ron"}
Query = (Process.Path like r"%\\bcdedit.exe" or Process.Name == "bcdedit.exe") and (Process.CommandLine like r"%delete%" or Process.CommandLine like r"%deletevalue%" or Process.CommandLine like r"%import%" or Process.CommandLine like r"%safeboot%" or Process.CommandLine like r"%network%")


[ActivityMonitoringRule platform=Windows]
# BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished.
# When the job runs on the system the command specified in the BITS job will be executed.
# This can be abused by actors to create a backdoor within the system and for persistence.
# It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded.
# Author: Sreeman
RuleId = b9cbbc17-d00d-4e3d-a827-b06d03d2380d
RuleName = Monitoring For Persistence Via BITS
EventType = Process.Start
Tag = proc-start-monitoring-for-persistence-via-bits
RiskScore = 50
Annotation = {"mitre_attack": ["T1197"], "author": "Sreeman"}
Query = (Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"%/SetNotifyCmdLine%" and (Process.CommandLine like r"%\%COMSPEC\%%" or Process.CommandLine like r"%cmd.exe%" or Process.CommandLine like r"%regsvr32.exe%") or Process.CommandLine like r"%/Addfile%" and (Process.CommandLine like r"%http:%" or Process.CommandLine like r"%https:%" or Process.CommandLine like r"%ftp:%" or Process.CommandLine like r"%ftps:%"))


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "wwlib.dll"
# Author: X__Junior (Nextron Systems)
RuleId = e2e01011-5910-4267-9c3b-4149ed5479cf
RuleName = Potential WWlib.DLL Sideloading
EventType = Image.Load
Tag = potential-wwlib.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\wwlib.dll" and not ((Process.Path like r"C:\\Program Files (x86)\\Microsoft Office\\%" or Process.Path like r"C:\\Program Files\\Microsoft Office\\%") and Process.Path like r"%\\winword.exe" and (Image.Path like r"C:\\Program Files (x86)\\Microsoft Office\\%" or Image.Path like r"C:\\Program Files\\Microsoft Office\\%"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects Obfuscated Powershell via COMPRESS OBFUSCATION
# Author: Timur Zinniatullin, oscd.community
RuleId = 7eedcc9d-9fdb-4d94-9c54-474e8affc0c7
RuleName = Invoke-Obfuscation COMPRESS OBFUSCATION
EventType = Process.Start
Tag = proc-start-invoke-obfuscation-compress-obfuscation
RiskScore = 50
Annotation = {"mitre_attack": ["T1027", "T1059.001"], "author": "Timur Zinniatullin, oscd.community"}
Query = Process.CommandLine like r"%new-object%" and Process.CommandLine like r"%text.encoding]::ascii%" and (Process.CommandLine like r"%system.io.compression.deflatestream%" or Process.CommandLine like r"%system.io.streamreader%" or Process.CommandLine like r"%readtoend(%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of certutil with either the "decode" or "decodehex" flags to decode base64 or hex encoded files. This can be abused by attackers to decode an encoded payload before execution
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community
RuleId = cc9cbe82-7bc0-4ef5-bc23-bbfb83947be7
RuleName = File Decoded From Base64/Hex Via Certutil.EXE
EventType = Process.Start
Tag = proc-start-file-decoded-from-base64/hex-via-certutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1027"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community"}
Query = (Process.Path like r"%\\certutil.exe" or Process.Name == "CertUtil.exe") and (Process.CommandLine like r"%-decode %" or Process.CommandLine like r"%/decode %" or Process.CommandLine like r"%-decodehex %" or Process.CommandLine like r"%/decodehex %")


[ActivityMonitoringRule platform=Windows]
# Detects PowerShell core DLL being loaded by an Office Product
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = bb2ba6fb-95d4-4a25-89fc-30bb736c021a
RuleName = PowerShell Core DLL Loaded Via Office Application
EventType = Image.Load
Tag = powershell-core-dll-loaded-via-office-application
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\excel.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\onenote.exe" or Process.Path like r"%\\onenoteim.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and (Image.Path like r"%\\System.Management.Automation.Dll%" or Image.Path like r"%\\System.Management.Automation.ni.Dll%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious ways to download files or content using PowerShell
# Author: Florian Roth (Nextron Systems)
RuleId = 6e897651-f157-4d8f-aaeb-df8151488385
RuleName = PowerShell Web Download
EventType = Process.Start
Tag = proc-start-powershell-web-download
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1105"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.CommandLine like r"%.DownloadString(%" or Process.CommandLine like r"%.DownloadFile(%" or Process.CommandLine like r"%Invoke-WebRequest %" or Process.CommandLine like r"%iwr %"


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "CCleanerReactivator.dll"
# Author: X__Junior
RuleId = 3735d5ac-d770-4da0-99ff-156b180bc600
RuleName = Potential CCleanerReactivator.DLL Sideloading
EventType = Image.Load
Tag = potential-ccleanerreactivator.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior"}
Query = Image.Path like r"%\\CCleanerReactivator.dll" and not ((Process.Path like r"C:\\Program Files\\CCleaner\\%" or Process.Path like r"C:\\Program Files (x86)\\CCleaner\\%") and Process.Path like r"%\\CCleanerReactivator.exe")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects Access to Domain Group Policies stored in SYSVOL
# Author: Markus Neis, Jonhnathan Ribeiro, oscd.community
RuleId = 05f3c945-dcc8-4393-9f3d-af65077a8f86
RuleName = Suspicious SYSVOL Domain Group Policy Access
EventType = Process.Start
Tag = proc-start-suspicious-sysvol-domain-group-policy-access
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.006"], "author": "Markus Neis, Jonhnathan Ribeiro, oscd.community"}
Query = Process.CommandLine like r"%\\SYSVOL\\%" and Process.CommandLine like r"%\\policies\\%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution utitilies often found in Visual Studio tools that hardcode the call to the binary "link.exe". They can be abused to sideload any binary with the same name
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 6e968eb1-5f05-4dac-94e9-fd0c5cb49fd6
RuleName = Sideloading Link.EXE
EventType = Process.Start
Tag = proc-start-sideloading-link.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\link.exe" and Process.CommandLine like r"%LINK /%" and not ((Parent.Path like r"C:\\Program Files\\Microsoft Visual Studio\\%" or Parent.Path like r"C:\\Program Files (x86)\\Microsoft Visual Studio\\%") and Parent.Path like r"%\\VC\\Tools\\MSVC\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Upload file, credentials or data exfiltration with Binary part of Windows Defender
# Author: frack113
RuleId = 1f0f6176-6482-4027-b151-00071af39d7e
RuleName = Suspicious ConfigSecurityPolicy Execution
EventType = Process.Start
Tag = proc-start-suspicious-configsecuritypolicy-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1567"], "author": "frack113"}
Query = (Process.CommandLine like r"%ConfigSecurityPolicy.exe%" or Process.Path like r"%\\ConfigSecurityPolicy.exe" or Process.Name == "ConfigSecurityPolicy.exe") and (Process.CommandLine like r"%https://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%ftp://%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "CCleanerDU.dll"
# Author: X__Junior (Nextron Systems)
RuleId = 1fbc0671-5596-4e17-8682-f020a0b995dc
RuleName = Potential CCleanerDU.DLL Sideloading
EventType = Image.Load
Tag = potential-ccleanerdu.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\CCleanerDU.dll" and not ((Process.Path like r"C:\\Program Files\\CCleaner\\%" or Process.Path like r"C:\\Program Files (x86)\\CCleaner\\%") and (Process.Path like r"%\\CCleaner.exe" or Process.Path like r"%\\CCleaner64.exe"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious execution of "PDQDeployRunner" which is part of the PDQDeploy service stack that is responsible for executing commands and packages on a remote machines
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 12b8e9f5-96b2-41e1-9a42-8c6779a5c184
RuleName = Suspicious Execution Of PDQDeployRunner
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-pdqdeployrunner
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%PDQDeployRunner-%" and (Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\msiexec.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\csc.exe" or Process.Path like r"%\\dllhost.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\scriptrunner.exe" or Process.Path like r"%\\bash.exe" or Process.Path like r"%\\wsl.exe" or Process.Path like r"%C:\\Users\\Public\\%" or Process.Path like r"%C:\\ProgramData\\%" or Process.Path like r"%C:\\Windows\\TEMP\\%" or Process.Path like r"%\\AppData\\Local\\Temp%" or Process.CommandLine like r"%iex %" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%DownloadString%" or Process.CommandLine like r"%http%" or Process.CommandLine like r"% -enc %" or Process.CommandLine like r"% -encodedcommand %" or Process.CommandLine like r"%FromBase64String%" or Process.CommandLine like r"% -decode %" or Process.CommandLine like r"% -w hidden%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "query.exe" a system binary to exfil information such as "sessions" and "processes" for later use
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 53ef0cef-fa24-4f25-a34a-6c72dfa2e6e2
RuleName = Query Usage To Exfil Data
EventType = Process.Start
Tag = proc-start-query-usage-to-exfil-data
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%:\\Windows\\System32\\query.exe" and (Process.CommandLine like r"%session >%" or Process.CommandLine like r"%process >%")


[ActivityMonitoringRule platform=Windows]
# Detect the use of "sc.exe" to change the startup type of a service to "disabled" or "demand"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 85c312b7-f44d-4a51-a024-d671c40b49fc
RuleName = Service StartupType Change Via Sc.EXE
EventType = Process.Start
Tag = proc-start-service-startuptype-change-via-sc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\sc.exe" or Process.Name == "sc.exe") and Process.CommandLine like r"% config %" and Process.CommandLine like r"%start%" and (Process.CommandLine like r"%disabled%" or Process.CommandLine like r"%demand%")


[ActivityMonitoringRule platform=Windows]
# Detects the addition of new root, CA or AuthRoot certificates to the Windows registry
# Author: frack113
RuleId = d223b46b-5621-4037-88fe-fda32eead684
RuleName = New Root or CA or AuthRoot Certificate to Store
EventType = Reg.Any
Tag = new-root-or-ca-or-authroot-certificate-to-store
RiskScore = 50
Annotation = {"mitre_attack": ["T1490"], "author": "frack113"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\SystemCertificates\\CA\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\CA\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\CA\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\AuthRoot\\Certificates\\%") and Reg.TargetObject like r"%\\Blob" and Reg.Value.Data == "Binary Data"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects when a user performs data exfiltration by using DataSvcUtil.exe
# Author: Ialle Teixeira @teixeira0xfffff, Austin Songer @austinsonger
RuleId = e290b10b-1023-4452-a4a9-eb31a9013b3a
RuleName = LOLBAS Data Exfiltration by DataSvcUtil.exe
EventType = Process.Start
Tag = proc-start-lolbas-data-exfiltration-by-datasvcutil.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1567"], "author": "Ialle Teixeira @teixeira0xfffff, Austin Songer @austinsonger"}
Query = (Process.CommandLine like r"%/in:%" or Process.CommandLine like r"%/out:%" or Process.CommandLine like r"%/uri:%") and (Process.Path like r"%\\DataSvcUtil.exe" or Process.Name == "DataSvcUtil.exe")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "wmic" with the "process" flag, which adversary might use to list processes running on the compromised host or list installed software hotfixes and patches.
# Author: frack113
RuleId = 221b251a-357a-49a9-920a-271802777cc0
RuleName = Process Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-process-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "frack113"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%process%" and not (Process.CommandLine like r"%call%" and Process.CommandLine like r"%create%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a file with the ".dmp"/".hdmp" extension by a shell or scripting application such as "cmd", "powershell", etc. Often created by software during a crash. Memory dumps can sometimes contain sensitive information such as credentials. It's best to determine the source of the crash.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = aba15bdd-657f-422a-bab3-ac2d2a0d6f1c
RuleName = Potentially Suspicious DMP/HDMP File Creation
EventType = File.Create
Tag = potentially-suspicious-dmp/hdmp-file-creation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wscript.exe") and (File.Path like r"%.dmp" or File.Path like r"%.dump" or File.Path like r"%.hdmp")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects changes to the ClickOnce trust prompt registry key in order to enable an installation from different locations such as the Internet.
# Author: @SerkinValery, Nasreddine Bencherchali (Nextron Systems)
RuleId = ac9159cc-c364-4304-8f0a-d63fc1a0aabb
RuleName = ClickOnce Trust Prompt Tampering
EventType = Reg.Any
Tag = clickonce-trust-prompt-tampering
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "@SerkinValery, Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\MICROSOFT\\.NETFramework\\Security\\TrustManager\\PromptingLevel\\%" and (Reg.TargetObject like r"%\\Internet" or Reg.TargetObject like r"%\\LocalIntranet" or Reg.TargetObject like r"%\\MyComputer" or Reg.TargetObject like r"%\\TrustedSites" or Reg.TargetObject like r"%\\UntrustedSites") and Reg.Value.Data == "Enabled"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects when a user downloads a file by using CertOC.exe
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 70ad0861-d1fe-491c-a45f-fa48148a300d
RuleName = File Download via CertOC.EXE
EventType = Process.Start
Tag = proc-start-file-download-via-certoc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\certoc.exe" or Process.Name == "CertOC.exe") and Process.CommandLine like r"%-GetCACAPS%" and Process.CommandLine like r"%http%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of python using the "-c" flag. This is could be used as a way to launch a reverse shell or execute live python code.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 899133d5-4d7c-4a7f-94ee-27355c879d90
RuleName = Python Inline Command Execution
EventType = Process.Start
Tag = proc-start-python-inline-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "python.exe" or Process.Path like r"%python.exe" or Process.Path like r"%python3.exe" or Process.Path like r"%python2.exe") and Process.CommandLine like r"% -c%" and not (Parent.Path like r"C:\\Program Files\\Python%" and Parent.Path like r"%\\python.exe" and Parent.CommandLine like r"%-E -s -m ensurepip -U --default-pip%" or Parent.Path like r"%\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects launch of the PSEXESVC service, which means that this system was the target of a psexec remote execution
# Author: Thomas Patzke, Romaissa Adjailia, Florian Roth (Nextron Systems)
RuleId = fdfcbd78-48f1-4a4b-90ac-d82241e368c5
RuleName = PsExec Service Execution
EventType = Process.Start
Tag = proc-start-psexec-service-execution
RiskScore = 50
Annotation = {"author": "Thomas Patzke, Romaissa Adjailia, Florian Roth (Nextron Systems)"}
Query = Process.Path == "C:\\Windows\\PSEXESVC.exe" or Process.Name == "psexesvc.exe"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a new PowerShell module in the first folder of the module directory structure "\WindowsPowerShell\Modules\malware\malware.psm1". This is somewhat an uncommon practice as legitimate modules often includes a version folder.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = e8a52bbd-bced-459f-bd93-64db45ce7657
RuleName = Potential Suspicious PowerShell Module File Created
EventType = File.Create
Tag = potential-suspicious-powershell-module-file-created
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\WindowsPowerShell\\Modules\\%\\.ps" or File.Path like r"%\\WindowsPowerShell\\Modules\\%\\.dll"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious file based on their extension being created in "C:\PerfLogs\". Note that this directory mostly contains ".etl" files
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = bbb7e38c-0b41-4a11-b306-d2a457b7ac2b
RuleName = Suspicious File Created In PerfLogs
EventType = File.Create
Tag = suspicious-file-created-in-perflogs
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"C:\\PerfLogs\\%" and (File.Path like r"%.7z" or File.Path like r"%.bat" or File.Path like r"%.bin" or File.Path like r"%.chm" or File.Path like r"%.dll" or File.Path like r"%.exe" or File.Path like r"%.hta" or File.Path like r"%.lnk" or File.Path like r"%.ps1" or File.Path like r"%.psm1" or File.Path like r"%.py" or File.Path like r"%.scr" or File.Path like r"%.sys" or File.Path like r"%.vbe" or File.Path like r"%.vbs" or File.Path like r"%.zip")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of file by the "node.exe" process in the ".vscode-server" directory. Could be a sign of remote file creation via VsCode tunnel feature
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 56e05d41-ce99-4ecd-912d-93f019ee0b71
RuleName = Visual Studio Code Tunnel Remote File Creation
EventType = File.Create
Tag = visual-studio-code-tunnel-remote-file-creation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\servers\\Stable-%" and Process.Path like r"%\\server\\node.exe" and File.Path like r"%\\.vscode-server\\data\\User\\History\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = ad1f4bb9-8dfb-4765-adb6-2a7cfb6c0f94
RuleName = Suspicious WSMAN Provider Image Loads
EventType = Image.Load
Tag = suspicious-wsman-provider-image-loads
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1021.003"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = (Image.Path like r"%\\WsmSvc.dll" or Image.Path like r"%\\WsmAuto.dll" or Image.Path like r"%\\Microsoft.WSMan.Management.ni.dll" or Process.Name in ["WsmSvc.dll", "WSMANAUTOMATION.DLL", "Microsoft.WSMan.Management.dll"] or Process.Path like r"%\\svchost.exe" and Process.Name == "WsmWmiPl.dll") and not (Process.Path like r"%\\powershell.exe" or Process.Path like r"%C:\\Windows\\System32\\sdiagnhost.exe" or Process.Path like r"%C:\\Windows\\System32\\services.exe" or Process.CommandLine like r"%svchost.exe -k netsvcs -p -s BITS%" or Process.CommandLine like r"%svchost.exe -k GraphicsPerfSvcGroup -s GraphicsPerfSvc%" or Process.CommandLine like r"%svchost.exe -k NetworkService -p -s Wecsvc%" or Process.CommandLine like r"%svchost.exe -k netsvcs%" or (Process.Path like r"C:\\Windows\\Microsoft.NET\\Framework64\\v%" or Process.Path like r"C:\\Windows\\Microsoft.NET\\Framework\\v%") and Process.Path like r"%\\mscorsvw.exe" or Process.Path in ["C:\\Windows\\System32\\Configure-SMRemoting.exe", "C:\\Windows\\System32\\ServerManager.exe"] or Process.Path like r"C:\\Windows\\Temp\\asgard2-agent\\%" or Process.Path like r"C:\\Program Files\\Citrix\\%" or Process.Path like r"%\\powershell\_ise.exe" or Process.Path like r"C:\\$WINDOWS.~BT\\Sources\\%") and not (Process.Path like r"%\\svchost.exe" and isnull(Process.CommandLine))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "odbcconf" with "REGSVR" in order to register a new DLL (equivalent to running regsvr32). Attackers abuse this to install and run malicious DLLs.
# Author: Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 9f0a8bf3-a65b-440a-8c1e-5cb1547c8e70
RuleName = New DLL Registered Via Odbcconf.EXE
EventType = Process.Start
Tag = proc-start-new-dll-registered-via-odbcconf.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.008"], "author": "Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\odbcconf.exe" or Process.Name == "odbcconf.exe") and Process.CommandLine like r"%REGSVR %" and Process.CommandLine like r"%.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects changes to the PowerShell execution policy in order to bypass signing requirements for script execution
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = fad91067-08c5-4d1a-8d8c-d96a21b37814
RuleName = Potential PowerShell Execution Policy Tampering
EventType = Reg.Any
Tag = potential-powershell-execution-policy-tampering
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Reg.TargetObject like r"%\\ShellIds\\Microsoft.PowerShell\\ExecutionPolicy" or Reg.TargetObject like r"%\\Policies\\Microsoft\\Windows\\PowerShell\\ExecutionPolicy") and (Reg.Value.Data like r"%Bypass%" or Reg.Value.Data like r"%Unrestricted%") and not (Process.Path like r"%:\\Windows\\System32\\%" or Process.Path like r"%:\\Windows\\SysWOW64\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects DLL sideloading of "dbghelp.dll"
# Author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
RuleId = 6414b5cd-b19d-447e-bb5e-9f03940b5784
RuleName = Potential DLL Sideloading Of DBGHELP.DLL
EventType = Image.Load
Tag = potential-dll-sideloading-of-dbghelp.dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)"}
Query = Image.Path like r"%\\dbghelp.dll" and not (Image.Path like r"C:\\Program Files (x86)\\%" or Image.Path like r"C:\\Program Files\\%" or Image.Path like r"C:\\Windows\\SoftwareDistribution\\%" or Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SystemTemp\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Windows\\WinSxS\\%") and not (Image.Path like r"%\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp.dll" or Image.Path like r"%\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\i386\\dbghelp.dll" or Image.Path like r"%\\Epic Games\\Launcher\\Engine\\Binaries\\ThirdParty\\DbgHelp\\dbghelp.dll" or Image.Path like r"%\\Epic Games\\MagicLegends\\x86\\dbghelp.dll")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) from a non-standard directory.
# Author: Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)
RuleId = 6120ac2a-a34b-42c0-a9bd-1fb9f459f348
RuleName = AddinUtil.EXE Execution From Uncommon Directory
EventType = Process.Start
Tag = proc-start-addinutil.exe-execution-from-uncommon-directory
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)"}
Query = (Process.Path like r"%\\addinutil.exe" or Process.Name == "AddInUtil.exe") and not (Process.Path like r"%:\\Windows\\Microsoft.NET\\Framework\\%" or Process.Path like r"%:\\Windows\\Microsoft.NET\\Framework64\\%" or Process.Path like r"%:\\Windows\\WinSxS\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of WMIC with the "csproduct" which is used to obtain information such as hardware models and vendor information
# Author: Florian Roth (Nextron Systems)
RuleId = 3e3ceccd-6c06-48b8-b5ff-ab1d25db8c1d
RuleName = Hardware Model Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-hardware-model-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%csproduct%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of regsvr32 where the DLL is located in a potentially suspicious location.
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 9525dc73-0327-438c-8c04-13c0e037e9da
RuleName = Regsvr32 Execution From Potential Suspicious Location
EventType = Process.Start
Tag = proc-start-regsvr32-execution-from-potential-suspicious-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.010"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\regsvr32.exe" or Process.Name == "REGSVR32.EXE") and (Process.CommandLine like r"%:\\ProgramData\\%" or Process.CommandLine like r"%:\\Temp\\%" or Process.CommandLine like r"%:\\Users\\Public\\%" or Process.CommandLine like r"%:\\Windows\\Temp\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%\\AppData\\Roaming\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)
# Author: frack113
RuleId = 3d0ed417-3d94-4963-a562-4a92c940656a
RuleName = Creation of a Diagcab
EventType = File.Create
Tag = creation-of-a-diagcab
RiskScore = 50
Annotation = {"author": "frack113"}
Query = File.Path like r"%.diagcab"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Uninstall an application with wmic
# Author: frack113
RuleId = b53317a0-8acf-4fd1-8de8-a5401e776b96
RuleName = Application Removed Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-application-removed-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "frack113"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%call%" or Process.CommandLine like r"%uninstall%")


[ActivityMonitoringRule platform=Windows]
# Detects whether the image specified in a process creation event doesn't refer to an ".exe" (or other known executable extension) file. This can be caused by process ghosting or other unorthodox methods to start a process.
# This rule might require some initial baselining to align with some third party tooling in the user environment.
# Author: Max Altgelt (Nextron Systems)
RuleId = c09dad97-1c78-4f71-b127-7edb2b8e491a
RuleName = Execution of Suspicious File Type Extension
EventType = Process.Start
Tag = proc-start-execution-of-suspicious-file-type-extension
RiskScore = 50
Annotation = {"author": "Max Altgelt (Nextron Systems)"}
Query = not (Process.Path like r"%.bin" or Process.Path like r"%.cgi" or Process.Path like r"%.com" or Process.Path like r"%.exe" or Process.Path like r"%.scr" or Process.Path like r"%.tmp") and not (Process.Path in ["System", "Registry", "MemCompression", "vmmem"] or Process.Path like r"%:\\Windows\\Installer\\MSI%" or Process.Path like r"%:\\Windows\\System32\\DriverStore\\FileRepository\\%" or Process.Path like r"%:\\Config.Msi\\%" and (Process.Path like r"%.rbf" or Process.Path like r"%.rbs") or Parent.Path like r"%:\\Windows\\Temp\\%" or Process.Path like r"%:\\Windows\\Temp\\%" or Process.Path like r"%:\\$Extend\\$Deleted\\%" or Process.Path in ["-", ""] or isnull(Process.Path)) and not (Parent.Path like r"%:\\ProgramData\\Avira\\%" or Process.Path like r"%NVIDIA\\NvBackend\\%" and Process.Path like r"%.dat" or (Process.Path like r"%:\\Program Files (x86)\\WINPAKPRO\\%" or Process.Path like r"%:\\Program Files\\WINPAKPRO\\%") and Process.Path like r"%.ngn" or Process.Path like r"%:\\Program Files (x86)\\MyQ\\Server\\pcltool.dll" or Process.Path like r"%:\\Program Files\\MyQ\\Server\\pcltool.dll" or Process.Path like r"%\\AppData\\Local\\Packages\\%" and Process.Path like r"%\\LocalState\\rootfs\\%" or Process.Path like r"%\\LZMA\_EXE" or Process.Path like r"%:\\Program Files\\Mozilla Firefox\\%" or Parent.Path == "C:\\Windows\\System32\\services.exe" and Process.Path like r"%com.docker.service")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects file access requests to the the Windows Data Protection API Master keys by an uncommon application.
# This can be a sign of credential stealing. Example case would be usage of mimikatz "dpapi::masterkey" function
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 46612ae6-86be-4802-bc07-39b59feb1309
RuleName = Access To Windows DPAPI Master Keys By Uncommon Application
EventType = File.Read
Tag = access-to-windows-dpapi-master-keys-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1555.004"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (File.Path like r"%\\Microsoft\\Protect\\S-1-5-18\\%" or File.Path like r"%\\Microsoft\\Protect\\S-1-5-21-%") and not (Process.Path like r"%:\\Program Files\\%" or Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\Windows\\system32\\%" or Process.Path like r"%:\\Windows\\SysWOW64\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects when the DLL export function 'DllRegisterServer' is called in the commandline by Rundll32 explicitly where the DLL is located in a non-standard path.
# Author: Andreas Braathen (mnemonic.io)
RuleId = d81a9fc6-55db-4461-b962-0e78fea5b0ad
RuleName = Rundll32.EXE Calling DllRegisterServer Export Function Explicitly
EventType = Process.Start
Tag = proc-start-rundll32.exe-calling-dllregisterserver-export-function-explicitly
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Andreas Braathen (mnemonic.io)"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%DllRegisterServer%" and not (Process.CommandLine like r"%:\\Program Files (x86)%" or Process.CommandLine like r"%:\\Program Files\\%" or Process.CommandLine like r"%:\\Windows\\System32\\%" or Process.CommandLine like r"%:\\Windows\\SysWOW64\\%")


[ActivityMonitoringRule platform=Windows]
# Detects file access requests to potentially sensitive files hosted on the Windows Sysvol share.
# Author: frack113
RuleId = d51694fe-484a-46ac-92d6-969e76d60d10
RuleName = Access To Potentially Sensitive Sysvol Files By Uncommon Application
EventType = File.Read
Tag = access-to-potentially-sensitive-sysvol-files-by-uncommon-application
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.006"], "author": "frack113"}
Query = File.Path like r"\\%" and File.Path like r"%\\sysvol\\%" and File.Path like r"%\\Policies\\%" and (File.Path like r"%audit.csv" or File.Path like r"%Files.xml" or File.Path like r"%GptTmpl.inf" or File.Path like r"%groups.xml" or File.Path like r"%Registry.pol" or File.Path like r"%Registry.xml" or File.Path like r"%scheduledtasks.xml" or File.Path like r"%scripts.ini" or File.Path like r"%services.xml") and not (Process.Path like r":\\Program Files (x86)\\%" or Process.Path like r":\\Program Files\\%" or Process.Path like r":\\Windows\\explorer.exe%" or Process.Path like r":\\Windows\\system32\\%" or Process.Path like r":\\Windows\\SysWOW64\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the use of Setres.exe to set the screen resolution and then potentially launch a file named "choice" (with any executable extension such as ".cmd" or ".exe") from the current execution path
# Author: @gott_cyber
RuleId = 835e75bf-4bfd-47a4-b8a6-b766cac8bcb7
RuleName = Use of Setres.exe
EventType = Process.Start
Tag = proc-start-use-of-setres.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "@gott_cyber"}
Query = Parent.Path like r"%\\setres.exe" and Process.Path like r"%\\choice"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects regsvr32 execution to download/install/register new DLLs that are hosted on Web or FTP servers.
# Author: Florian Roth (Nextron Systems)
RuleId = 867356ee-9352-41c9-a8f2-1be690d78216
RuleName = Potentially Suspicious Regsvr32 HTTP/FTP Pattern
EventType = Process.Start
Tag = proc-start-potentially-suspicious-regsvr32-http/ftp-pattern
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.010"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\regsvr32.exe" or Process.Name == "REGSVR32.EXE") and (Process.CommandLine like r"% /i%" or Process.CommandLine like r"% -i%") and (Process.CommandLine like r"%ftp%" or Process.CommandLine like r"%http%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a schtasks that potentially executes a payload stored in the Windows Registry using PowerShell.
# Author: X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 86588b36-c6d3-465f-9cee-8f9093e07798
RuleName = Scheduled Task Executing Payload from Registry
EventType = Process.Start
Tag = proc-start-scheduled-task-executing-payload-from-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1053.005", "T1059.001"], "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\schtasks.exe" or Process.Name == "schtasks.exe") and Process.CommandLine like r"%/Create%" and (Process.CommandLine like r"%Get-ItemProperty%" or Process.CommandLine like r"% gp %") and (Process.CommandLine like r"%HKCU:%" or Process.CommandLine like r"%HKLM:%" or Process.CommandLine like r"%registry::%" or Process.CommandLine like r"%HKEY\_%") and not (Process.CommandLine like r"%FromBase64String%" or Process.CommandLine like r"%encodedcommand%")


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "Add-WindowsCapability" cmdlet to add Windows capabilities. Notable capabilities could be "OpenSSH" and others.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b36d01a3-ddaf-4804-be18-18a6247adfcd
RuleName = Add Windows Capability Via PowerShell Cmdlet
EventType = Process.Start
Tag = proc-start-add-windows-capability-via-powershell-cmdlet
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%Add-WindowsCapability%" and Process.CommandLine like r"%OpenSSH.%"


[ActivityMonitoringRule platform=Windows]
# Use of the commandline to shutdown or reboot windows
# Author: frack113
RuleId = 34ebb878-1b15-4895-b352-ca2eeb99b274
RuleName = Suspicious Execution of Shutdown
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-shutdown
RiskScore = 50
Annotation = {"mitre_attack": ["T1529"], "author": "frack113"}
Query = Process.Path like r"%\\shutdown.exe" and (Process.CommandLine like r"%/r %" or Process.CommandLine like r"%/s %")


[ActivityMonitoringRule platform=Windows]
# Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.
# Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.
# Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services
# Author: frack113
RuleId = 9b0b7ac3-6223-47aa-a3fd-e8f211e637db
RuleName = Changing Existing Service ImagePath Value Via Reg.EXE
EventType = Process.Start
Tag = proc-start-changing-existing-service-imagepath-value-via-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.011"], "author": "frack113"}
Query = Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%SYSTEM\\CurrentControlSet\\Services\\%" and Process.CommandLine like r"% ImagePath %" and (Process.CommandLine like r"% -d %" or Process.CommandLine like r"% /d %")


[ActivityMonitoringRule platform=Windows]
# Detects usage of the Get-ADUser cmdlet to collect user information and output it to a file
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 1114e048-b69c-4f41-bc20-657245ae6e3f
RuleName = User Discovery And Export Via Get-ADUser Cmdlet
EventType = Process.Start
Tag = proc-start-user-discovery-and-export-via-get-aduser-cmdlet
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%Get-ADUser %" and Process.CommandLine like r"% -Filter *%" and (Process.CommandLine like r"% > %" or Process.CommandLine like r"% | Select %" or Process.CommandLine like r"%Out-File%" or Process.CommandLine like r"%Set-Content%" or Process.CommandLine like r"%Add-Content%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "csvde.exe" in order to export organizational Active Directory structure.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = e5d36acd-acb4-4c6f-a13f-9eb203d50099
RuleName = Active Directory Structure Export Via Csvde.EXE
EventType = Process.Start
Tag = proc-start-active-directory-structure-export-via-csvde.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\csvde.exe" or Process.Name == "csvde.exe") and Process.CommandLine like r"% -f%" and not Process.CommandLine like r"% -i%"


[ActivityMonitoringRule platform=Windows]
# Detects the enumeration of a specific DLL or EXE being used by a binary via "tasklist.exe".
# This is often used by attackers in order to find the specific process identifier (PID) that is using the DLL in question.
# In order to dump the process memory or perform other nefarious actions.
# Author: Swachchhanda Shrawan Poudel
RuleId = 34275eb8-fa19-436b-b959-3d9ecd53fa1f
RuleName = Loaded Module Enumeration Via Tasklist.EXE
EventType = Process.Start
Tag = proc-start-loaded-module-enumeration-via-tasklist.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1003"], "author": "Swachchhanda Shrawan Poudel"}
Query = (Process.Path like r"%\\tasklist.exe" or Process.Name == "tasklist.exe") and (Process.CommandLine like r"%-m%" or Process.CommandLine like r"%/m%") and Process.CommandLine like r"%rdpcorets.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of hidden file/folder with the "::$index_allocation" stream. Which can be used as a technique to prevent access to folder and files from tooling such as "explorer.exe" and "powershell.exe"
# Author: Scoubi (@ScoubiMtl)
RuleId = a8f866e1-bdd4-425e-a27a-37619238d9c7
RuleName = Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream
EventType = File.Create
Tag = potential-hidden-directory-creation-via-ntfs-index_allocation-stream
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "Scoubi (@ScoubiMtl)"}
Query = File.Path like r"%::$index\_allocation%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a "Report.wer" file in an uncommon folder structure. This could be a sign of potential exploitation of CVE-2023-36874.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 92389a99-5215-43b0-a09f-e334453b2ed3
RuleName = Potential CVE-2023-36874 Exploitation - Uncommon Report.Wer Location
EventType = File.Create
Tag = potential-cve-2023-36874-exploitation-uncommon-report.wer-location
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%:\\ProgramData\\Microsoft\\Windows\\WER\\ReportArchive\\%" and File.Path like r"%\\Report.wer" and not (File.Path like r"%\\ReportArchive\\AppCrash\_%" or File.Path like r"%\\ReportArchive\\AppHang\_%" or File.Path like r"%\\ReportArchive\\Critical\_%" or File.Path like r"%\\ReportArchive\\Kernel\_%" or File.Path like r"%\\ReportArchive\\NonCritical\_%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of ".xbap" (Browser Applications) files via PresentationHost.EXE from an uncommon location. These files can be abused to run malicious ".xbap" files any bypass AWL
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d22e2925-cfd8-463f-96f6-89cec9d9bc5f
RuleName = XBAP Execution From Uncommon Locations Via PresentationHost.EXE
EventType = Process.Start
Tag = proc-start-xbap-execution-from-uncommon-locations-via-presentationhost.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\presentationhost.exe" or Process.Name == "PresentationHost.exe") and Process.CommandLine like r"%.xbap%" and not (Process.CommandLine like r"% C:\\Windows\\%" or Process.CommandLine like r"% C:\\Program Files%")


[ActivityMonitoringRule platform=Windows]
# Detect set EnableFirewall to 0 to disable the Windows firewall
# Author: frack113
RuleId = e78c408a-e2ea-43cd-b5ea-51975cf358c0
RuleName = Disable Windows Firewall by Registry
EventType = Reg.Any
Tag = disable-windows-firewall-by-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.004"], "author": "frack113"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\\EnableFirewall" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\\EnableFirewall") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects changes to the registry values related to outlook security settings
# Author: frack113
RuleId = c3cefdf4-6703-4e1c-bad8-bf422fc5015a
RuleName = Outlook Security Settings Updated - Registry
EventType = Reg.Any
Tag = outlook-security-settings-updated-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1137"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Office\\%" and Reg.TargetObject like r"%\\Outlook\\Security\\%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# TeamViewer_Desktop.exe is create during install
# Author: frack113
RuleId = 9711de76-5d4f-4c50-a94f-21e4e8f8384d
RuleName = Installation of TeamViewer Desktop
EventType = File.Create
Tag = installation-of-teamviewer-desktop
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "frack113"}
Query = File.Path like r"%\\TeamViewer\_Desktop.exe"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "appcmd" to create new global URL rewrite rules. This behaviour has been observed being used by threat actors to add new rules so they can access their webshells.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7c8af9b2-dcae-41a2-a9db-b28c288b5f08
RuleName = Suspicious IIS URL GlobalRules Rewrite Via AppCmd
EventType = Process.Start
Tag = proc-start-suspicious-iis-url-globalrules-rewrite-via-appcmd
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\appcmd.exe" or Process.Name == "appcmd.exe") and Process.CommandLine like r"%set%" and Process.CommandLine like r"%config%" and Process.CommandLine like r"%section:system.webServer/rewrite/globalRules%" and Process.CommandLine like r"%commit:%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of "cdb.exe" to launch 64-bit shellcode or arbitrary processes or commands from a debugger script file
# Author: Beyu Denis, oscd.community, Nasreddine Bencherchali
RuleId = b5c7395f-e501-4a08-94d4-57fe7a9da9d2
RuleName = WinDbg/CDB LOLBIN Usage
EventType = Process.Start
Tag = proc-start-windbg/cdb-lolbin-usage
RiskScore = 50
Annotation = {"mitre_attack": ["T1106", "T1218", "T1127"], "author": "Beyu Denis, oscd.community, Nasreddine Bencherchali"}
Query = (Process.Path like r"%\\cdb.exe" or Process.Name == "CDB.Exe") and (Process.CommandLine like r"% -c %" or Process.CommandLine like r"% -cf %")


[ActivityMonitoringRule platform=Windows]
# Detects execution of "Diskshadow.exe" in script mode using the "/s" flag. Attackers often abuse "diskshadow" to execute scripts that deleted the shadow copies on the systems. Investigate the content of the scripts and its location.
# Author: Ivan Dyachkov, oscd.community
RuleId = 0c2f8629-7129-4a8a-9897-7e0768f13ff2
RuleName = Diskshadow Script Mode Execution
EventType = Process.Start
Tag = proc-start-diskshadow-script-mode-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Ivan Dyachkov, oscd.community"}
Query = (Process.Name == "diskshadow.exe" or Process.Path like r"%\\diskshadow.exe") and (Process.CommandLine like r"%-s %" or Process.CommandLine like r"%/s %")


[ActivityMonitoringRule platform=Windows]
# Detects child processes of "dfsvc" which indicates a ClickOnce deployment execution.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 241d52b5-eee0-49d0-ac8a-8b9c15c7221c
RuleName = ClickOnce Deployment Execution - Dfsvc.EXE Child Process
EventType = Process.Start
Tag = proc-start-clickonce-deployment-execution-dfsvc.exe-child-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\dfsvc.exe" and Process.Path like r"%\\AppData\\Local\\Apps\\2.0\\"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects a Chromium based browser process with the 'load-extension' flag to start a instance with a custom extension
# Author: Aedan Russell, frack113, X__Junior (Nextron Systems)
RuleId = 88d6e60c-759d-4ac1-a447-c0f1466c2d21
RuleName = Chromium Browser Instance Executed With Custom Extension
EventType = Process.Start
Tag = proc-start-chromium-browser-instance-executed-with-custom-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1176"], "author": "Aedan Russell, frack113, X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\brave.exe" or Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\vivaldi.exe") and Process.CommandLine like r"%--load-extension=%"


[ActivityMonitoringRule platform=Windows]
# Detects the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil.
# Author: Tim Rauch, Elastic (idea)
RuleId = 214641c2-c579-4ecb-8427-0cf19df6842e
RuleName = Remote File Download Via Desktopimgdownldr Utility
EventType = Process.Start
Tag = proc-start-remote-file-download-via-desktopimgdownldr-utility
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Tim Rauch, Elastic (idea)"}
Query = Process.Path like r"%\\desktopimgdownldr.exe" and Parent.Path like r"%\\desktopimgdownldr.exe" and Process.CommandLine like r"%/lockscreenurl:http%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "curl.exe" with a potential custom "User-Agent". Attackers can leverage this to download or exfiltrate data via "curl" to a domain that only accept specific "User-Agent" strings
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 85de1f22-d189-44e4-8239-dc276b45379b
RuleName = Curl Web Request With Potential Custom User-Agent
EventType = Process.Start
Tag = proc-start-curl-web-request-with-potential-custom-user-agent
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and Process.CommandLine regex "\\s-H\\s" and Process.CommandLine like r"%User-Agent:%"


[ActivityMonitoringRule platform=Windows]
# Adversaries may establish persistence by executing malicious content triggered by user inactivity.
# Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
# Author: frack113
RuleId = 0fc35fc3-efe6-4898-8a37-0b233339524f
RuleName = Suspicious ScreenSave Change by Reg.exe
EventType = Process.Start
Tag = proc-start-suspicious-screensave-change-by-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.002"], "author": "frack113"}
Query = Process.Path like r"%\\reg.exe" and (Process.CommandLine like r"%HKEY\_CURRENT\_USER\\Control Panel\\Desktop%" or Process.CommandLine like r"%HKCU\\Control Panel\\Desktop%") and (Process.CommandLine like r"%/v ScreenSaveActive%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d 1%" and Process.CommandLine like r"%/f%" or Process.CommandLine like r"%/v ScreenSaveTimeout%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%/f%" or Process.CommandLine like r"%/v ScreenSaverIsSecure%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d 0%" and Process.CommandLine like r"%/f%" or Process.CommandLine like r"%/v SCRNSAVE.EXE%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%.scr%" and Process.CommandLine like r"%/f%")


[ActivityMonitoringRule platform=Windows]
# Detects any deletion of entries in ".*\shell\open\command" registry keys.
# These registry keys might have been used for COM hijacking activities by a threat actor or an attacker and the deletion could indicate steps to remove its tracks.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 96f697b0-b499-4e5d-9908-a67bec11cdb6
RuleName = Removal of Potential COM Hijacking Registry Keys
EventType = Reg.Any
Tag = removal-of-potential-com-hijacking-registry-keys
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Reg.EventType == "DeleteKey" and Reg.TargetObject like r"%\\shell\\open\\command" and not (Process.Path == "C:\\Windows\\system32\\svchost.exe" or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe" or Process.Path == "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe" or Process.Path like r"%\\Dropbox.exe" and Reg.TargetObject like r"%\\Dropbox.%" or Process.Path like r"%\\AppData\\Local\\Temp\\Wireshark\_uninstaller.exe" and Reg.TargetObject like r"%\\wireshark-capture-file\\%" or (Process.Path like r"C:\\Program Files\\Opera\\%" or Process.Path like r"C:\\Program Files (x86)\\Opera\\%") and Process.Path like r"%\\installer.exe" or Process.Path like r"%peazip%" and Reg.TargetObject like r"%\\PeaZip.%" or Process.Path like r"%\\Everything.exe" and Reg.TargetObject like r"%\\Everything.%" or Process.Path like r"C:\\Windows\\Installer\\MSI%" or Process.Path like r"C:\\Program Files (x86)\\Java\\%" and Process.Path like r"%\\installer.exe" and Reg.TargetObject like r"%\\Classes\\WOW6432Node\\CLSID\\{4299124F-F2C3-41b4-9C73-9236B2AD0E8F}%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects the use of the PowerShell "Set-Service" cmdlet to change the startup type of a service to "disabled" or "manual"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 62b20d44-1546-4e61-afce-8e175eb9473c
RuleName = Service StartupType Change Via PowerShell Set-Service
EventType = Process.Start
Tag = proc-start-service-startuptype-change-via-powershell-set-service
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Name == "PowerShell.EXE") and Process.CommandLine like r"%Set-Service%" and Process.CommandLine like r"%-StartupType%" and (Process.CommandLine like r"%Disabled%" or Process.CommandLine like r"%Manual%")


[ActivityMonitoringRule platform=Windows]
# Detects child processes of the "Trace log generation tool for Media Foundation Tools" (Mftrace.exe) which can abused to execute arbitrary binaries.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 3d48c9d3-1aa6-418d-98d3-8fd3c01a564e
RuleName = Potential Mftrace.EXE Abuse
EventType = Process.Start
Tag = proc-start-potential-mftrace.exe-abuse
RiskScore = 50
Annotation = {"mitre_attack": ["T1127"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\mftrace.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe
# Author: frack113
RuleId = 6a69f62d-ce75-4b57-8dce-6351eb55b362
RuleName = Esentutl Steals Browser Information
EventType = Process.Start
Tag = proc-start-esentutl-steals-browser-information
RiskScore = 50
Annotation = {"mitre_attack": ["T1005"], "author": "frack113"}
Query = (Process.Path like r"%\\esentutl.exe" or Process.Name == "esentutl.exe") and (Process.CommandLine like r"%-r%" or Process.CommandLine like r"%/r%") and Process.CommandLine like r"%\\Windows\\WebCache%"


[ActivityMonitoringRule platform=Windows]
# Detects a remote DLL load event via "rundll32.exe".
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f40017b3-cb2e-4335-ab5d-3babf679c1de
RuleName = Remote DLL Load Via Rundll32.EXE
EventType = Image.Load
Tag = remote-dll-load-via-rundll32.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\rundll32.exe" and Image.Path like r"\\\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC) Windows Firewall snap-in
# Author: Tim Rauch, Elastic (idea)
RuleId = e52cb31c-10ed-4aea-bcb7-593c9f4a315b
RuleName = UAC Bypass via Windows Firewall Snap-In Hijack
EventType = Process.Start
Tag = proc-start-uac-bypass-via-windows-firewall-snap-in-hijack
RiskScore = 50
Annotation = {"mitre_attack": ["T1548"], "author": "Tim Rauch, Elastic (idea)"}
Query = Parent.Path like r"%\\mmc.exe" and Parent.CommandLine like r"%WF.msc%" and not Process.Path like r"%\\WerFault.exe"
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects DNS query requests to Visual Studio Code tunnel domains. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.
# Author: citron_ninja
RuleId = b3e6418f-7c7a-4fad-993a-93b65027a9f1
RuleName = DNS Query To Visual Studio Code Tunnels Domain
EventType = Dns.Query
Tag = dns-query-to-visual-studio-code-tunnels-domain
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "citron_ninja"}
Query = Dns.QueryRequest like r"%.tunnels.api.visualstudio.com"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects the setting of the REGISTERAPPRESTART compatibility layer on an application.
# This compatibility layer allows an application to register for restart using the "RegisterApplicationRestart" API.
# This can be potentially abused as a persistence mechanism.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b86852fb-4c77-48f9-8519-eb1b2c308b59
RuleName = Potential Persistence Via AppCompat RegisterAppRestart Layer
EventType = Reg.Any
Tag = potential-persistence-via-appcompat-registerapprestart-layer
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.011"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\\%" and Reg.Value.Data like r"%REGISTERAPPRESTART%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of COM objects that can be abused to download files in PowerShell by CLSID
# Author: frack113
RuleId = 02b64f1b-3f33-4e67-aede-ef3b0a5a8fcf
RuleName = Potential COM Objects Download Cradles Usage - Process Creation
EventType = Process.Start
Tag = proc-start-potential-com-objects-download-cradles-usage-process-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "frack113"}
Query = Process.CommandLine like r"%[Type]::GetTypeFromCLSID(%" and (Process.CommandLine like r"%0002DF01-0000-0000-C000-000000000046%" or Process.CommandLine like r"%F6D90F16-9C73-11D3-B32E-00C04F990BB4%" or Process.CommandLine like r"%F5078F35-C551-11D3-89B9-0000F81FE221%" or Process.CommandLine like r"%88d96a0a-f192-11d4-a65f-0040963251e5%" or Process.CommandLine like r"%AFBA6B42-5692-48EA-8141-DC517DCF0EF1%" or Process.CommandLine like r"%AFB40FFD-B609-40A3-9828-F88BBE11E4E3%" or Process.CommandLine like r"%88d96a0b-f192-11d4-a65f-0040963251e5%" or Process.CommandLine like r"%2087c2f4-2cef-4953-a8ab-66779b670495%" or Process.CommandLine like r"%000209FF-0000-0000-C000-000000000046%" or Process.CommandLine like r"%00024500-0000-0000-C000-000000000046%")


[ActivityMonitoringRule platform=Windows]
# A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = da2738f2-fadb-4394-afa7-0a0674885afa
RuleName = Sdclt Child Processes
EventType = Process.Start
Tag = proc-start-sdclt-child-processes
RiskScore = 50
Annotation = {"mitre_attack": ["T1548.002"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Parent.Path like r"%\\sdclt.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of the "del" builtin command to remove files using greedy/wildcard expression. This is often used by malware to delete content of folders that perhaps contains the initial malware infection or to delete evidence.
# Author: frack113 , X__Junior (Nextron Systems)
RuleId = 204b17ae-4007-471b-917b-b917b315c5db
RuleName = Greedy File Deletion Using Del
EventType = Process.Start
Tag = proc-start-greedy-file-deletion-using-del
RiskScore = 50
Annotation = {"mitre_attack": ["T1070.004"], "author": "frack113 , X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and (Process.CommandLine like r"%del %" or Process.CommandLine like r"%erase %") and (Process.CommandLine like r"%\\*.au3%" or Process.CommandLine like r"%\\*.dll%" or Process.CommandLine like r"%\\*.exe%" or Process.CommandLine like r"%\\*.js%")


[ActivityMonitoringRule platform=Windows]
# Detects password change for the computer's domain account or host principal via "ksetup.exe"
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = de16d92c-c446-4d53-8938-10aeef41c8b6
RuleName = Computer Password Change Via Ksetup.EXE
EventType = Process.Start
Tag = proc-start-computer-password-change-via-ksetup.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ksetup.exe" or Process.Name == "ksetup.exe") and Process.CommandLine like r"% /setcomputerpassword %"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of the "cloudflared" binary from a non standard location.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = fadb84f0-4e84-4f6d-a1ce-9ef2bffb6ccd
RuleName = Cloudflared Portable Execution
EventType = Process.Start
Tag = proc-start-cloudflared-portable-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1090.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\cloudflared.exe" and not (Process.Path like r"%:\\Program Files (x86)\\cloudflared\\%" or Process.Path like r"%:\\Program Files\\cloudflared\\%")


[ActivityMonitoringRule platform=Windows]
# Detects the presence of unicode characters which are homoglyphs, or identical in appearance, to ASCII letter characters.
# This is used as an obfuscation and masquerading techniques. Only "perfect" homoglyphs are included; these are characters that
# are indistinguishable from ASCII characters and thus may make excellent candidates for homoglyph attack characters.
# Author: Micah Babinski, @micahbabinski
RuleId = 4f1707b1-b50b-45b4-b5a2-3978b5a5d0d6
RuleName = Potential Homoglyph Attack Using Lookalike Characters in Filename
EventType = File.Create
Tag = potential-homoglyph-attack-using-lookalike-characters-in-filename
RiskScore = 50
Annotation = {"mitre_attack": ["T1036", "T1036.003"], "author": "Micah Babinski, @micahbabinski"}
Query = File.Path like r"%А%" or File.Path like r"%В%" or File.Path like r"%Е%" or File.Path like r"%К%" or File.Path like r"%М%" or File.Path like r"%Н%" or File.Path like r"%О%" or File.Path like r"%Р%" or File.Path like r"%С%" or File.Path like r"%Т%" or File.Path like r"%Х%" or File.Path like r"%Ѕ%" or File.Path like r"%І%" or File.Path like r"%Ј%" or File.Path like r"%Ү%" or File.Path like r"%Ӏ%" or File.Path like r"%Ԍ%" or File.Path like r"%Ԛ%" or File.Path like r"%Ԝ%" or File.Path like r"%Α%" or File.Path like r"%Β%" or File.Path like r"%Ε%" or File.Path like r"%Ζ%" or File.Path like r"%Η%" or File.Path like r"%Ι%" or File.Path like r"%Κ%" or File.Path like r"%Μ%" or File.Path like r"%Ν%" or File.Path like r"%Ο%" or File.Path like r"%Ρ%" or File.Path like r"%Τ%" or File.Path like r"%Υ%" or File.Path like r"%Χ%" or File.Path like r"%а%" or File.Path like r"%е%" or File.Path like r"%о%" or File.Path like r"%р%" or File.Path like r"%с%" or File.Path like r"%х%" or File.Path like r"%ѕ%" or File.Path like r"%і%" or File.Path like r"%ӏ%" or File.Path like r"%ј%" or File.Path like r"%һ%" or File.Path like r"%ԁ%" or File.Path like r"%ԛ%" or File.Path like r"%ԝ%" or File.Path like r"%ο%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio.
# Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
# Author: Agro (@agro_sev) oscd.communitly
RuleId = a746c9b8-a2fb-4ee5-a428-92bee9e99060
RuleName = SQL Client Tools PowerShell Session Detection
EventType = Process.Start
Tag = proc-start-sql-client-tools-powershell-session-detection
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1127"], "author": "Agro (@agro_sev) oscd.communitly"}
Query = (Process.Path like r"%\\sqltoolsps.exe" or Parent.Path like r"%\\sqltoolsps.exe" or Process.Name == "\\sqltoolsps.exe") and not Parent.Path like r"%\\smss.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential commandline obfuscation using known escape characters
# Author: juju4
RuleId = f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd
RuleName = Potential Commandline Obfuscation Using Escape Characters
EventType = Process.Start
Tag = proc-start-potential-commandline-obfuscation-using-escape-characters
RiskScore = 50
Annotation = {"mitre_attack": ["T1140"], "author": "juju4"}
Query = Process.CommandLine like r"%h^t^t^p%" or Process.CommandLine like r"%h\"t\"t\"p%"


[ActivityMonitoringRule platform=Windows]
# Detects potential Amazon SSM agent hijack attempts as outlined in the Mitiga research report.
# Author: Muhammad Faisal
RuleId = d20ee2f4-822c-4827-9e15-41500b1fff10
RuleName = Potential Amazon SSM Agent Hijacking
EventType = Process.Start
Tag = proc-start-potential-amazon-ssm-agent-hijacking
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Muhammad Faisal"}
Query = Process.Path like r"%\\amazon-ssm-agent.exe" and Process.CommandLine like r"%-register %" and Process.CommandLine like r"%-code %" and Process.CommandLine like r"%-id %" and Process.CommandLine like r"%-region %"


[ActivityMonitoringRule platform=Windows]
# Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy "Bypass" or any binary named "powershell.exe" located in the path provided by 6th positional argument
# Author: Nasreddine Bencherchali (Nextron Systems), memory-shards
RuleId = 7efd2c8d-8b18-45b7-947d-adfe9ed04f61
RuleName = AgentExecutor PowerShell Execution
EventType = Process.Start
Tag = proc-start-agentexecutor-powershell-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), memory-shards"}
Query = (Process.Path == "\\AgentExecutor.exe" or Process.Name == "AgentExecutor.exe") and (Process.CommandLine like r"% -powershell%" or Process.CommandLine like r"% -remediationScript%")


[ActivityMonitoringRule platform=Windows]
# Detects suspicious execution of rundll32, with specific calls to some DLLs with known LOLBIN functionalities
# Author: juju4, Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = e593cf51-88db-4ee1-b920-37e89012a3c9
RuleName = Potentially Suspicious Rundll32 Activity
EventType = Process.Start
Tag = proc-start-potentially-suspicious-rundll32-activity
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.011"], "author": "juju4, Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%javascript:%" and Process.CommandLine like r"%.RegisterXLL%" or Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%OpenURL%" or Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%OpenURLA%" or Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%FileProtocolHandler%" or Process.CommandLine like r"%zipfldr.dll%" and Process.CommandLine like r"%RouteTheCall%" or Process.CommandLine like r"%shell32.dll%" and Process.CommandLine like r"%Control\_RunDLL%" or Process.CommandLine like r"%shell32.dll%" and Process.CommandLine like r"%ShellExec\_RunDLL%" or Process.CommandLine like r"%mshtml.dll%" and Process.CommandLine like r"%PrintHTML%" or Process.CommandLine like r"%advpack.dll%" and Process.CommandLine like r"%LaunchINFSection%" or Process.CommandLine like r"%advpack.dll%" and Process.CommandLine like r"%RegisterOCX%" or Process.CommandLine like r"%ieadvpack.dll%" and Process.CommandLine like r"%LaunchINFSection%" or Process.CommandLine like r"%ieadvpack.dll%" and Process.CommandLine like r"%RegisterOCX%" or Process.CommandLine like r"%ieframe.dll%" and Process.CommandLine like r"%OpenURL%" or Process.CommandLine like r"%shdocvw.dll%" and Process.CommandLine like r"%OpenURL%" or Process.CommandLine like r"%syssetup.dll%" and Process.CommandLine like r"%SetupInfObjectInstallAction%" or Process.CommandLine like r"%setupapi.dll%" and Process.CommandLine like r"%InstallHinfSection%" or Process.CommandLine like r"%pcwutl.dll%" and Process.CommandLine like r"%LaunchApplication%" or Process.CommandLine like r"%dfshim.dll%" and Process.CommandLine like r"%ShOpenVerbApplication%" or Process.CommandLine like r"%dfshim.dll%" and Process.CommandLine like r"%ShOpenVerbShortcut%" or Process.CommandLine like r"%scrobj.dll%" and Process.CommandLine like r"%GenerateTypeLib%" and Process.CommandLine like r"%http%" or Process.CommandLine like r"%shimgvw.dll%" and Process.CommandLine like r"%ImageView\_Fullscreen%" and Process.CommandLine like r"%http%" or Process.CommandLine like r"%comsvcs.dll%" and Process.CommandLine like r"%MiniDump%") and not (Process.CommandLine like r"%shell32.dll,Control\_RunDLL desk.cpl,screensaver,@screensaver%" or Parent.Path == "C:\\Windows\\System32\\control.exe" and Parent.CommandLine like r"%.cpl%" and Process.CommandLine like r"%Shell32.dll%" and Process.CommandLine like r"%Control\_RunDLL%" and Process.CommandLine like r"%.cpl%" or Parent.Path == "C:\\Windows\\System32\\control.exe" and Process.CommandLine like r"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control\_RunDLL \"C:\\Windows\\System32\\%" and Process.CommandLine like r"%.cpl\",")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects DLL sideloading of "dbgcore.dll"
# Author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
RuleId = 9ca2bf31-0570-44d8-a543-534c47c33ed7
RuleName = Potential DLL Sideloading Of DBGCORE.DLL
EventType = Image.Load
Tag = potential-dll-sideloading-of-dbgcore.dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)"}
Query = Image.Path like r"%\\dbgcore.dll" and not (Image.Path like r"C:\\Program Files (x86)\\%" or Image.Path like r"C:\\Program Files\\%" or Image.Path like r"C:\\Windows\\SoftwareDistribution\\%" or Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SystemTemp\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Windows\\WinSxS\\%") and not Image.Path like r"%\\Steam\\bin\\cef\\cef.win7x64\\dbgcore.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects changes to the AppInstaller (winget) policy. Specifically the activation of the local manifest installation, which allows a user to install new packages via custom manifests.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = fa277e82-9b78-42dd-b05c-05555c7b6015
RuleName = Enable Local Manifest Installation With Winget
EventType = Reg.Any
Tag = enable-local-manifest-installation-with-winget
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\AppInstaller\\EnableLocalManifestFiles" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects possible execution via LNK file accessed on a WebDAV server.
# Author: Micah Babinski
RuleId = 1412aa78-a24c-4abd-83df-767dfb2c5bbe
RuleName = Potentially Suspicious WebDAV LNK Execution
EventType = Process.Start
Tag = proc-start-potentially-suspicious-webdav-lnk-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1204"], "author": "Micah Babinski"}
Query = Parent.Path like r"%\\explorer.exe" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wscript.exe") and Process.CommandLine like r"%\\DavWWWRoot\\%"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects registry modifications that hide internal tools or functions from the user (malware like Agent Tesla, Hermetic Wiper uses this technique)
# Author: frack113
RuleId = 5a93eb65-dffa-4543-b761-94aa60098fb6
RuleName = Registry Hide Function from User
EventType = Reg.Any
Tag = registry-hide-function-from-user
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = (Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideClock" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAHealth" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCANetwork" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAPower" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAVolume") and Reg.Value.Data == "DWORD (0x00000001)" or (Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowInfoTip" or Reg.TargetObject like r"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowCompColor") and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects driver load of the System Informer tool
# Author: Florian Roth (Nextron Systems)
RuleId = 10cb6535-b31d-4512-9962-513dcbc42cc1
RuleName = PUA - System Informer Driver Load
EventType = Driver.Load
Tag = pua-system-informer-driver-load
RiskScore = 50
Annotation = {"mitre_attack": ["T1543"], "author": "Florian Roth (Nextron Systems)"}
Query = Image.Path like r"%\\SystemInformer.sys" or Image.Hashes like r"%SHA256=8B9AD98944AC9886EA4CB07700E71B78BE4A2740934BB7E46CA3B56A7C59AD24%" or Image.Hashes like r"%SHA256=A41348BEC147CA4D9EA2869817527EB5CEA2E20202AF599D2B30625433BCF454%" or Image.Hashes like r"%SHA256=38EE0A88AF8535A11EFE8D8DA9C6812AA07067B75A64D99705A742589BDD846D%" or Image.Hashes like r"%SHA256=A773891ACF203A7EB0C0D30942FB1347648F1CD918AE2BFD9A4857B4DCF5081B%" or Image.Hashes like r"%SHA256=4C3B81AC88A987BBDF7D41FA0AECC2CEDF5B9BD2F45E7A21F376D05345FC211D%" or Image.Hashes like r"%SHA256=3241BC14BEC51CE6A691B9A3562E5C1D52E9D057D27A3D67FD0B245C350B6D34%" or Image.Hashes like r"%SHA256=047C42E9BBA28366868847C7DAFC1E043FB038C796422D37220493517D68EE89%" or Image.Hashes like r"%SHA256=18931DC81E95D0020466FA091E16869DBE824E543A4C2C8FE644FA71A0F44FEB%" or Image.Hashes like r"%SHA256=B4C2EF76C204273132FDE38F0DED641C2C5EE767652E64E4C4071A4A973B6C1B%" or Image.Hashes like r"%SHA256=640954AFC268565F7DAA6E6F81A8EE05311E33E34332B501A3C3FE5B22ADEA97%" or Image.Hashes like r"%SHA256=251BE949F662C838718F8AA0A5F8211FB90346D02BD63FF91E6B224E0E01B656%" or Image.Hashes like r"%SHA256=E2606F272F7BA054DF16BE464FDA57211EF0D14A0D959F9C8DCB0575DF1186E4%" or Image.Hashes like r"%SHA256=3A9E1D17BEEB514F1B9B3BACAEE7420285DE5CBDCE89C5319A992C6CBD1DE138%" or Image.Hash.SHA256 in ["8b9ad98944ac9886ea4cb07700e71b78be4a2740934bb7e46ca3b56a7c59ad24", "a41348bec147ca4d9ea2869817527eb5cea2e20202af599d2b30625433bcf454", "38ee0a88af8535a11efe8d8da9c6812aa07067b75a64d99705a742589bdd846d", "a773891acf203a7eb0c0d30942fb1347648f1cd918ae2bfd9a4857b4dcf5081b", "4c3b81ac88a987bbdf7d41fa0aecc2cedf5b9bd2f45e7a21f376d05345fc211d", "3241bc14bec51ce6a691b9a3562e5c1d52e9d057d27a3d67fd0b245c350b6d34", "047c42e9bba28366868847c7dafc1e043fb038c796422d37220493517d68ee89", "18931dc81e95d0020466fa091e16869dbe824e543a4c2c8fe644fa71a0f44feb", "b4c2ef76c204273132fde38f0ded641c2c5ee767652e64e4c4071a4a973b6c1b", "640954afc268565f7daa6e6f81a8ee05311e33e34332b501a3c3fe5b22adea97", "251be949f662c838718f8aa0a5f8211fb90346d02bd63ff91e6b224e0e01b656", "e2606f272f7ba054df16be464fda57211ef0d14a0d959f9c8dcb0575df1186e4", "3a9e1d17beeb514f1b9b3bacaee7420285de5cbdce89c5319a992c6cbd1de138"]
GenericProperty1 = Image.Path
GenericProperty2 = Image.Hash.SHA256
GenericProperty3 = Image.Hashes


[ActivityMonitoringRule platform=Windows]
# Detects binaries that use the same name as legitimate sysinternals tools to evade detection
# Author: frack113
RuleId = 7cce6fc8-a07f-4d84-a53e-96e1879843c9
RuleName = Potential Binary Impersonating Sysinternals Tools
EventType = Process.Start
Tag = proc-start-potential-binary-impersonating-sysinternals-tools
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "frack113"}
Query = (Process.Path like r"%\\accesschk.exe" or Process.Path like r"%\\accesschk64.exe" or Process.Path like r"%\\AccessEnum.exe" or Process.Path like r"%\\ADExplorer.exe" or Process.Path like r"%\\ADExplorer64.exe" or Process.Path like r"%\\ADInsight.exe" or Process.Path like r"%\\ADInsight64.exe" or Process.Path like r"%\\adrestore.exe" or Process.Path like r"%\\adrestore64.exe" or Process.Path like r"%\\Autologon.exe" or Process.Path like r"%\\Autologon64.exe" or Process.Path like r"%\\Autoruns.exe" or Process.Path like r"%\\Autoruns64.exe" or Process.Path like r"%\\autorunsc.exe" or Process.Path like r"%\\autorunsc64.exe" or Process.Path like r"%\\Bginfo.exe" or Process.Path like r"%\\Bginfo64.exe" or Process.Path like r"%\\Cacheset.exe" or Process.Path like r"%\\Cacheset64.exe" or Process.Path like r"%\\Clockres.exe" or Process.Path like r"%\\Clockres64.exe" or Process.Path like r"%\\Contig.exe" or Process.Path like r"%\\Contig64.exe" or Process.Path like r"%\\Coreinfo.exe" or Process.Path like r"%\\Coreinfo64.exe" or Process.Path like r"%\\CPUSTRES.EXE" or Process.Path like r"%\\CPUSTRES64.EXE" or Process.Path like r"%\\ctrl2cap.exe" or Process.Path like r"%\\Dbgview.exe" or Process.Path like r"%\\dbgview64.exe" or Process.Path like r"%\\Desktops.exe" or Process.Path like r"%\\Desktops64.exe" or Process.Path like r"%\\disk2vhd.exe" or Process.Path like r"%\\disk2vhd64.exe" or Process.Path like r"%\\diskext.exe" or Process.Path like r"%\\diskext64.exe" or Process.Path like r"%\\Diskmon.exe" or Process.Path like r"%\\Diskmon64.exe" or Process.Path like r"%\\DiskView.exe" or Process.Path like r"%\\DiskView64.exe" or Process.Path like r"%\\du.exe" or Process.Path like r"%\\du64.exe" or Process.Path like r"%\\efsdump.exe" or Process.Path like r"%\\FindLinks.exe" or Process.Path like r"%\\FindLinks64.exe" or Process.Path like r"%\\handle.exe" or Process.Path like r"%\\handle64.exe" or Process.Path like r"%\\hex2dec.exe" or Process.Path like r"%\\hex2dec64.exe" or Process.Path like r"%\\junction.exe" or Process.Path like r"%\\junction64.exe" or Process.Path like r"%\\ldmdump.exe" or Process.Path like r"%\\listdlls.exe" or Process.Path like r"%\\listdlls64.exe" or Process.Path like r"%\\livekd.exe" or Process.Path like r"%\\livekd64.exe" or Process.Path like r"%\\loadOrd.exe" or Process.Path like r"%\\loadOrd64.exe" or Process.Path like r"%\\loadOrdC.exe" or Process.Path like r"%\\loadOrdC64.exe" or Process.Path like r"%\\logonsessions.exe" or Process.Path like r"%\\logonsessions64.exe" or Process.Path like r"%\\movefile.exe" or Process.Path like r"%\\movefile64.exe" or Process.Path like r"%\\notmyfault.exe" or Process.Path like r"%\\notmyfault64.exe" or Process.Path like r"%\\notmyfaultc.exe" or Process.Path like r"%\\notmyfaultc64.exe" or Process.Path like r"%\\ntfsinfo.exe" or Process.Path like r"%\\ntfsinfo64.exe" or Process.Path like r"%\\pendmoves.exe" or Process.Path like r"%\\pendmoves64.exe" or Process.Path like r"%\\pipelist.exe" or Process.Path like r"%\\pipelist64.exe" or Process.Path like r"%\\portmon.exe" or Process.Path like r"%\\procdump.exe" or Process.Path like r"%\\procdump64.exe" or Process.Path like r"%\\procexp.exe" or Process.Path like r"%\\procexp64.exe" or Process.Path like r"%\\Procmon.exe" or Process.Path like r"%\\Procmon64.exe" or Process.Path like r"%\\psExec.exe" or Process.Path like r"%\\psExec64.exe" or Process.Path like r"%\\psfile.exe" or Process.Path like r"%\\psfile64.exe" or Process.Path like r"%\\psGetsid.exe" or Process.Path like r"%\\psGetsid64.exe" or Process.Path like r"%\\psInfo.exe" or Process.Path like r"%\\psInfo64.exe" or Process.Path like r"%\\pskill.exe" or Process.Path like r"%\\pskill64.exe" or Process.Path like r"%\\pslist.exe" or Process.Path like r"%\\pslist64.exe" or Process.Path like r"%\\psLoggedon.exe" or Process.Path like r"%\\psLoggedon64.exe" or Process.Path like r"%\\psloglist.exe" or Process.Path like r"%\\psloglist64.exe" or Process.Path like r"%\\pspasswd.exe" or Process.Path like r"%\\pspasswd64.exe" or Process.Path like r"%\\psping.exe" or Process.Path like r"%\\psping64.exe" or Process.Path like r"%\\psService.exe" or Process.Path like r"%\\psService64.exe" or Process.Path like r"%\\psshutdown.exe" or Process.Path like r"%\\psshutdown64.exe" or Process.Path like r"%\\pssuspend.exe" or Process.Path like r"%\\pssuspend64.exe" or Process.Path like r"%\\RAMMap.exe" or Process.Path like r"%\\RDCMan.exe" or Process.Path like r"%\\RegDelNull.exe" or Process.Path like r"%\\RegDelNull64.exe" or Process.Path like r"%\\regjump.exe" or Process.Path like r"%\\ru.exe" or Process.Path like r"%\\ru64.exe" or Process.Path like r"%\\sdelete.exe" or Process.Path like r"%\\sdelete64.exe" or Process.Path like r"%\\ShareEnum.exe" or Process.Path like r"%\\ShareEnum64.exe" or Process.Path like r"%\\shellRunas.exe" or Process.Path like r"%\\sigcheck.exe" or Process.Path like r"%\\sigcheck64.exe" or Process.Path like r"%\\streams.exe" or Process.Path like r"%\\streams64.exe" or Process.Path like r"%\\strings.exe" or Process.Path like r"%\\strings64.exe" or Process.Path like r"%\\sync.exe" or Process.Path like r"%\\sync64.exe" or Process.Path like r"%\\Sysmon.exe" or Process.Path like r"%\\Sysmon64.exe" or Process.Path like r"%\\tcpvcon.exe" or Process.Path like r"%\\tcpvcon64.exe" or Process.Path like r"%\\tcpview.exe" or Process.Path like r"%\\tcpview64.exe" or Process.Path like r"%\\Testlimit.exe" or Process.Path like r"%\\Testlimit64.exe" or Process.Path like r"%\\vmmap.exe" or Process.Path like r"%\\vmmap64.exe" or Process.Path like r"%\\Volumeid.exe" or Process.Path like r"%\\Volumeid64.exe" or Process.Path like r"%\\whois.exe" or Process.Path like r"%\\whois64.exe" or Process.Path like r"%\\Winobj.exe" or Process.Path like r"%\\Winobj64.exe" or Process.Path like r"%\\ZoomIt.exe" or Process.Path like r"%\\ZoomIt64.exe") and not (Process.Company in ["Sysinternals - www.sysinternals.com", "Sysinternals"] or isnull(Process.Company))
GenericProperty1 = Process.Company


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child process of applications launched from inside the WindowsApps directory. This could be a sign of a rogue ".appx" package installation/execution
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f91ed517-a6ba-471d-9910-b3b4a398c0f3
RuleName = Potentially Suspicious Windows App Activity
EventType = Process.Start
Tag = proc-start-potentially-suspicious-windows-app-activity
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%C:\\Program Files\\WindowsApps\\%" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe" or Process.CommandLine like r"%cmd /c%" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%Base64%") and not (Parent.Path like r"%:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal%" and Parent.Path like r"%\\WindowsTerminal.exe" and (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\pwsh.exe"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of a browser process with a URL argument pointing to a file with a potentially interesting extension. This can be abused to download arbitrary files or to hide from the user for example by launching the browser in a minimized state.
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 94771a71-ba41-4b6e-a757-b531372eaab6
RuleName = File Download From Browser Process Via Inline URL
EventType = Process.Start
Tag = proc-start-file-download-from-browser-process-via-inline-url
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\brave.exe" or Process.Path like r"%\\chrome.exe" or Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\vivaldi.exe") and Process.CommandLine like r"%http%" and (Process.CommandLine like r"%.7z" or Process.CommandLine like r"%.dat" or Process.CommandLine like r"%.dll" or Process.CommandLine like r"%.exe" or Process.CommandLine like r"%.hta" or Process.CommandLine like r"%.ps1" or Process.CommandLine like r"%.psm1" or Process.CommandLine like r"%.txt" or Process.CommandLine like r"%.vbe" or Process.CommandLine like r"%.vbs" or Process.CommandLine like r"%.zip")


[ActivityMonitoringRule platform=Windows]
# Detects registry modifications that disable Privacy Settings Experience
# Author: frack113
RuleId = 0372e1f9-0fd2-40f7-be1b-a7b2b848fa7b
RuleName = Disable Privacy Settings Experience in Registry
EventType = Reg.Any
Tag = disable-privacy-settings-experience-in-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\Windows\\OOBE\\DisablePrivacyExperience" and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the execution of WMIC with the "format" flag to potentially load XSL files.
# Adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
# Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files.
# Author: Timur Zinniatullin, oscd.community, Swachchhanda Shrawan Poudel
RuleId = 05c36dd6-79d6-4a9a-97da-3db20298ab2d
RuleName = XSL Script Execution Via WMIC.EXE
EventType = Process.Start
Tag = proc-start-xsl-script-execution-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1220"], "author": "Timur Zinniatullin, oscd.community, Swachchhanda Shrawan Poudel"}
Query = Process.Path like r"%\\wmic.exe" and (Process.CommandLine like r"%-format%" or Process.CommandLine like r"%/format%") and not (Process.CommandLine like r"%Format:List%" or Process.CommandLine like r"%Format:htable%" or Process.CommandLine like r"%Format:hform%" or Process.CommandLine like r"%Format:table%" or Process.CommandLine like r"%Format:mof%" or Process.CommandLine like r"%Format:value%" or Process.CommandLine like r"%Format:rawxml%" or Process.CommandLine like r"%Format:xml%" or Process.CommandLine like r"%Format:csv%")


[ActivityMonitoringRule platform=Windows]
# Detects the creation of system DLLs that are usually not present on the system (or at least not in system directories).
# Usually this technique is used to achieve DLL hijacking.
# Author: Nasreddine Bencherchali (Nextron Systems), fornotes
RuleId = df6ecb8b-7822-4f4b-b412-08f524b4576c
RuleName = Creation Of Non-Existent System DLL
EventType = File.Create
Tag = creation-of-non-existent-system-dll
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems), fornotes"}
Query = File.Path like r"%:\\Windows\\System32\\TSMSISrv.dll" or File.Path like r"%:\\Windows\\System32\\TSVIPSrv.dll" or File.Path like r"%:\\Windows\\System32\\wbem\\wbemcomn.dll" or File.Path like r"%:\\Windows\\System32\\WLBSCTRL.dll" or File.Path like r"%:\\Windows\\System32\\wow64log.dll" or File.Path like r"%:\\Windows\\System32\\WptsExtensions.dll" or File.Path like r"%\\SprintCSP.dll"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious command line arguments of common data compression tools
# Author: Florian Roth (Nextron Systems), Samir Bousseaden
RuleId = 27a72a60-7e5e-47b1-9d17-909c9abafdcd
RuleName = Potentially Suspicious Compression Tool Parameters
EventType = Process.Start
Tag = proc-start-potentially-suspicious-compression-tool-parameters
RiskScore = 50
Annotation = {"mitre_attack": ["T1560.001"], "author": "Florian Roth (Nextron Systems), Samir Bousseaden"}
Query = (Process.Name like r"7z%.exe" or Process.Name like r"%rar.exe" or Process.Name like r"%Command%Line%RAR%") and (Process.CommandLine like r"% -p%" or Process.CommandLine like r"% -ta%" or Process.CommandLine like r"% -tb%" or Process.CommandLine like r"% -sdel%" or Process.CommandLine like r"% -dw%" or Process.CommandLine like r"% -hp%") and not (Parent.Path like r"%:\\Program Files\\%" or Parent.Path like r"%:\\Program Files (x86)\\%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects processes that query known 3rd party registry keys that holds credentials via commandline
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 87a476dc-0079-4583-a985-dee7a20a03de
RuleName = Enumeration for 3rd Party Creds From CLI
EventType = Process.Start
Tag = proc-start-enumeration-for-3rd-party-creds-from-cli
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%\\Software\\SimonTatham\\PuTTY\\Sessions%" or Process.CommandLine like r"%\\Software\\SimonTatham\\PuTTY\\SshHostKeys\\%" or Process.CommandLine like r"%\\Software\\Mobatek\\MobaXterm\\%" or Process.CommandLine like r"%\\Software\\WOW6432Node\\Radmin\\v3.0\\Server\\Parameters\\Radmin%" or Process.CommandLine like r"%\\Software\\Aerofox\\FoxmailPreview%" or Process.CommandLine like r"%\\Software\\Aerofox\\Foxmail\\V3.1%" or Process.CommandLine like r"%\\Software\\IncrediMail\\Identities%" or Process.CommandLine like r"%\\Software\\Qualcomm\\Eudora\\CommandLine%" or Process.CommandLine like r"%\\Software\\RimArts\\B2\\Settings%" or Process.CommandLine like r"%\\Software\\OpenVPN-GUI\\configs%" or Process.CommandLine like r"%\\Software\\Martin Prikryl\\WinSCP 2\\Sessions%" or Process.CommandLine like r"%\\Software\\FTPWare\\COREFTP\\Sites%" or Process.CommandLine like r"%\\Software\\DownloadManager\\Passwords%" or Process.CommandLine like r"%\\Software\\OpenSSH\\Agent\\Keys%" or Process.CommandLine like r"%\\Software\\TightVNC\\Server%" or Process.CommandLine like r"%\\Software\\ORL\\WinVNC3\\Password%" or Process.CommandLine like r"%\\Software\\RealVNC\\WinVNC4%"


[ActivityMonitoringRule platform=Windows]
# Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
# Author: Daniil Yugoslavskiy, Ian Davis, oscd.community
RuleId = 99793437-3e16-439b-be0f-078782cf953d
RuleName = Tap Installer Execution
EventType = Process.Start
Tag = proc-start-tap-installer-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1048"], "author": "Daniil Yugoslavskiy, Ian Davis, oscd.community"}
Query = Process.Path like r"%\\tapinstall.exe" and not (Process.Path like r"%:\\Program Files\\Avast Software\\SecureLine VPN\\%" or Process.Path like r"%:\\Program Files (x86)\\Avast Software\\SecureLine VPN\\%" or Process.Path like r"%:\\Program Files\\OpenVPN Connect\\drivers\\tap\\%" or Process.Path like r"%:\\Program Files (x86)\\Proton Technologies\\ProtonVPNTap\\installer\\%")


[ActivityMonitoringRule platform=Windows]
# Detects loading of "Amsi.dll" by a living of the land process. This could be an indication of a "PowerShell without PowerShell" attack
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 6ec86d9e-912e-4726-91a2-209359b999b9
RuleName = Amsi.DLL Loaded Via LOLBIN Process
EventType = Image.Load
Tag = amsi.dll-loaded-via-lolbin-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%\\amsi.dll" and (Process.Path like r"%\\ExtExport.exe" or Process.Path like r"%\\odbcconf.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
# Author: Julia Fomina, oscd.community
RuleId = d353dac0-1b41-46c2-820c-d7d2561fc6ed
RuleName = AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - File
EventType = File.Create
Tag = awl-bypass-with-winrm.vbs-and-malicious-wsmpty.xsl/wsmtxt.xsl-file
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Julia Fomina, oscd.community"}
Query = (File.Path like r"%WsmPty.xsl" or File.Path like r"%WsmTxt.xsl") and not (File.Path like r"C:\\Windows\\System32\\%" or File.Path like r"C:\\Windows\\SysWOW64\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects Microsoft Excel loading an Add-In (.xll) file from an uncommon location
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = af4c4609-5755-42fe-8075-4effb49f5d44
RuleName = Microsoft Excel Add-In Loaded From Uncommon Location
EventType = Image.Load
Tag = microsoft-excel-add-in-loaded-from-uncommon-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\excel.exe" and (Image.Path like r"%\\Desktop\\%" or Image.Path like r"%\\Downloads\\%" or Image.Path like r"%\\Perflogs\\%" or Image.Path like r"%\\Temp\\%" or Image.Path like r"%\\Users\\Public\\%" or Image.Path like r"%\\Windows\\Tasks\\%") and Image.Path like r"%.xll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of DeviceCredentialDeployment to hide a process from view
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b8b1b304-a60f-4999-9a6e-c547bde03ffd
RuleName = DeviceCredentialDeployment Execution
EventType = Process.Start
Tag = proc-start-devicecredentialdeployment-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\DeviceCredentialDeployment.exe"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = 9df5f547-c86a-433e-b533-f2794357e242
RuleName = Classes Autorun Keys Modification
EventType = Reg.Any
Tag = classes-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\Software\\Classes%" and (Reg.TargetObject like r"%\\Folder\\ShellEx\\ExtShellFolderViews%" or Reg.TargetObject like r"%\\Folder\\ShellEx\\DragDropHandlers%" or Reg.TargetObject like r"%\\Folder\\Shellex\\ColumnHandlers%" or Reg.TargetObject like r"%\\Filter%" or Reg.TargetObject like r"%\\Exefile\\Shell\\Open\\Command\\(Default)%" or Reg.TargetObject like r"%\\Directory\\Shellex\\DragDropHandlers%" or Reg.TargetObject like r"%\\Directory\\Shellex\\CopyHookHandlers%" or Reg.TargetObject like r"%\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance%" or Reg.TargetObject like r"%\\Classes\\AllFileSystemObjects\\ShellEx\\DragDropHandlers%" or Reg.TargetObject like r"%\\.exe%" or Reg.TargetObject like r"%\\.cmd%" or Reg.TargetObject like r"%\\ShellEx\\PropertySheetHandlers%" or Reg.TargetObject like r"%\\ShellEx\\ContextMenuHandlers%") and not (Reg.Value.Data == "(Empty)" or Reg.Value.Data == "{807583E5-5146-11D5-A672-00B0D022E945}" or Process.Path == "C:\\Windows\\System32\\drvinst.exe" or Process.Path == "C:\\Windows\\System32\\svchost.exe" and Reg.TargetObject like r"%\\lnkfile\\shellex\\ContextMenuHandlers\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination.
# Author: Tim Rauch, Elastic (idea)
RuleId = 8a3038e8-9c9d-46f8-b184-66234a160f6f
RuleName = Potential Remote Desktop Tunneling
EventType = Process.Start
Tag = proc-start-potential-remote-desktop-tunneling
RiskScore = 50
Annotation = {"mitre_attack": ["T1021"], "author": "Tim Rauch, Elastic (idea)"}
Query = Process.CommandLine like r"%:3389%" and (Process.CommandLine like r"% -L %" or Process.CommandLine like r"% -P %" or Process.CommandLine like r"% -R %" or Process.CommandLine like r"% -pw %" or Process.CommandLine like r"% -ssh %")


[ActivityMonitoringRule platform=Windows]
# Detects suspicious file type dropped by an Exchange component in IIS
# Author: Florian Roth (Nextron Systems)
RuleId = 6b269392-9eba-40b5-acb6-55c882b20ba6
RuleName = Suspicious File Drop by Exchange
EventType = File.Create
Tag = suspicious-file-drop-by-exchange
RiskScore = 50
Annotation = {"mitre_attack": ["T1190", "T1505.003"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\w3wp.exe" and Process.CommandLine like r"%MSExchange%" and (File.Path like r"%.aspx" or File.Path like r"%.asp" or File.Path like r"%.ashx" or File.Path like r"%.ps1" or File.Path like r"%.bat" or File.Path like r"%.exe" or File.Path like r"%.dll" or File.Path like r"%.vbs")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
# Author: Florian Roth (Nextron Systems)
RuleId = 17769c90-230e-488b-a463-e05c08e9d48f
RuleName = Powershell Defender Exclusion
EventType = Process.Start
Tag = proc-start-powershell-defender-exclusion
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.CommandLine like r"%Add-MpPreference %" or Process.CommandLine like r"%Set-MpPreference %") and (Process.CommandLine like r"% -ExclusionPath %" or Process.CommandLine like r"% -ExclusionExtension %" or Process.CommandLine like r"% -ExclusionProcess %" or Process.CommandLine like r"% -ExclusionIpAddress %")


[ActivityMonitoringRule platform=Windows]
# Detects uncommon child processes of "BgInfo.exe" which could be a sign of potential abuse of the binary to proxy execution via external VBScript
# Author: Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community
RuleId = aaf46cdc-934e-4284-b329-34aa701e3771
RuleName = Uncommon Child Process Of BgInfo.EXE
EventType = Process.Start
Tag = proc-start-uncommon-child-process-of-bginfo.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.005", "T1218", "T1202"], "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community"}
Query = Parent.Path like r"%\\bginfo.exe" or Parent.Path like r"%\\bginfo64.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "mfdetours.dll". While using "mftrace.exe" it can be abused to attach to an arbitrary process and force load any DLL named "mfdetours.dll" from the current directory of execution.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d2605a99-2218-4894-8fd3-2afb7946514d
RuleName = Potential Mfdetours.DLL Sideloading
EventType = Image.Load
Tag = potential-mfdetours.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%\\mfdetours.dll" and not Image.Path like r"%:\\Program Files (x86)\\Windows Kits\\10\\bin\\%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "findstr" to search for common names of security tools. Attackers often pipe the results of recon commands such as "tasklist" or "whoami" to "findstr" in order to filter out the results.
# This detection focuses on the keywords that the attacker might use as a filter.
# Author: Nasreddine Bencherchali (Nextron Systems), frack113
RuleId = 4fe074b4-b833-4081-8f24-7dcfeca72b42
RuleName = Security Tools Keyword Lookup Via Findstr.EXE
EventType = Process.Start
Tag = proc-start-security-tools-keyword-lookup-via-findstr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1518.001"], "author": "Nasreddine Bencherchali (Nextron Systems), frack113"}
Query = (Process.Path like r"%\\find.exe" or Process.Path like r"%\\findstr.exe" or Process.Name in ["FIND.EXE", "FINDSTR.EXE"]) and (Process.CommandLine like r"% avira" or Process.CommandLine like r"% avira\"" or Process.CommandLine like r"% cb" or Process.CommandLine like r"% cb\"" or Process.CommandLine like r"% cylance" or Process.CommandLine like r"% cylance\"" or Process.CommandLine like r"% defender" or Process.CommandLine like r"% defender\"" or Process.CommandLine like r"% kaspersky" or Process.CommandLine like r"% kaspersky\"" or Process.CommandLine like r"% kes" or Process.CommandLine like r"% kes\"" or Process.CommandLine like r"% mc" or Process.CommandLine like r"% mc\"" or Process.CommandLine like r"% sec" or Process.CommandLine like r"% sec\"" or Process.CommandLine like r"% sentinel" or Process.CommandLine like r"% sentinel\"" or Process.CommandLine like r"% symantec" or Process.CommandLine like r"% symantec\"" or Process.CommandLine like r"% virus" or Process.CommandLine like r"% virus\"")


[ActivityMonitoringRule platform=Windows]
# Detects potential evasion or obfuscation attempts using bogus path traversal via the commandline
# Author: Christian Burkard (Nextron Systems)
RuleId = 1327381e-6ab0-4f38-b583-4c1b8346a56b
RuleName = Potential Command Line Path Traversal Evasion Attempt
EventType = Process.Start
Tag = proc-start-potential-command-line-path-traversal-evasion-attempt
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Christian Burkard (Nextron Systems)"}
Query = (Process.Path like r"%\\Windows\\%" and (Process.CommandLine like r"%\\..\\Windows\\%" or Process.CommandLine like r"%\\..\\System32\\%" or Process.CommandLine like r"%\\..\\..\\%") or Process.CommandLine like r"%.exe\\..\\%") and not (Process.CommandLine like r"%\\Google\\Drive\\googledrivesync.exe\\..\\%" or Process.CommandLine like r"%\\Citrix\\Virtual Smart Card\\Citrix.Authentication.VirtualSmartcard.Launcher.exe\\..\\%")


[ActivityMonitoringRule platform=Windows]
# A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 2aa0a6b4-a865-495b-ab51-c28249537b75
RuleName = Startup Folder File Write
EventType = File.Create
Tag = startup-folder-file-write
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = File.Path like r"%\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp%" and not (Process.Path == "C:\\Windows\\System32\\wuauclt.exe" or File.Path like r"C:\\$WINDOWS.~BT\\NewOS\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = 4e2ed651-1906-4a59-a78a-18220fca1b22
RuleName = PUA - NirCmd Execution
EventType = Process.Start
Tag = proc-start-pua-nircmd-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1569.002"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\NirCmd.exe" or Process.Name == "NirCmd.exe" or Process.CommandLine like r"% execmd %" or Process.CommandLine like r"%.exe script %" or Process.CommandLine like r"%.exe shexec %" or Process.CommandLine like r"% runinteractive %" or (Process.CommandLine like r"% exec %" or Process.CommandLine like r"% exec2 %") and (Process.CommandLine like r"% show %" or Process.CommandLine like r"% hide %")


[ActivityMonitoringRule platform=Windows]
# Detects calls to "SyncInvoke" that is part of the "CL_Invocation.ps1" script to proxy execution using "System.Diagnostics.Process"
# Author: Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova
RuleId = a0459f02-ac51-4c09-b511-b8c9203fc429
RuleName = Potential Process Execution Proxy Via CL_Invocation.ps1
EventType = Process.Start
Tag = proc-start-potential-process-execution-proxy-via-cl_invocation.ps1
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova"}
Query = Process.CommandLine like r"%SyncInvoke %"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll", ".ps1", etc. by a non-PowerShell process
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = e3845023-ca9a-4024-b2b2-5422156d5527
RuleName = PowerShell Module File Created By Non-PowerShell Process
EventType = File.Create
Tag = powershell-module-file-created-by-non-powershell-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (File.Path like r"%\\WindowsPowerShell\\Modules\\%" or File.Path like r"%\\PowerShell\\7\\Modules\\%") and not (Process.Path like r"%:\\Program Files\\PowerShell\\7-preview\\pwsh.exe" or Process.Path like r"%:\\Program Files\\PowerShell\\7\\pwsh.exe" or Process.Path like r"%:\\Windows\\System32\\poqexec.exe" or Process.Path like r"%:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell\_ise.exe" or Process.Path like r"%:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\poqexec.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell\_ise.exe" or Process.Path like r"%:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation or modification of a powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence
# Author: HieuTT35, Nasreddine Bencherchali (Nextron Systems)
RuleId = b5b78988-486d-4a80-b991-930eff3ff8bf
RuleName = PowerShell Profile Modification
EventType = File.Create
Tag = powershell-profile-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.013"], "author": "HieuTT35, Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\Microsoft.PowerShell\_profile.ps1" or File.Path like r"%\\PowerShell\\profile.ps1" or File.Path like r"%\\Program Files\\PowerShell\\7-preview\\profile.ps1" or File.Path like r"%\\Program Files\\PowerShell\\7\\profile.ps1" or File.Path like r"%\\Windows\\System32\\WindowsPowerShell\\v1.0\\profile.ps1" or File.Path like r"%\\WindowsPowerShell\\profile.ps1"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = b29aed60-ebd1-442b-9cb5-16a1d0324adb
RuleName = Wow6432Node CurrentVersion Autorun Keys Modification
EventType = Reg.Any
Tag = wow6432node-currentversion-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion%" and (Reg.TargetObject like r"%\\ShellServiceObjectDelayLoad%" or Reg.TargetObject like r"%\\Run\\%" or Reg.TargetObject like r"%\\RunOnce\\%" or Reg.TargetObject like r"%\\RunOnceEx\\%" or Reg.TargetObject like r"%\\RunServices\\%" or Reg.TargetObject like r"%\\RunServicesOnce\\%" or Reg.TargetObject like r"%\\Explorer\\ShellServiceObjects%" or Reg.TargetObject like r"%\\Explorer\\ShellIconOverlayIdentifiers%" or Reg.TargetObject like r"%\\Explorer\\ShellExecuteHooks%" or Reg.TargetObject like r"%\\Explorer\\SharedTaskScheduler%" or Reg.TargetObject like r"%\\Explorer\\Browser Helper Objects%") and not (Reg.Value.Data == "(Empty)" or Process.Path like r"%C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\Install\\{%" and Process.Path like r"%\\setup.exe%" or Process.Path == "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\OfficeClickToRun.exe" and Reg.TargetObject like r"%\\Office\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Wow6432Node\\%" or (Process.Path in ["C:\\Program Files\\Microsoft Office\\root\\integration\\integrator.exe", "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"]) and Reg.TargetObject like r"%\\Explorer\\Browser Helper Objects\\{31D09BA0-12F5-4CCE-BE8A-2923E76605DA}\\%" or Reg.Value.Data like r"%-A251-47B7-93E1-CDD82E34AF8B}" or Reg.Value.Data == "grpconv -o" or Reg.Value.Data like r"%C:\\Program Files%" and Reg.Value.Data like r"%\\Dropbox\\Client\\Dropbox.exe%" and Reg.Value.Data like r"% /systemstartup%" or Reg.TargetObject like r"%\\Explorer\\Browser Helper Objects\\{92EF2EAD-A7CE-4424-B0DB-499CF856608E}\\NoExplorer" or Process.Path like r"%\\windowsdesktop-runtime-%" and (Reg.TargetObject like r"%\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{e2d1ae32-dd1d-4ad7-a298-10e42e7840fc}" or Reg.TargetObject like r"%\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{7037b699-7382-448c-89a7-4765961d2537}") and Reg.Value.Data like r"\"C:\\ProgramData\\Package Cache\\%" and Reg.Value.Data like r"%.exe\" /burn.runonce" or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe" or Reg.Value.Data like r"\"C:\\ProgramData\\Package Cache\\{d21a4f20-968a-4b0c-bf04-a38da5f06e41}\\windowsdesktop-runtime-%" or Process.Path like r"%\\VC\_redist.x64.exe" and Reg.Value.Data like r"%}\\VC\_redist.x64.exe\" /burn.runonce" or (Process.Path like r"C:\\ProgramData\\Package Cache%" or Process.Path like r"C:\\Windows\\Temp\\%") and (Process.Path like r"%\\winsdksetup.exe%" or Process.Path like r"%\\windowsdesktop-runtime-%" or Process.Path like r"%\\AspNetCoreSharedFrameworkBundle-%") and Reg.Value.Data like r"% /burn.runonce" or Process.Path like r"C:\\Windows\\Installer\\MSI%" and Reg.TargetObject like r"%\\Explorer\\Browser Helper Objects%" or Process.Path == "C:\\WINDOWS\\system32\\msiexec.exe" and Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the load of dbghelp/dbgcore DLL by a potentially uncommon or potentially suspicious process.
# The Dbghelp and Dbgcore DLLs export functions that allow for the dump of process memory. Tools like ProcessHacker, Task Manager and some attacker tradecraft use the MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.
# As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.
# Keep in mind that many legitimate Windows processes and services might load the aforementioned DLLs for debugging or other related purposes. Investigate the CommandLine and the Image location of the process loading the DLL.
# Author: Perez Diego (@darkquassar), oscd.community, Ecco
RuleId = 0e277796-5f23-4e49-a490-483131d4f6e1
RuleName = Dbghelp/Dbgcore DLL Loaded By Uncommon/Suspicious Process
EventType = Image.Load
Tag = dbghelp/dbgcore-dll-loaded-by-uncommon/suspicious-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.001"], "author": "Perez Diego (@darkquassar), oscd.community, Ecco"}
Query = (Image.Path like r"%\\dbghelp.dll" or Image.Path like r"%\\dbgcore.dll") and (Process.Path like r"%\\bash.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\dnx.exe" or Process.Path like r"%\\excel.exe" or Process.Path like r"%\\monitoringhost.exe" or Process.Path like r"%\\msbuild.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\regsvcs.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\sc.exe" or Process.Path like r"%\\scriptrunner.exe" or Process.Path like r"%\\winword.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\wscript.exe") and not (Process.CommandLine like r"C:\\WINDOWS\\WinSxS\\%" and Process.CommandLine like r"%\\TiWorker.exe -Embedding" or Process.Path like r"%\\svchost.exe" and (Process.CommandLine like r"%-k LocalServiceNetworkRestricted" or Process.CommandLine like r"%-k WerSvcGroup") or Process.Path like r"%\\rundll32.exe" and (Process.CommandLine like r"%/d srrstr.dll,ExecuteScheduledSPPCreation%" or Process.CommandLine like r"%aepdu.dll,AePduRunUpdate%" or Process.CommandLine like r"%shell32.dll,OpenAs\_RunDL%" or Process.CommandLine like r"%Windows.Storage.ApplicationData.dll,CleanupTemporaryState%"))
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects image load events of system control panel items (.cpl) from uncommon or non-system locations which might be the result of sideloading.
# Author: Anish Bogati
RuleId = 2b140a5c-dc02-4bb8-b6b1-8bdb45714cde
RuleName = System Control Panel Item Loaded From Uncommon Location
EventType = Image.Load
Tag = system-control-panel-item-loaded-from-uncommon-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Anish Bogati"}
Query = (Image.Path like r"%\\hdwwiz.cpl" or Image.Path like r"%\\appwiz.cpl") and not (Image.Path like r"%:\\Windows\\System32\\%" or Image.Path like r"%:\\Windows\\SysWOW64\\%" or Image.Path like r"%:\\Windows\\WinSxS\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of the 'Get-Clipboard' cmdlet via CLI
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b9aeac14-2ffd-4ad3-b967-1354a4e628c3
RuleName = PowerShell Get-Clipboard Cmdlet Via CLI
EventType = Process.Start
Tag = proc-start-powershell-get-clipboard-cmdlet-via-cli
RiskScore = 50
Annotation = {"mitre_attack": ["T1115"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Get-Clipboard%"


[ActivityMonitoringRule platform=Windows]
# Detects the usage of "reg.exe" to add Defender folder exclusions. Qbot has been seen using this technique to add exclusions for folders within AppData and ProgramData.
# Author: frack113
RuleId = 48917adc-a28e-4f5d-b729-11e75da8941f
RuleName = Suspicious Windows Defender Folder Exclusion Added Via Reg.EXE
EventType = Process.Start
Tag = proc-start-suspicious-windows-defender-folder-exclusion-added-via-reg.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "frack113"}
Query = Process.Path like r"%\\reg.exe" and (Process.CommandLine like r"%SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths%" or Process.CommandLine like r"%SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Paths%") and Process.CommandLine like r"%ADD %" and Process.CommandLine like r"%/t %" and Process.CommandLine like r"%REG\_DWORD %" and Process.CommandLine like r"%/v %" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%0%"


[ActivityMonitoringRule platform=Windows]
# Detects potentially uncommon child processes of SndVol.exe (the Windows volume mixer)
# Author: X__Junior (Nextron Systems)
RuleId = ba42babc-0666-4393-a4f7-ceaf5a69191e
RuleName = Uncommon Child Processes Of SndVol.exe
EventType = Process.Start
Tag = proc-start-uncommon-child-processes-of-sndvol.exe
RiskScore = 50
Annotation = {"author": "X__Junior (Nextron Systems)"}
Query = Parent.Path like r"%\\SndVol.exe" and not (Process.Path like r"%\\rundll32.exe" and Process.CommandLine like r"% shell32.dll,Control\_RunDLL %")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of wmic utility with the "computersystem" flag in order to obtain information about the machine such as the domain, username, model, etc.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9d7ca793-f6bd-471c-8d0f-11e68b2f0d2f
RuleName = Computer System Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-computer-system-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%computersystem%"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split), wagga (name)
RuleId = f59c3faf-50f3-464b-9f4c-1b67ab512d99
RuleName = Common Autorun Keys Modification
EventType = Reg.Any
Tag = common-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split), wagga (name)"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStart%" or Reg.TargetObject like r"%\\Software\\Wow6432Node\\Microsoft\\Command Processor\\Autorun%" or Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnConnect%" or Reg.TargetObject like r"%\\SYSTEM\\Setup\\CmdLine%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Ctf\\LangBarAddin%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Command Processor\\Autorun%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components%" or Reg.TargetObject like r"%\\SOFTWARE\\Classes\\Protocols\\Handler%" or Reg.TargetObject like r"%\\SOFTWARE\\Classes\\Protocols\\Filter%" or Reg.TargetObject like r"%\\SOFTWARE\\Classes\\Htmlfile\\Shell\\Open\\Command\\(Default)%" or Reg.TargetObject like r"%\\Environment\\UserInitMprLogonScript%" or Reg.TargetObject like r"%\\SOFTWARE\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\Scrnsave.exe%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Internet Explorer\\UrlSearchHooks%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Internet Explorer\\Desktop\\Components%" or Reg.TargetObject like r"%\\Software\\Classes\\Clsid\\{AB8902B4-09CA-4bb6-B78D-A8F59079A8D5}\\Inprocserver32%" or Reg.TargetObject like r"%\\Control Panel\\Desktop\\Scrnsave.exe%") and not (Reg.Value.Data == "(Empty)" or Reg.TargetObject like r"%\\Office\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Classes\\PROTOCOLS\\Handler\\%" or Reg.TargetObject like r"%\\ClickToRunStore\\HKMU\\SOFTWARE\\Classes\\PROTOCOLS\\Handler\\%" or Reg.Value.Data in ["{314111c7-a502-11d2-bbca-00c04f8ec294}", "{3459B272-CC19-4448-86C9-DDC3B4B2FAD3}", "{42089D2D-912D-4018-9087-2B87803E93FB}", "{5504BE45-A83B-4808-900A-3A5C36E7F77A}", "{807583E5-5146-11D5-A672-00B0D022E945}"] or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{8A69D345-D564-463c-AFF1-A69D9E530F96}%" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{9459C573-B17A-45AE-9F64-1857B5D58CEE}%" or Reg.TargetObject like r"%\\Software\\Microsoft\\Active Setup\\Installed Components\\{89820200-ECBD-11cf-8B85-00AA005B4383}%" or Process.Path in ["C:\\Windows\\System32\\poqexec.exe", "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"] or (Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\%" or Process.Path like r"C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\%") and Process.Path like r"%\\OfficeClickToRun.exe")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects browsers starting with the remote debugging flags. Which is a technique often used to perform browser injection attacks
# Author: pH-T (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = b3d34dc5-2efd-4ae3-845f-8ec14921f449
RuleName = Browser Started with Remote Debugging
EventType = Process.Start
Tag = proc-start-browser-started-with-remote-debugging
RiskScore = 50
Annotation = {"mitre_attack": ["T1185"], "author": "pH-T (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"% --remote-debugging-%" or Process.Path like r"%\\firefox.exe" and Process.CommandLine like r"% -start-debugger-server%"


[ActivityMonitoringRule platform=Windows]
# Remove SD (Security Descriptor) value in \Schedule\TaskCache\Tree registry hive to hide schedule task. This technique is used by Tarrask malware
# Author: Sittikorn S
RuleId = acd74772-5f88-45c7-956b-6a7b36c294d2
RuleName = Removal Of SD Value to Hide Schedule Task - Registry
EventType = Reg.Any
Tag = removal-of-sd-value-to-hide-schedule-task-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562"], "author": "Sittikorn S"}
Query = Reg.EventType == "DeleteKey" and Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\%" and Reg.TargetObject like r"%SD%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of the event log files which may indicate an attempt to destroy forensic evidence
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 63c779ba-f638-40a0-a593-ddd45e8b1ddc
RuleName = EventLog EVTX File Deleted
EventType = File.Delete
Tag = eventlog-evtx-file-deleted
RiskScore = 50
Annotation = {"mitre_attack": ["T1070"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"C:\\Windows\\System32\\winevt\\Logs\\%" and File.Path like r"%.evtx"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Hides the file extension through modification of the registry
# Author: frack113
RuleId = 5df86130-4e95-4a54-90f7-26541b40aec2
RuleName = Registry Modification to Hidden File Extension
EventType = Reg.Any
Tag = registry-modification-to-hidden-file-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1137"], "author": "frack113"}
Query = Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt" and Reg.Value.Data == "DWORD (0x00000001)" or Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden" and Reg.Value.Data == "DWORD (0x00000002)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects a potential command line flag anomaly related to "regsvr32" in which the "/i" flag is used without the "/n" which should be uncommon.
# Author: Florian Roth (Nextron Systems)
RuleId = b236190c-1c61-41e9-84b3-3fe03f6d76b0
RuleName = Potential Regsvr32 Commandline Flag Anomaly
EventType = Process.Start
Tag = proc-start-potential-regsvr32-commandline-flag-anomaly
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.010"], "author": "Florian Roth (Nextron Systems)"}
Query = Process.Path like r"%\\regsvr32.exe" and (Process.CommandLine like r"% -i:%" or Process.CommandLine like r"% /i:%") and not Process.CommandLine like r"% -n %" or Process.CommandLine like r"% /n %"


[ActivityMonitoringRule platform=Windows]
# Detects DNS queries for subdomains related to MEGA sharing website
# Author: Aaron Greetham (@beardofbinary) - NCC Group
RuleId = 613c03ba-0779-4a53-8a1f-47f914a4ded3
RuleName = DNS Query To MEGA Hosting Website
EventType = Dns.Query
Tag = dns-query-to-mega-hosting-website
RiskScore = 50
Annotation = {"mitre_attack": ["T1567.002"], "author": "Aaron Greetham (@beardofbinary) - NCC Group"}
Query = Dns.QueryRequest like r"%userstorage.mega.co.nz%"
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.
# Author: Nik Seetharaman, frack113
RuleId = 419dbf2b-8a9b-4bea-bf99-7544b050ec8d
RuleName = Microsoft Workflow Compiler Execution
EventType = Process.Start
Tag = proc-start-microsoft-workflow-compiler-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1127", "T1218"], "author": "Nik Seetharaman, frack113"}
Query = Process.Path like r"%\\Microsoft.Workflow.Compiler.exe" or Process.Name == "Microsoft.Workflow.Compiler.exe"


[ActivityMonitoringRule platform=Windows]
# Detects various command line and scripting engines/processes such as "PowerShell", "Wscript", "Cmd", etc. spawning a "regsvr32" instance.
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = ab37a6ec-6068-432b-a64e-2c7bf95b1d22
RuleName = Scripting/CommandLine Process Spawned Regsvr32
EventType = Process.Start
Tag = proc-start-scripting/commandline-process-spawned-regsvr32
RiskScore = 50
Annotation = {"mitre_attack": ["T1218.010"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Parent.Path like r"%\\cmd.exe" or Parent.Path like r"%\\cscript.exe" or Parent.Path like r"%\\mshta.exe" or Parent.Path like r"%\\powershell\_ise.exe" or Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe" or Parent.Path like r"%\\wscript.exe") and Process.Path like r"%\\regsvr32.exe" and not (Parent.Path == "C:\\Windows\\System32\\cmd.exe" and Process.CommandLine like r"% /s C:\\Windows\\System32\\RpcProxy\\RpcProxy.dll")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects child processes of Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = a20391f8-76fb-437b-abc0-dba2df1952c6
RuleName = Visual Studio NodejsTools PressAnyKey Arbitrary Binary Execution
EventType = Process.Start
Tag = proc-start-visual-studio-nodejstools-pressanykey-arbitrary-binary-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\Microsoft.NodejsTools.PressAnyKey.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "Diskshadow.exe" in script mode using the "/s" flag where the script is located in a potentially suspicious location.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = fa1a7e52-3d02-435b-81b8-00da14dd66c1
RuleName = Diskshadow Script Mode - Execution From Potential Suspicious Location
EventType = Process.Start
Tag = proc-start-diskshadow-script-mode-execution-from-potential-suspicious-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "diskshadow.exe" or Process.Path like r"%\\diskshadow.exe") and (Process.CommandLine like r"%-s %" or Process.CommandLine like r"%/s %") and (Process.CommandLine like r"%:\\Temp\\%" or Process.CommandLine like r"%:\\Windows\\Temp\\%" or Process.CommandLine like r"%\\AppData\\Local\\%" or Process.CommandLine like r"%\\AppData\\Roaming\\%" or Process.CommandLine like r"%\\ProgramData\\%" or Process.CommandLine like r"%\\Users\\Public\\%")


[ActivityMonitoringRule platform=Windows]
# Detects potential persistence using Appx DebugPath
# Author: frack113
RuleId = df4dc653-1029-47ba-8231-3c44238cc0ae
RuleName = Potential Persistence Using DebugPath
EventType = Reg.Any
Tag = potential-persistence-using-debugpath
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.015"], "author": "frack113"}
Query = Reg.TargetObject like r"%Classes\\ActivatableClasses\\Package\\Microsoft.%" and Reg.TargetObject like r"%\\DebugPath" or Reg.TargetObject like r"%\\Software\\Microsoft\\Windows\\CurrentVersion\\PackagedAppXDebug\\Microsoft.%" and Reg.TargetObject like r"%\\(Default)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Executes SCT script using scrobj.dll from a command in entered into a specially prepared INF file.
# Author: frack113
RuleId = ce7cf472-6fcc-490a-9481-3786840b5d9b
RuleName = InfDefaultInstall.exe .inf Execution
EventType = Process.Start
Tag = proc-start-infdefaultinstall.exe-.inf-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = Process.CommandLine like r"%InfDefaultInstall.exe %" and Process.CommandLine like r"%.inf%"


[ActivityMonitoringRule platform=Windows]
# Detects any child process spawning from "Diskshadow.exe". This could be due to executing Diskshadow in interpreter mode or script mode and using the "exec" flag to launch other applications.
# Author: Harjot Singh @cyb3rjy0t
RuleId = 56b1dde8-b274-435f-a73a-fb75eb81262a
RuleName = Diskshadow Child Process Spawned
EventType = Process.Start
Tag = proc-start-diskshadow-child-process-spawned
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Harjot Singh @cyb3rjy0t"}
Query = Parent.Path like r"%\\diskshadow.exe" and not Process.Path like r"%:\\Windows\\System32\\WerFault.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious child processes of electron apps (teams, discord, slack, etc.). This could be a potential sign of ".asar" file tampering (See reference section for more information) or binary execution proxy through specific CLI arguments (see related rule)
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f26eb764-fd89-464b-85e2-dc4a8e6e77b8
RuleName = Suspicious Electron Application Child Processes
EventType = Process.Start
Tag = proc-start-suspicious-electron-application-child-processes
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Parent.Path like r"%\\chrome.exe" or Parent.Path like r"%\\discord.exe" or Parent.Path like r"%\\GitHubDesktop.exe" or Parent.Path like r"%\\keybase.exe" or Parent.Path like r"%\\msedge.exe" or Parent.Path like r"%\\msedgewebview2.exe" or Parent.Path like r"%\\msteams.exe" or Parent.Path like r"%\\slack.exe" or Parent.Path like r"%\\Teams.exe") and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\AppData\\Local\\Temp\\%" or Process.Path like r"%\\Users\\Public\\%" or Process.Path like r"%\\Windows\\Temp\\%" or Process.Path like r"%:\\Temp\\%") and not (Parent.Path like r"%\\chrome.exe" and Process.Path like r"%\\chrome.exe" or Parent.Path like r"%\\discord.exe" and Process.Path like r"%\\discord.exe" or Parent.Path like r"%\\GitHubDesktop.exe" and Process.Path like r"%\\GitHubDesktop.exe" or Parent.Path like r"%\\keybase.exe" and Process.Path like r"%\\keybase.exe" or Parent.Path like r"%\\msedge.exe" and Process.Path like r"%\\msedge.exe" or Parent.Path like r"%\\msedgewebview2.exe" and Process.Path like r"%\\msedgewebview2.exe" or Parent.Path like r"%\\msteams.exe" and Process.Path like r"%\\msteams.exe" or Parent.Path like r"%\\slack.exe" and Process.Path like r"%\\slack.exe" or Parent.Path like r"%\\teams.exe" and Process.Path like r"%\\teams.exe" or Process.Path in ["C:\\Windows\\SysWOW64\\WerFault.exe", "C:\\Windows\\System32\\WerFault.exe"]) and not (Parent.Path like r"%\\Discord.exe" and Process.CommandLine like r"%\\NVSMI\\nvidia-smi.exe%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "whoami.exe" with the "/all" flag
# Author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
RuleId = c248c896-e412-4279-8c15-1c558067b6fa
RuleName = Enumerate All Information With Whoami.EXE
EventType = Process.Start
Tag = proc-start-enumerate-all-information-with-whoami.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1033"], "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\whoami.exe" or Process.Name == "whoami.exe") and (Process.CommandLine like r"% -all%" or Process.CommandLine like r"% /all%")


[ActivityMonitoringRule platform=Windows]
# Detects enabling of the "AllowAnonymousCallback" registry value, which allows a remote connection between computers that do not have a trust relationship.
# Author: X__Junior (Nextron Systems)
RuleId = 4d431012-2ab5-4db7-a84e-b29809da2172
RuleName = Enable Remote Connection Between Anonymous Computer - AllowAnonymousCallback
EventType = Reg.Any
Tag = enable-remote-connection-between-anonymous-computer-allowanonymouscallback
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "X__Junior (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\Microsoft\\WBEM\\CIMOM\\AllowAnonymousCallback%" and Reg.Value.Data == "DWORD (0x00000001)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# An adversary might use WMI to check if a certain remote service is running on a remote device.
# When the test completes, a service information will be displayed on the screen if it exists.
# A common feedback message is that "No instance(s) Available" if the service queried is not running.
# A common error message is "Node - (provided IP or default) ERROR Description =The RPC server is unavailable" if the provided remote host is unreachable
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 76f55eaa-d27f-4213-9d45-7b0e4b60bbae
RuleName = Service Reconnaissance Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-service-reconnaissance-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%service%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of the "wusa.exe" (Windows Update Standalone Installer) utility to extract cab using the "/extract" argument which is not longer supported. This could indicate an attacker using an old technique
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 59b39960-5f9d-4a49-9cef-1e4d2c1d0cb9
RuleName = Wusa Extracting Cab Files
EventType = Process.Start
Tag = proc-start-wusa-extracting-cab-files
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\wusa.exe" and Process.CommandLine like r"%/extract:%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious execution of 'Powercfg.exe' to change lock screen timeout
# Author: frack113
RuleId = f8d6a15e-4bc8-4c27-8e5d-2b10f0b73e5b
RuleName = Suspicious Powercfg Execution To Change Lock Screen Timeout
EventType = Process.Start
Tag = proc-start-suspicious-powercfg-execution-to-change-lock-screen-timeout
RiskScore = 50
Annotation = {"author": "frack113"}
Query = (Process.Path like r"%\\powercfg.exe" or Process.Name == "PowerCfg.exe") and (Process.CommandLine like r"%/setacvalueindex %" and Process.CommandLine like r"%SCHEME\_CURRENT%" and Process.CommandLine like r"%SUB\_VIDEO%" and Process.CommandLine like r"%VIDEOCONLOCK%" or Process.CommandLine like r"%-change %" and Process.CommandLine like r"%-standby-timeout-%")


[ActivityMonitoringRule platform=Windows]
# Detects WMI script event consumers
# Author: Thomas Patzke
RuleId = ec1d5e28-8f3b-4188-a6f8-6e8df81dc28e
RuleName = WMI Persistence - Script Event Consumer
EventType = Process.Start
Tag = proc-start-wmi-persistence-script-event-consumer
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.003"], "author": "Thomas Patzke"}
Query = Process.Path == "C:\\WINDOWS\\system32\\wbem\\scrcons.exe" and Parent.Path == "C:\\Windows\\System32\\svchost.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects inline Windows shell commands redirecting output via the ">" symbol to a suspicious location
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 8e0bb260-d4b2-4fff-bb8d-3f82118e6892
RuleName = Suspicious CMD Shell Output Redirect
EventType = Process.Start
Tag = proc-start-suspicious-cmd-shell-output-redirect
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and (Process.CommandLine like r"%> \\Users\\Public\\%" or Process.CommandLine like r"%> \%APPDATA\%\\%" or Process.CommandLine like r"%> \%TEMP\%\\%" or Process.CommandLine like r"%> \%TMP\%\\%" or Process.CommandLine like r"%> \%USERPROFILE\%\\%" or Process.CommandLine like r"%> C:\\Temp\\%" or Process.CommandLine like r"%> C:\\Users\\Public\\%" or Process.CommandLine like r"%> C:\\Windows\\Temp\\%" or Process.CommandLine like r"%>\\Users\\Public\\%" or Process.CommandLine like r"%>\%APPDATA\%\\%" or Process.CommandLine like r"%>\%TEMP\%\\%" or Process.CommandLine like r"%>\%TMP\%\\%" or Process.CommandLine like r"%>\%USERPROFILE\%\\%" or Process.CommandLine like r"%>C:\\Temp\\%" or Process.CommandLine like r"%>C:\\Users\\Public\\%" or Process.CommandLine like r"%>C:\\Windows\\Temp\\%" or (Process.CommandLine like r"% >%" or Process.CommandLine like r"%\">%" or Process.CommandLine like r"%'>%") and Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\%")


[ActivityMonitoringRule platform=Windows]
# Detects COM object hijacking via TreatAs subkey
# Author: Kutepov Anton, oscd.community
RuleId = 9b0f8a61-91b2-464f-aceb-0527e0a45020
RuleName = Potential COM Object Hijacking Via TreatAs Subkey - Registry
EventType = Reg.Any
Tag = potential-com-object-hijacking-via-treatas-subkey-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.015"], "author": "Kutepov Anton, oscd.community"}
Query = Reg.EventType == "CreateKey" and Reg.TargetObject like r"%HKU\\%" and Reg.TargetObject like r"%Classes\\CLSID\\%" and Reg.TargetObject like r"%\\TreatAs%" and not Process.Path == "C:\\WINDOWS\\system32\\svchost.exe"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.EventType


[ActivityMonitoringRule platform=Windows]
# Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud
# Author: Max Altgelt (Nextron Systems)
RuleId = df1f26d3-bea7-4700-9ea2-ad3e990cf90e
RuleName = Node Process Executions
EventType = Process.Start
Tag = proc-start-node-process-executions
RiskScore = 50
Annotation = {"mitre_attack": ["T1127", "T1059.007"], "author": "Max Altgelt (Nextron Systems)"}
Query = Process.Path like r"%\\Adobe Creative Cloud Experience\\libs\\node.exe" and not Process.CommandLine like r"%Adobe Creative Cloud Experience\\js%"


[ActivityMonitoringRule platform=Windows]
# Detects process dump via legitimate sqldumper.exe binary
# Author: Kirill Kiryanov, oscd.community
RuleId = 23ceaf5c-b6f1-4a32-8559-f2ff734be516
RuleName = Dumping Process via Sqldumper.exe
EventType = Process.Start
Tag = proc-start-dumping-process-via-sqldumper.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.001"], "author": "Kirill Kiryanov, oscd.community"}
Query = Process.Path like r"%\\sqldumper.exe" and (Process.CommandLine like r"%0x0110%" or Process.CommandLine like r"%0x01100:40%")


[ActivityMonitoringRule platform=Windows]
# Detect usage of the "unregmp2.exe" binary as a proxy to launch a custom version of "wmpnscfg.exe"
# Author: frack113
RuleId = 727454c0-d851-48b0-8b89-385611ab0704
RuleName = Lolbin Unregmp2.exe Use As Proxy
EventType = Process.Start
Tag = proc-start-lolbin-unregmp2.exe-use-as-proxy
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "frack113"}
Query = (Process.Path like r"%\\unregmp2.exe" or Process.Name == "unregmp2.exe") and Process.CommandLine like r"% /HideWMP%"


[ActivityMonitoringRule platform=Windows]
# Detects command line containing reference to the "::$index_allocation" stream, which can be used as a technique to prevent access to folders or files from tooling such as "explorer.exe" or "powershell.exe"
# Author: Nasreddine Bencherchali (Nextron Systems), Scoubi (@ScoubiMtl)
RuleId = 0900463c-b33b-49a8-be1d-552a3b553dae
RuleName = Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream - CLI
EventType = Process.Start
Tag = proc-start-potential-hidden-directory-creation-via-ntfs-index_allocation-stream-cli
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.004"], "author": "Nasreddine Bencherchali (Nextron Systems), Scoubi (@ScoubiMtl)"}
Query = Process.CommandLine like r"%::$index\_allocation%"


[ActivityMonitoringRule platform=Windows]
# Detects .NET Framework CLR and .NET Core CLR "cor_enable_profiling" and "cor_profiler" variables being set and configured.
# Author: Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research), Jimmy Bayne (@bohops)
RuleId = ad89044a-8f49-4673-9a55-cbd88a1b374f
RuleName = Enabling COR Profiler Environment Variables
EventType = Reg.Any
Tag = enabling-cor-profiler-environment-variables
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.012"], "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research), Jimmy Bayne (@bohops)"}
Query = Reg.TargetObject like r"%\\COR\_ENABLE\_PROFILING" or Reg.TargetObject like r"%\\COR\_PROFILER" or Reg.TargetObject like r"%\\CORECLR\_ENABLE\_PROFILING" or Reg.TargetObject like r"%\\CORECLR\_PROFILER\_PATH%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects PowerShell scripts that make use of the "Compress-Archive" Cmdlet in order to compress folders and files where the output is stored in a potentially suspicious location that is used often by malware for exfiltration.
# An adversary might compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.
# Author: Nasreddine Bencherchali (Nextron Systems), frack113
RuleId = 85a8e5ba-bd03-4bfb-bbfa-a4409a8f8b98
RuleName = Folder Compress To Potentially Suspicious Output Via Compress-Archive Cmdlet
EventType = Process.Start
Tag = proc-start-folder-compress-to-potentially-suspicious-output-via-compress-archive-cmdlet
RiskScore = 50
Annotation = {"mitre_attack": ["T1074.001"], "author": "Nasreddine Bencherchali (Nextron Systems), frack113"}
Query = Process.CommandLine like r"%Compress-Archive -Path%-DestinationPath $env:TEMP%" or Process.CommandLine like r"%Compress-Archive -Path%-DestinationPath%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%Compress-Archive -Path%-DestinationPath%:\\Windows\\Temp\\%"


[ActivityMonitoringRule platform=Windows]
# Detects execution of "csc.exe" to compile .NET code. Attackers often leverage this to compile code on the fly and use it in other stages.
# Author: Florian Roth (Nextron Systems), X__Junior (Nextron Systems)
RuleId = dcaa3f04-70c3-427a-80b4-b870d73c94c4
RuleName = Dynamic .NET Compilation Via Csc.EXE
EventType = Process.Start
Tag = proc-start-dynamic-.net-compilation-via-csc.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1027.004"], "author": "Florian Roth (Nextron Systems), X__Junior (Nextron Systems)"}
Query = Process.Path like r"%\\csc.exe" and (Process.CommandLine like r"%:\\Perflogs\\%" or Process.CommandLine like r"%:\\Users\\Public\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%\\Temporary Internet%" or Process.CommandLine like r"%\\Windows\\Temp\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Favorites\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Favourites\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Contacts\\%" or Process.CommandLine like r"%:\\Users\\%" and Process.CommandLine like r"%\\Pictures\\%" or Process.CommandLine regex "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal(Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$") and not (Parent.Path like r"C:\\Program Files (x86)\\%" or Parent.Path like r"C:\\Program Files\\%" or Parent.Path == "C:\\Windows\\System32\\sdiagnhost.exe" or Parent.Path == "C:\\Windows\\System32\\inetsrv\\w3wp.exe") and not (Parent.Path == "C:\\ProgramData\\chocolatey\\choco.exe" or Parent.CommandLine like r"%\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection%" or Parent.CommandLine like r"%JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw%" or Parent.CommandLine like r"%cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA%" or Parent.CommandLine like r"%nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects the execution of "ldifde.exe" in order to export organizational Active Directory structure.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 4f7a6757-ff79-46db-9687-66501a02d9ec
RuleName = Active Directory Structure Export Via Ldifde.EXE
EventType = Process.Start
Tag = proc-start-active-directory-structure-export-via-ldifde.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ldifde.exe" or Process.Name == "ldifde.exe") and Process.CommandLine like r"%-f%" and not Process.CommandLine like r"% -i%"


[ActivityMonitoringRule platform=Windows]
# Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
# Author: Victor Sergeev, Daniil Yugoslavskiy, oscd.community
RuleId = 24357373-078f-44ed-9ac4-6d334a668a11
RuleName = Direct Autorun Keys Modification
EventType = Process.Start
Tag = proc-start-direct-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, oscd.community"}
Query = Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%add%" and (Process.CommandLine like r"%\\software\\Microsoft\\Windows\\CurrentVersion\\Run%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders%" or Process.CommandLine like r"%\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell%")


[ActivityMonitoringRule platform=Windows]
# Detects potential abuse of Windows Subsystem for Linux (WSL) binary as a LOLBIN to execute arbitrary Linux or Windows commands
# Author: oscd.community, Zach Stanford @svch0st, Nasreddine Bencherchali (Nextron Systems)
RuleId = dec44ca7-61ad-493c-bfd7-8819c5faa09b
RuleName = Arbitrary Command Execution Using WSL
EventType = Process.Start
Tag = proc-start-arbitrary-command-execution-using-wsl
RiskScore = 50
Annotation = {"mitre_attack": ["T1218", "T1202"], "author": "oscd.community, Zach Stanford @svch0st, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\wsl.exe" or Process.Name == "wsl.exe") and (Process.CommandLine like r"% -e %" or Process.CommandLine like r"% --exec%" or Process.CommandLine like r"% --system%" or Process.CommandLine like r"% --shell-type %" or Process.CommandLine like r"% /mnt/c%" or Process.CommandLine like r"% --user root%" or Process.CommandLine like r"% -u root%" or Process.CommandLine like r"%--debug-shell%") and not (Parent.Path like r"%\\cmd.exe" and Process.CommandLine like r"% -d %" and Process.CommandLine like r"% -e kill %")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects external IP address lookups by non-browser processes via services such as "api.ipify.org". This could be indicative of potential post compromise internet test activity.
# Author: Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)
RuleId = edf3485d-dac4-4d50-90e4-b0e5813f7e60
RuleName = Suspicious Network Connection to IP Lookup Service APIs
EventType = Net.Any
Tag = suspicious-network-connection-to-ip-lookup-service-apis
RiskScore = 50
Annotation = {"mitre_attack": ["T1016"], "author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Net.Target.Name in ["www.ip.cn", "l2.io"] or Net.Target.Name like r"%api.2ip.ua%" or Net.Target.Name like r"%api.bigdatacloud.net%" or Net.Target.Name like r"%api.ipify.org%" or Net.Target.Name like r"%bot.whatismyipaddress.com%" or Net.Target.Name like r"%canireachthe.net%" or Net.Target.Name like r"%checkip.amazonaws.com%" or Net.Target.Name like r"%checkip.dyndns.org%" or Net.Target.Name like r"%curlmyip.com%" or Net.Target.Name like r"%db-ip.com%" or Net.Target.Name like r"%edns.ip-api.com%" or Net.Target.Name like r"%eth0.me%" or Net.Target.Name like r"%freegeoip.app%" or Net.Target.Name like r"%geoipy.com%" or Net.Target.Name like r"%getip.pro%" or Net.Target.Name like r"%icanhazip.com%" or Net.Target.Name like r"%ident.me%" or Net.Target.Name like r"%ifconfig.io%" or Net.Target.Name like r"%ifconfig.me%" or Net.Target.Name like r"%ip-api.com%" or Net.Target.Name like r"%ip.360.cn%" or Net.Target.Name like r"%ip.anysrc.net%" or Net.Target.Name like r"%ip.taobao.com%" or Net.Target.Name like r"%ip.tyk.nu%" or Net.Target.Name like r"%ipaddressworld.com%" or Net.Target.Name like r"%ipapi.co%" or Net.Target.Name like r"%ipconfig.io%" or Net.Target.Name like r"%ipecho.net%" or Net.Target.Name like r"%ipinfo.io%" or Net.Target.Name like r"%ipip.net%" or Net.Target.Name like r"%ipof.in%" or Net.Target.Name like r"%ipv4.icanhazip.com%" or Net.Target.Name like r"%ipv4bot.whatismyipaddress.com%" or Net.Target.Name like r"%ipv6-test.com%" or Net.Target.Name like r"%ipwho.is%" or Net.Target.Name like r"%jsonip.com%" or Net.Target.Name like r"%myexternalip.com%" or Net.Target.Name like r"%seeip.org%" or Net.Target.Name like r"%wgetip.com%" or Net.Target.Name like r"%whatismyip.akamai.com%" or Net.Target.Name like r"%whois.pconline.com.cn%" or Net.Target.Name like r"%wtfismyip.com%") and not (Process.Path like r"%\\brave.exe" or Process.Path in ["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"] or Process.Path in ["C:\\Program Files\\Mozilla Firefox\\firefox.exe", "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"] or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or Process.Path like r"%\\maxthon.exe" or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\%" or Process.Path like r"%\\WindowsApps\\MicrosoftEdge.exe" or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeCore\\%" or Process.Path like r"C:\\Program Files\\Microsoft\\EdgeCore\\%") and (Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe") or Process.Path like r"%\\opera.exe" or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\vivaldi.exe" or Process.Path like r"%\\whale.exe")
GenericProperty1 = Net.Target.Name


[ActivityMonitoringRule platform=Windows]
# Detects loading of "RjvPlatform.dll" by the "SystemResetPlatform.exe" binary which can be abused as a method of DLL side loading since the "$SysReset" directory isn't created by default.
# Author: X__Junior (Nextron Systems)
RuleId = 259dda31-b7a3-444f-b7d8-17f96e8a7d0d
RuleName = Potential RjvPlatform.DLL Sideloading From Default Location
EventType = Image.Load
Tag = potential-rjvplatform.dll-sideloading-from-default-location
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Process.Path == "C:\\Windows\\System32\\SystemResetPlatform\\SystemResetPlatform.exe" and Image.Path == "C:\\$SysReset\\Framework\\Stack\\RjvPlatform.dll"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of wmic to start or stop a service
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 0b7163dc-7eee-4960-af17-c0cd517f92da
RuleName = Service Started/Stopped Via Wmic.EXE
EventType = Process.Start
Tag = proc-start-service-started/stopped-via-wmic.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1047"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and Process.CommandLine like r"% service %" and Process.CommandLine like r"% call %" and (Process.CommandLine like r"%stopservice%" or Process.CommandLine like r"%startservice%")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of a shell (powershell, bash, wsl...) via Visual Studio Code tunnel. Attackers can abuse this functionality to establish a C2 channel and execute arbitrary commands on the system.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = f4a623c2-4ef5-4c33-b811-0642f702c9f1
RuleName = Visual Studio Code Tunnel Shell Execution
EventType = Process.Start
Tag = proc-start-visual-studio-code-tunnel-shell-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1071.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\servers\\Stable-%" and Parent.Path like r"%\\server\\node.exe" and Parent.CommandLine like r"%.vscode-server%" and ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and Process.CommandLine like r"%\\terminal\\browser\\media\\shellIntegration.ps1%" or Process.Path like r"%\\wsl.exe" or Process.Path like r"%\\bash.exe")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
# Author: Julia Fomina, oscd.community
RuleId = 59e938ff-0d6d-4dc3-b13f-36cc28734d4e
RuleName = Execute Code with Pester.bat
EventType = Process.Start
Tag = proc-start-execute-code-with-pester.bat
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001", "T1216"], "author": "Julia Fomina, oscd.community"}
Query = (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and Process.CommandLine like r"%Pester%" and Process.CommandLine like r"%Get-Help%" or Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%pester%" and Process.CommandLine like r"%;%" and (Process.CommandLine like r"%help%" or Process.CommandLine like r"%?%")


[ActivityMonitoringRule platform=Windows]
# Detect the creation of a service with a service binary located in a uncommon directory
# Author: Florian Roth (Nextron Systems)
RuleId = 277dc340-0540-42e7-8efb-5ff460045e07
RuleName = Service Binary in Uncommon Folder
EventType = Reg.Any
Tag = service-binary-in-uncommon-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "Florian Roth (Nextron Systems)"}
Query = (Reg.TargetObject like r"HKLM\\System\\CurrentControlSet\\Services\\%" and Reg.TargetObject like r"%\\Start" and (Process.Path like r"%\\AppData\\Local\\%" or Process.Path like r"%\\AppData\\Roaming\\%") and (Reg.Value.Data in ["DWORD (0x00000000)", "DWORD (0x00000001)", "DWORD (0x00000002)"]) or Reg.TargetObject like r"HKLM\\System\\CurrentControlSet\\Services\\%" and Reg.TargetObject like r"%\\ImagePath" and (Reg.Value.Data like r"%\\AppData\\Local\\%" or Reg.Value.Data like r"%\\AppData\\Roaming\\%")) and not (Process.Path like r"%\\AppData\\Roaming\\Zoom%" or Process.Path like r"%\\AppData\\Local\\Zoom%" or Reg.Value.Data like r"%\\AppData\\Roaming\\Zoom%" or Reg.Value.Data like r"%\\AppData\\Local\\Zoom%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from.
# Author: Sreeman
RuleId = ae9b0bd7-8888-4606-b444-0ed7410cb728
RuleName = Writing Of Malicious Files To The Fonts Folder
EventType = Process.Start
Tag = proc-start-writing-of-malicious-files-to-the-fonts-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1211", "T1059"], "author": "Sreeman"}
Query = (Process.CommandLine like r"%echo%" or Process.CommandLine like r"%copy%" or Process.CommandLine like r"%type%" or Process.CommandLine like r"%file createnew%" or Process.CommandLine like r"%cacls%") and Process.CommandLine like r"%C:\\Windows\\Fonts\\%" and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh%" or Process.CommandLine like r"%.reg%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%" or Process.CommandLine like r"%.inf%" or Process.CommandLine like r"%.cpl%" or Process.CommandLine like r"%.hta%" or Process.CommandLine like r"%.msi%" or Process.CommandLine like r"%.vbs%")


[ActivityMonitoringRule platform=Windows]
# Detects the presence of the keywords "Wscript", "Shell" and "Run" in the command, which could indicate a suspicious activity
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 2c28c248-7f50-417a-9186-a85b223010ee
RuleName = Wscript Shell Run In CommandLine
EventType = Process.Start
Tag = proc-start-wscript-shell-run-in-commandline
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Wscript.%" and Process.CommandLine like r"%.Shell%" and Process.CommandLine like r"%.Run%"


[ActivityMonitoringRule platform=Windows]
# Detects an attempt to execute code or create service on remote host via winrm.vbs.
# Author: Julia Fomina, oscd.community
RuleId = 9df0dd3a-1a5c-47e3-a2bc-30ed177646a0
RuleName = Remote Code Execute via Winrm.vbs
EventType = Process.Start
Tag = proc-start-remote-code-execute-via-winrm.vbs
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Julia Fomina, oscd.community"}
Query = (Process.Path like r"%\\cscript.exe" or Process.Name == "cscript.exe") and Process.CommandLine like r"%winrm%" and Process.CommandLine like r"%invoke Create wmicimv2/Win32\_%" and Process.CommandLine like r"%-r:http%"


[ActivityMonitoringRule platform=Windows]
# DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll
# Author: Ilyas Ochkov, oscd.community, Tim Shelton
RuleId = 4f84b697-c9ed-4420-8ab5-e09af5b2345d
RuleName = New DLL Added to AppInit_DLLs Registry Key
EventType = Reg.Any
Tag = new-dll-added-to-appinit_dlls-registry-key
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.010"], "author": "Ilyas Ochkov, oscd.community, Tim Shelton"}
Query = (Reg.TargetObject like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit\_Dlls" or Reg.TargetObject like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit\_Dlls" or Reg.Key.Path.New like r"%\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit\_Dlls" or Reg.Key.Path.New like r"%\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit\_Dlls") and not Reg.Value.Data == "(Empty)"
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Path.New
GenericProperty2 = Reg.TargetObject
GenericProperty3 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the use of Replace.exe which can be used to replace file with another file
# Author: frack113
RuleId = 9292293b-8496-4715-9db6-37028dcda4b3
RuleName = Replace.exe Usage
EventType = Process.Start
Tag = proc-start-replace.exe-usage
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "frack113"}
Query = Process.Path like r"%\\replace.exe" and (Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/a%")


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading of "vivaldi_elf.dll"
# Author: X__Junior (Nextron Systems)
RuleId = 2092cacb-d77b-4f98-ab0d-32b32f99a054
RuleName = Potential Vivaldi_elf.DLL Sideloading
EventType = Image.Load
Tag = potential-vivaldi_elf.dll-sideloading
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "X__Junior (Nextron Systems)"}
Query = Image.Path like r"%\\vivaldi\_elf.dll" and not (Process.Path like r"%\\Vivaldi\\Application\\vivaldi.exe" and Image.Path like r"%\\Vivaldi\\Application\\%")
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 70e8e9b4-6a93-4cb7-8cde-da69502e7aff
RuleName = VMGuestLib DLL Sideload
EventType = Image.Load
Tag = vmguestlib-dll-sideload
RiskScore = 50
Annotation = {"mitre_attack": ["T1574.001", "T1574.002"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Image.Path like r"%\\VMware\\VMware Tools\\vmStatsProvider\\win32%" and Image.Path like r"%\\vmGuestLib.dll%" and Process.Path like r"%\\Windows\\System32\\wbem\\WmiApSrv.exe" and not Image.IsSigned == "true"
GenericProperty1 = Image.Path
GenericProperty2 = Image.IsSigned


[ActivityMonitoringRule platform=Windows]
# Detects calls to "LoadAssemblyFromPath" or "LoadAssemblyFromNS" that are part of the "CL_LoadAssembly.ps1" script. This can be abused to load different assemblies and bypass App locker controls.
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = c57872c7-614f-4d7f-a40d-b78c8df2d30d
RuleName = Assembly Loading Via CL_LoadAssembly.ps1
EventType = Process.Start
Tag = proc-start-assembly-loading-via-cl_loadassembly.ps1
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%LoadAssemblyFromPath %" or Process.CommandLine like r"%LoadAssemblyFromNS %"


[ActivityMonitoringRule platform=Windows]
# Detects a file or folder's permissions being modified or tampered with.
# Author: Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)
RuleId = 37ae075c-271b-459b-8d7b-55ad5f993dd8
RuleName = File or Folder Permissions Modifications
EventType = Process.Start
Tag = proc-start-file-or-folder-permissions-modifications
RiskScore = 50
Annotation = {"mitre_attack": ["T1222.001"], "author": "Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)"}
Query = ((Process.Path like r"%\\cacls.exe" or Process.Path like r"%\\icacls.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe") and (Process.CommandLine like r"%/grant%" or Process.CommandLine like r"%/setowner%" or Process.CommandLine like r"%/inheritance:r%") or Process.Path like r"%\\attrib.exe" and Process.CommandLine like r"%-r%" or Process.Path like r"%\\takeown.exe") and not (Process.CommandLine like r"%ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\connectivity.history /reset" or Process.CommandLine like r"%ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\config.properties /grant :r %" and Process.CommandLine like r"%S-1-5-19:F%" or Process.CommandLine like r"%\\AppData\\Local\\Programs\\Microsoft VS Code%" or Process.CommandLine like r"%:\\Program Files\\Microsoft VS Code%" or Process.CommandLine like r"%:\\Program Files (x86)\\Avira%" or Process.CommandLine like r"%:\\Program Files\\Avira%")


[ActivityMonitoringRule platform=Windows]
# Loading unsigned image (DLL, EXE) into LSASS process
# Author: Teymur Kheirkhabarov, oscd.community
RuleId = 857c8db3-c89b-42fb-882b-f681c7cf4da2
RuleName = Unsigned Image Loaded Into LSASS Process
EventType = Image.Load
Tag = unsigned-image-loaded-into-lsass-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1003.001"], "author": "Teymur Kheirkhabarov, oscd.community"}
Query = Process.Path like r"%\\lsass.exe" and Image.IsSigned == "false"
GenericProperty1 = Image.IsSigned


[ActivityMonitoringRule platform=Windows]
# Detects the Setting of Windows Defender Exclusions
# Author: Christian Burkard (Nextron Systems)
RuleId = a982fc9c-6333-4ffb-a51d-addb04e8b529
RuleName = Windows Defender Exclusions Added - Registry
EventType = Reg.Any
Tag = windows-defender-exclusions-added-registry
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Christian Burkard (Nextron Systems)"}
Query = Reg.TargetObject like r"%\\Microsoft\\Windows Defender\\Exclusions%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects rename operations of files with non-DLL extensions to files with a DLL extension. This is often performed by malware in order to avoid initial detections based on extensions.
# Author: frack113
RuleId = bbfd974c-248e-4435-8de6-1e938c79c5c1
RuleName = Non-DLL Extension File Renamed With DLL Extension
EventType = File.Rename
Tag = non-dll-extension-file-renamed-with-dll-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.008"], "author": "frack113"}
Query = File.Path like r"%.dll" and not (File.PreviousPath like r"%.dll" or File.PreviousPath like r"%.tmp" or File.PreviousPath == "" or isnull(File.PreviousPath) or Process.Path like r"%:\\Windows\\WinSxS\\%" and Process.Path like r"%\\TiWorker.exe" or Process.Path like r"%:\\Windows\\System32\\wuauclt.exe" or File.Path like r"%:\\$WINDOWS.~BT\\Sources\\%" or Process.Path like r"%:\\Program Files (x86)\\%" or Process.Path like r"%:\\Program Files\\%") and not File.PreviousPath like r"%\\SquirrelTemp\\temp%"
GenericProperty1 = File.Path
GenericProperty2 = File.PreviousPath


[ActivityMonitoringRule platform=Windows]
# Detects CLR DLL being loaded by an Office Product
# Author: Antonlovesdnb
RuleId = d13c43f0-f66b-4279-8b2c-5912077c1780
RuleName = CLR DLL Loaded Via Office Applications
EventType = Image.Load
Tag = clr-dll-loaded-via-office-applications
RiskScore = 50
Annotation = {"mitre_attack": ["T1204.002"], "author": "Antonlovesdnb"}
Query = (Process.Path like r"%\\excel.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\outlook.exe" or Process.Path like r"%\\onenote.exe" or Process.Path like r"%\\onenoteim.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\winword.exe") and Image.Path like r"%\\clr.dll%"
GenericProperty1 = Image.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of "curl.exe" with the "insecure" flag over proxy or DOH.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 2c1486f5-02e8-4f86-9099-b97f2da4ed77
RuleName = Insecure Proxy/DOH Transfer Via Curl.EXE
EventType = Process.Start
Tag = proc-start-insecure-proxy/doh-transfer-via-curl.exe
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and (Process.CommandLine like r"%--doh-insecure%" or Process.CommandLine like r"%--proxy-insecure%")


[ActivityMonitoringRule platform=Windows]
# Deployment Image Servicing and Management tool. DISM is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
# Author: frack113
RuleId = 43e32da2-fdd0-4156-90de-50dfd62636f9
RuleName = Dism Remove Online Package
EventType = Process.Start
Tag = proc-start-dism-remove-online-package
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "frack113"}
Query = Process.Path like r"%\\DismHost.exe" and Parent.CommandLine like r"%/Online%" and Parent.CommandLine like r"%/Disable-Feature%" or Process.Path like r"%\\Dism.exe" and Process.CommandLine like r"%/Online%" and Process.CommandLine like r"%/Disable-Feature%"
GenericProperty1 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# Detects process creation events that use the Sysnative folder (common for CobaltStrike spawns)
# Author: Max Altgelt (Nextron Systems)
RuleId = 3c1b5fb0-c72f-45ba-abd1-4d4c353144ab
RuleName = Process Creation Using Sysnative Folder
EventType = Process.Start
Tag = proc-start-process-creation-using-sysnative-folder
RiskScore = 50
Annotation = {"mitre_attack": ["T1055"], "author": "Max Altgelt (Nextron Systems)"}
Query = Process.CommandLine like r"%:\\Windows\\Sysnative\\%" or Process.Path like r"%:\\Windows\\Sysnative\\%"


[ActivityMonitoringRule platform=Windows]
# A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = dca1b3e8-e043-4ec8-85d7-867f334b5724
RuleName = Suspicious PFX File Creation
EventType = File.Create
Tag = suspicious-pfx-file-creation
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.004"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = File.Path like r"%.pfx" and not (File.Path like r"%\\Templates\\Windows\\Windows\_TemporaryKey.pfx%" and File.Path like r"%\\CMake\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious IIS native-code module installations via command line
# Author: Florian Roth (Nextron Systems)
RuleId = 9465ddf4-f9e4-4ebd-8d98-702df3a93239
RuleName = IIS Native-Code Module Command Line Installation
EventType = Process.Start
Tag = proc-start-iis-native-code-module-command-line-installation
RiskScore = 50
Annotation = {"mitre_attack": ["T1505.003"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\appcmd.exe" or Process.Name == "appcmd.exe") and Process.CommandLine like r"%install%" and Process.CommandLine like r"%module%" and (Process.CommandLine like r"%-name:%" or Process.CommandLine like r"%/name:%") and not Parent.Path == "C:\\Windows\\System32\\inetsrv\\iissetup.exe"
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of the "cloudflared" tool with the tunnel "cleanup" flag in order to cleanup tunnel connections.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 7050bba1-1aed-454e-8f73-3f46f09ce56a
RuleName = Cloudflared Tunnel Connections Cleanup
EventType = Process.Start
Tag = proc-start-cloudflared-tunnel-connections-cleanup
RiskScore = 50
Annotation = {"mitre_attack": ["T1102", "T1090", "T1572"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"% tunnel %" and Process.CommandLine like r"%cleanup %" and (Process.CommandLine like r"%-config %" or Process.CommandLine like r"%-connector-id %")


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious SQL queries using SQLCmd targeting the Veeam backup databases in order to steal information.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 696bfb54-227e-4602-ac5b-30d9d2053312
RuleName = Veeam Backup Database Suspicious Query
EventType = Process.Start
Tag = proc-start-veeam-backup-database-suspicious-query
RiskScore = 50
Annotation = {"mitre_attack": ["T1005"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Path like r"%\\sqlcmd.exe" and Process.CommandLine like r"%VeeamBackup%" and Process.CommandLine like r"%From %" and (Process.CommandLine like r"%BackupRepositories%" or Process.CommandLine like r"%Backups%" or Process.CommandLine like r"%Credentials%" or Process.CommandLine like r"%HostCreds%" or Process.CommandLine like r"%SmbFileShares%" or Process.CommandLine like r"%Ssh\_creds%" or Process.CommandLine like r"%VSphereInfo%")


[ActivityMonitoringRule platform=Windows]
# Detects the mounting of Windows SMB shares over QUIC, which can be an unexpected event in some enterprise environments.
# Author: frack113
RuleId = 2238d337-42fb-4971-9a68-63570f2aede4
RuleName = SMB over QUIC Via Net.EXE
EventType = Process.Start
Tag = proc-start-smb-over-quic-via-net.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1570"], "author": "frack113"}
Query = (Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Name in ["net.exe", "net1.exe"]) and Process.CommandLine like r"%/TRANSPORT:QUIC%"


[ActivityMonitoringRule platform=Windows]
# Detects the execution of concatenated commands via "cmd.exe". Pikabot often executes a combination of multiple commands via the command handler "cmd /c" in order to download and execute additional payloads.
# Commands such as "curl", "wget" in order to download extra payloads. "ping" and "timeout" are abused to introduce delays in the command execution and "Rundll32" is also used to execute malicious DLL files.
# In the observed Pikabot infections, a combination of the commands described above are used to orchestrate the download and execution of malicious DLL files.
# Author: Alejandro Houspanossian ('@lekz86')
RuleId = e5144106-8198-4f6e-bfc2-0a551cc8dd94
RuleName = Potential Pikabot Infection - Suspicious Command Combinations Via Cmd.EXE
EventType = Process.Start
Tag = proc-start-potential-pikabot-infection-suspicious-command-combinations-via-cmd.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.003", "T1105", "T1218"], "author": "Alejandro Houspanossian ('@lekz86')"}
Query = Process.CommandLine like r"%cmd%" and Process.CommandLine like r"%/c%" and (Process.CommandLine like r"% & %" or Process.CommandLine like r"% || %") and (Process.CommandLine like r"% curl%" or Process.CommandLine like r"% wget%" or Process.CommandLine like r"% timeout %" or Process.CommandLine like r"% ping %") and (Process.CommandLine like r"% rundll32%" or Process.CommandLine like r"% mkdir %")


[ActivityMonitoringRule platform=Windows]
# Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders.
# Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)
# Author: xknow (@xknow_infosec), xorxes (@xor_xes)
RuleId = f2485272-a156-4773-82d7-1d178bc4905b
RuleName = Suspicious Service Installed
EventType = Reg.Any
Tag = suspicious-service-installed
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "xknow (@xknow_infosec), xorxes (@xor_xes)"}
Query = (Reg.TargetObject in ["HKLM\\System\\CurrentControlSet\\Services\\NalDrv\\ImagePath", "HKLM\\System\\CurrentControlSet\\Services\\PROCEXP152\\ImagePath"]) and not ((Process.Path like r"%\\procexp64.exe" or Process.Path like r"%\\procexp.exe" or Process.Path like r"%\\procmon64.exe" or Process.Path like r"%\\procmon.exe" or Process.Path like r"%\\handle.exe" or Process.Path like r"%\\handle64.exe") and Reg.Value.Data like r"%\\WINDOWS\\system32\\Drivers\\PROCEXP152.SYS%")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the usage of the "Squirrel.exe" to download arbitrary files. This binary is part of multiple Electron based software installations (Slack, Teams, Discord, etc.)
# Author: Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community
RuleId = 1e75c1cc-c5d4-42aa-ac3d-91b0b68b3b4c
RuleName = Arbitrary File Download Via Squirrel.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-squirrel.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community"}
Query = (Process.Path like r"%\\squirrel.exe" or Process.Path like r"%\\update.exe") and (Process.CommandLine like r"% --download %" or Process.CommandLine like r"% --update %" or Process.CommandLine like r"% --updateRollback=%") and Process.CommandLine like r"%http%"


[ActivityMonitoringRule platform=Windows]
# Detect set UseActionCenterExperience to 0 to disable the Windows security center notification
# Author: frack113
RuleId = 3ae1a046-f7db-439d-b7ce-b8b366b81fa6
RuleName = Disable Windows Security Center Notifications
EventType = Reg.Any
Tag = disable-windows-security-center-notifications
RiskScore = 50
Annotation = {"mitre_attack": ["T1112"], "author": "frack113"}
Query = Reg.TargetObject like r"%Windows\\CurrentVersion\\ImmersiveShell\\UseActionCenterExperience" and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects potential DLL sideloading using the Microsoft Office winword process via the '/l' flag.
# Author: Victor Sergeev, oscd.community
RuleId = f7375e28-5c14-432f-b8d1-1db26c832df3
RuleName = Potential Arbitrary DLL Load Using Winword
EventType = Process.Start
Tag = proc-start-potential-arbitrary-dll-load-using-winword
RiskScore = 50
Annotation = {"mitre_attack": ["T1202"], "author": "Victor Sergeev, oscd.community"}
Query = (Process.Path like r"%\\WINWORD.exe" or Process.Name == "WinWord.exe") and Process.CommandLine like r"%/l %" and Process.CommandLine like r"%.dll%"


[ActivityMonitoringRule platform=Windows]
# Detects installation of a new shim using sdbinst.exe.
# Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims
# Author: Markus Neis
RuleId = 517490a7-115a-48c6-8862-1a481504d5a8
RuleName = Potential Shim Database Persistence via Sdbinst.EXE
EventType = Process.Start
Tag = proc-start-potential-shim-database-persistence-via-sdbinst.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.011"], "author": "Markus Neis"}
Query = (Process.Path like r"%\\sdbinst.exe" or Process.Name == "sdbinst.exe") and Process.CommandLine like r"%.sdb%" and not (Parent.Path like r"%\\msiexec.exe" and (Process.CommandLine like r"%:\\Program Files (x86)\\IIS Express\\iisexpressshim.sdb%" or Process.CommandLine like r"%:\\Program Files\\IIS Express\\iisexpressshim.sdb%"))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making network connections.
# One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = c649a6c7-cd8c-4a78-9c04-000fc76df954
RuleName = Potentially Suspicious Wuauclt Network Connection
EventType = Net.Any
Tag = potentially-suspicious-wuauclt-network-connection
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = Process.Path like r"%wuauclt%" and Process.CommandLine like r"% /RunHandlerComServer%" and not (Net.Target.Ip like r"127.%" or Net.Target.Ip like r"10.%" or Net.Target.Ip like r"169.254.%" or Net.Target.Ip like r"172.16.%" or Net.Target.Ip like r"172.17.%" or Net.Target.Ip like r"172.18.%" or Net.Target.Ip like r"172.19.%" or Net.Target.Ip like r"172.20.%" or Net.Target.Ip like r"172.21.%" or Net.Target.Ip like r"172.22.%" or Net.Target.Ip like r"172.23.%" or Net.Target.Ip like r"172.24.%" or Net.Target.Ip like r"172.25.%" or Net.Target.Ip like r"172.26.%" or Net.Target.Ip like r"172.27.%" or Net.Target.Ip like r"172.28.%" or Net.Target.Ip like r"172.29.%" or Net.Target.Ip like r"172.30.%" or Net.Target.Ip like r"172.31.%" or Net.Target.Ip like r"192.168.%" or Net.Target.Ip in ["::1/128"] or Net.Target.Ip like r"fe8%" or Net.Target.Ip like r"fe9%" or Net.Target.Ip like r"fea%" or Net.Target.Ip like r"feb%" or Net.Target.Ip like r"fc%" or Net.Target.Ip like r"fd%" or Net.Target.Ip like r"20.184.%" or Net.Target.Ip like r"20.185.%" or Net.Target.Ip like r"20.186.%" or Net.Target.Ip like r"20.187.%" or Net.Target.Ip like r"20.188.%" or Net.Target.Ip like r"20.189.%" or Net.Target.Ip like r"20.190.%" or Net.Target.Ip like r"20.191.%" or Net.Target.Ip like r"20.192.%" or Net.Target.Ip like r"20.193.%" or Net.Target.Ip like r"20.194.%" or Net.Target.Ip like r"20.195.%" or Net.Target.Ip like r"20.196.%" or Net.Target.Ip like r"20.197.%" or Net.Target.Ip like r"20.198.%" or Net.Target.Ip like r"20.199.%" or Net.Target.Ip like r"20.200.%" or Net.Target.Ip like r"20.201.%" or Net.Target.Ip like r"20.202.%" or Net.Target.Ip like r"20.203.%" or Net.Target.Ip like r"20.204.%" or Net.Target.Ip like r"20.205.%" or Net.Target.Ip like r"20.206.%" or Net.Target.Ip like r"20.207.%" or Net.Target.Ip like r"20.208.%" or Net.Target.Ip like r"20.209.%" or Net.Target.Ip like r"20.210.%" or Net.Target.Ip like r"20.211.%" or Net.Target.Ip like r"20.212.%" or Net.Target.Ip like r"20.213.%" or Net.Target.Ip like r"20.214.%" or Net.Target.Ip like r"20.215.%" or Net.Target.Ip like r"20.216.%" or Net.Target.Ip like r"20.217.%" or Net.Target.Ip like r"20.218.%" or Net.Target.Ip like r"20.219.%" or Net.Target.Ip like r"20.220.%" or Net.Target.Ip like r"20.221.%" or Net.Target.Ip like r"20.222.%" or Net.Target.Ip like r"20.223.%" or Net.Target.Ip like r"20.224.%" or Net.Target.Ip like r"20.225.%" or Net.Target.Ip like r"20.226.%" or Net.Target.Ip like r"20.227.%" or Net.Target.Ip like r"20.228.%" or Net.Target.Ip like r"20.229.%" or Net.Target.Ip like r"20.230.%" or Net.Target.Ip like r"20.231.%" or Net.Target.Ip like r"20.232.%" or Net.Target.Ip like r"20.233.%" or Net.Target.Ip like r"20.234.%" or Net.Target.Ip like r"20.235.%" or Net.Target.Ip like r"20.236.%" or Net.Target.Ip like r"20.237.%" or Net.Target.Ip like r"20.238.%" or Net.Target.Ip like r"20.239.%" or Net.Target.Ip like r"20.240.%" or Net.Target.Ip like r"20.241.%" or Net.Target.Ip like r"20.242.%" or Net.Target.Ip like r"20.243.%" or Net.Target.Ip like r"20.244.%" or Net.Target.Ip like r"20.245.%" or Net.Target.Ip like r"20.246.%" or Net.Target.Ip like r"20.247.%" or Net.Target.Ip like r"20.248.%" or Net.Target.Ip like r"20.249.%" or Net.Target.Ip like r"20.250.%" or Net.Target.Ip like r"20.251.%" or Net.Target.Ip like r"20.252.%" or Net.Target.Ip like r"20.253.%" or Net.Target.Ip like r"20.254.%" or Net.Target.Ip like r"20.255.%" or Net.Target.Ip like r"23.79.%" or Net.Target.Ip like r"51.10.%" or Net.Target.Ip like r"51.11.%" or Net.Target.Ip like r"51.103.%" or Net.Target.Ip like r"51.104.%" or Net.Target.Ip like r"51.105.%" or Net.Target.Ip like r"52.224.%" or Net.Target.Ip like r"52.225.%" or Net.Target.Ip like r"52.226.%" or Net.Target.Ip like r"52.227.%" or Net.Target.Ip like r"52.228.%" or Net.Target.Ip like r"52.229.%" or Net.Target.Ip like r"52.230.%" or Net.Target.Ip like r"52.231.%" or Net.Target.Ip like r"52.232.%" or Net.Target.Ip like r"52.233.%" or Net.Target.Ip like r"52.234.%" or Net.Target.Ip like r"52.235.%" or Net.Target.Ip like r"52.236.%" or Net.Target.Ip like r"52.237.%" or Net.Target.Ip like r"52.238.%" or Net.Target.Ip like r"52.239.%" or Net.Target.Ip like r"52.240.%" or Net.Target.Ip like r"52.241.%" or Net.Target.Ip like r"52.242.%" or Net.Target.Ip like r"52.243.%" or Net.Target.Ip like r"52.244.%" or Net.Target.Ip like r"52.245.%" or Net.Target.Ip like r"52.246.%" or Net.Target.Ip like r"52.247.%" or Net.Target.Ip like r"52.248.%" or Net.Target.Ip like r"52.249.%" or Net.Target.Ip like r"52.250.%" or Net.Target.Ip like r"52.251.%" or Net.Target.Ip like r"52.252.%" or Net.Target.Ip like r"52.253.%" or Net.Target.Ip like r"52.254.%" or Net.Target.Ip like r"52.255.%" or Process.CommandLine like r"%:\\Windows\\UUS\\Packages\\Preview\\amd64\\updatedeploy.dll /ClassId%" or Process.CommandLine like r"%:\\Windows\\UUS\\amd64\\UpdateDeploy.dll /ClassId%" or Process.CommandLine like r"%:\\Windows\\WinSxS\\%" and Process.CommandLine like r"%\\UpdateDeploy.dll /ClassId %" or isnull(Process.CommandLine) or Process.CommandLine == "")
GenericProperty1 = Net.Target.Ip


[ActivityMonitoringRule platform=Windows]
# Detects the creation of the LiveKD driver, which is used for live kernel debugging
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 16fe46bb-4f64-46aa-817d-ff7bec4a2352
RuleName = LiveKD Driver Creation
EventType = File.Create
Tag = livekd-driver-creation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path == "C:\\Windows\\System32\\drivers\\LiveKdD.SYS" and (Process.Path like r"%\\livekd.exe" or Process.Path like r"%\\livek64.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects a code page switch in command line or batch scripts to a rare language
# Author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community
RuleId = c7942406-33dd-4377-a564-0f62db0593a3
RuleName = Suspicious CodePage Switch Via CHCP
EventType = Process.Start
Tag = proc-start-suspicious-codepage-switch-via-chcp
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community"}
Query = Process.Path like r"%\\chcp.com" and (Process.CommandLine like r"% 936" or Process.CommandLine like r"% 1258")


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of tomcat WebServer logs which may indicate an attempt to destroy forensic evidence
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 270185ff-5f50-4d6d-a27f-24c3b8c9fef8
RuleName = Tomcat WebServer Logs Deleted
EventType = File.Delete
Tag = tomcat-webserver-logs-deleted
RiskScore = 50
Annotation = {"mitre_attack": ["T1070"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\Tomcat%" and File.Path like r"%\\logs\\%" and (File.Path like r"%catalina.%" or File.Path like r"%\_access\_log.%" or File.Path like r"%localhost.%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects suspicious process run from unusual locations
# Author: juju4, Jonhnathan Ribeiro, oscd.community
RuleId = 15b75071-74cc-47e0-b4c6-b43744a62a2b
RuleName = Suspicious Process Start Locations
EventType = Process.Start
Tag = proc-start-suspicious-process-start-locations
RiskScore = 50
Annotation = {"mitre_attack": ["T1036"], "author": "juju4, Jonhnathan Ribeiro, oscd.community"}
Query = Process.Path like r"%:\\RECYCLER\\%" or Process.Path like r"%:\\SystemVolumeInformation\\%" or Process.Path like r"C:\\Windows\\Tasks\\%" or Process.Path like r"C:\\Windows\\debug\\%" or Process.Path like r"C:\\Windows\\fonts\\%" or Process.Path like r"C:\\Windows\\help\\%" or Process.Path like r"C:\\Windows\\drivers\\%" or Process.Path like r"C:\\Windows\\addins\\%" or Process.Path like r"C:\\Windows\\cursors\\%" or Process.Path like r"C:\\Windows\\system32\\tasks\\%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of special strings/null bits in order to potentially bypass AMSI functionalities
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 92a974db-ab84-457f-9ec0-55db83d7a825
RuleName = Potential AMSI Bypass Using NULL Bits
EventType = Process.Start
Tag = proc-start-potential-amsi-bypass-using-null-bits
RiskScore = 50
Annotation = {"mitre_attack": ["T1562.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%if(0){{{0}}}' -f $(0 -as [char]) +%" or Process.CommandLine like r"%#<NULL>%"


[ActivityMonitoringRule platform=Windows]
# Detects usage of findstr with the "EVERYONE" or "BUILTIN" keywords. This is seen being used in combination with "icacls" to look for misconfigured files or folders permissions
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 47e4bab7-c626-47dc-967b-255608c9a920
RuleName = Permission Misconfiguration Reconnaissance Via Findstr.EXE
EventType = Process.Start
Tag = proc-start-permission-misconfiguration-reconnaissance-via-findstr.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.006"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\find.exe" or Process.Path like r"%\\findstr.exe" or Process.Name in ["FIND.EXE", "FINDSTR.EXE"]) and (Process.CommandLine like r"%\"Everyone\"%" or Process.CommandLine like r"%'Everyone'%" or Process.CommandLine like r"%\"BUILTIN\\\"%" or Process.CommandLine like r"%'BUILTIN\\'%") or Process.CommandLine like r"%icacls %" and Process.CommandLine like r"%findstr %" and Process.CommandLine like r"%Everyone%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious reconnaissance command line activity on Windows systems using Net.EXE
# Check if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)
# Author: Florian Roth (Nextron Systems), omkar72, @svch0st, Nasreddine Bencherchali (Nextron Systems)
RuleId = d95de845-b83c-4a9a-8a6a-4fc802ebf6c0
RuleName = Suspicious Group And Account Reconnaissance Activity Using Net.EXE
EventType = Process.Start
Tag = proc-start-suspicious-group-and-account-reconnaissance-activity-using-net.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1087.001", "T1087.002"], "author": "Florian Roth (Nextron Systems), omkar72, @svch0st, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Name in ["net.exe", "net1.exe"]) and ((Process.CommandLine like r"% group %" or Process.CommandLine like r"% localgroup %") and (Process.CommandLine like r"%domain admins%" or Process.CommandLine like r"% administrator%" or Process.CommandLine like r"% administrateur%" or Process.CommandLine like r"%enterprise admins%" or Process.CommandLine like r"%Exchange Trusted Subsystem%" or Process.CommandLine like r"%Remote Desktop Users%" or Process.CommandLine like r"%Utilisateurs du Bureau à distance%" or Process.CommandLine like r"%Usuarios de escritorio remoto%" or Process.CommandLine like r"% /do%") and not Process.CommandLine like r"% /add%" or Process.CommandLine like r"% accounts %" and Process.CommandLine like r"% /do%")


[ActivityMonitoringRule platform=Windows]
# Detects execution of the Notepad++ updater (gup) to launch other commands or executables
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = d65aee4d-2292-4cea-b832-83accd6cfa43
RuleName = Arbitrary Binary Execution Using GUP Utility
EventType = Process.Start
Tag = proc-start-arbitrary-binary-execution-using-gup-utility
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\gup.exe" and Process.Path like r"%\\explorer.exe" and not (Process.Path like r"%\\explorer.exe" and Process.CommandLine like r"%\\Notepad++\\notepad++.exe%" or Parent.Path like r"%\\Notepad++\\updater\\%" or isnull(Process.CommandLine))
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detect usage of the "ssh.exe" binary as a proxy to launch other programs
# Author: frack113, Nasreddine Bencherchali
RuleId = 7d6d30b8-5b91-4b90-a891-46cccaf29598
RuleName = Lolbin Ssh.exe Use As Proxy
EventType = Process.Start
Tag = proc-start-lolbin-ssh.exe-use-as-proxy
RiskScore = 50
Annotation = {"mitre_attack": ["T1202"], "author": "frack113, Nasreddine Bencherchali"}
Query = Parent.Path == "C:\\Windows\\System32\\OpenSSH\\sshd.exe" or Process.Path like r"%\\ssh.exe" and (Process.CommandLine like r"%ProxyCommand=%" or Process.CommandLine like r"%PermitLocalCommand%" and Process.CommandLine like r"%LocalCommand%")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the creation of binaries in the WinSxS folder by non-system processes
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 34746e8c-5fb8-415a-b135-0abc167e912a
RuleName = WinSxS Executable File Creation By Non-System Process
EventType = File.Create
Tag = winsxs-executable-file-creation-by-non-system-process
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"C:\\Windows\\WinSxS\\%" and File.Path like r"%.exe" and not (Process.Path like r"C:\\Windows\\Systems32\\%" or Process.Path like r"C:\\Windows\\SysWOW64\\%" or Process.Path like r"C:\\Windows\\WinSxS\\%")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
# Author: Julia Fomina, oscd.community
RuleId = 074e0ded-6ced-4ebd-8b4d-53f55908119d
RuleName = AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl
EventType = Process.Start
Tag = proc-start-awl-bypass-with-winrm.vbs-and-malicious-wsmpty.xsl/wsmtxt.xsl
RiskScore = 50
Annotation = {"mitre_attack": ["T1216"], "author": "Julia Fomina, oscd.community"}
Query = Process.CommandLine like r"%winrm%" and (Process.CommandLine like r"%format:pretty%" or Process.CommandLine like r"%format:\"pretty\"%" or Process.CommandLine like r"%format:\"text\"%" or Process.CommandLine like r"%format:text%") and not (Process.Path like r"C:\\Windows\\System32\\%" or Process.Path like r"C:\\Windows\\SysWOW64\\%")


[ActivityMonitoringRule platform=Windows]
# Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to get the location of the script to execute
# Author: frack113
RuleId = fe20dda1-6f37-4379-bbe0-a98d400cae90
RuleName = Potential Persistence Via Scrobj.dll COM Hijacking
EventType = Reg.Any
Tag = potential-persistence-via-scrobj.dll-com-hijacking
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.015"], "author": "frack113"}
Query = Reg.TargetObject like r"%InprocServer32\\(Default)" and Reg.Value.Data == "C:\\WINDOWS\\system32\\scrobj.dll"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects usage of Sysinternals PsSuspend which can be abused to suspend critical processes
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 48bbc537-b652-4b4e-bd1d-281172df448f
RuleName = Sysinternals PsSuspend Execution
EventType = Process.Start
Tag = proc-start-sysinternals-pssuspend-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1543.003"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.Name == "pssuspend.exe" or Process.Path like r"%\\pssuspend.exe" or Process.Path like r"%\\pssuspend64.exe"


[ActivityMonitoringRule platform=Windows]
# Detects modifications to the hidden files keys in registry. This technique is abused by several malware families to hide their files from normal users.
# Author: frack113
RuleId = 5a5152f1-463f-436b-b2f5-8eceb3964b42
RuleName = Modification of Explorer Hidden Keys
EventType = Reg.Any
Tag = modification-of-explorer-hidden-keys
RiskScore = 50
Annotation = {"mitre_attack": ["T1564.001"], "author": "frack113"}
Query = (Reg.TargetObject in ["HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden"]) and Reg.Value.Data == "DWORD (0x00000000)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child processes of WinRAR.exe.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 146aace8-9bd6-42ba-be7a-0070d8027b76
RuleName = Potentially Suspicious Child Process Of WinRAR.EXE
EventType = Process.Start
Tag = proc-start-potentially-suspicious-child-process-of-winrar.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1203"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\WinRAR.exe" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe" or Process.Name in ["Cmd.Exe", "cscript.exe", "mshta.exe", "PowerShell.EXE", "pwsh.dll", "regsvr32.exe", "RUNDLL32.EXE", "wscript.exe"])
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Download or Copy file with Extrac32
# Author: frack113
RuleId = aa8e035d-7be4-48d3-a944-102aec04400d
RuleName = Suspicious Extrac32 Execution
EventType = Process.Start
Tag = proc-start-suspicious-extrac32-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "frack113"}
Query = (Process.CommandLine like r"%extrac32.exe%" or Process.Path like r"%\\extrac32.exe" or Process.Name == "extrac32.exe") and Process.CommandLine like r"%.cab%" and (Process.CommandLine like r"%/C%" or Process.CommandLine like r"%/Y%" or Process.CommandLine like r"% \\\\%")


[ActivityMonitoringRule platform=Windows]
# Detects set value ms-msdt MSProtocol URI scheme in Registry that could be an attempt to exploit CVE-2022-30190.
# Author: Sittikorn S
RuleId = 2d9403d5-7927-46b7-8216-37ab7c9ec5e3
RuleName = Suspicious Set Value of MSDT in Registry (CVE-2022-30190)
EventType = Reg.Any
Tag = suspicious-set-value-of-msdt-in-registry-(cve-2022-30190)
RiskScore = 50
Annotation = {"mitre_attack": ["T1221"], "author": "Sittikorn S"}
Query = Reg.TargetObject like r"HKCR\\ms-msdt\\%"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject


[ActivityMonitoringRule platform=Windows]
# Detects execution of "curl.exe" with the "-c" flag in order to save cookie data.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 5a6e1e16-07de-48d8-8aae-faa766c05e88
RuleName = Potential Cookies Session Hijacking
EventType = Process.Start
Tag = proc-start-potential-cookies-session-hijacking
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\curl.exe" or Process.Name == "curl.exe") and (Process.CommandLine regex "\\s-c\\s" or Process.CommandLine like r"%--cookie-jar%")


[ActivityMonitoringRule platform=Windows]
# Detects the deletion of files by the Sysinternals SDelete utility. It looks for the common name pattern used to rename files.
# Author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
RuleId = 6ddab845-b1b8-49c2-bbf7-1a11967f64bc
RuleName = File Deleted Via Sysinternals SDelete
EventType = File.Delete
Tag = file-deleted-via-sysinternals-sdelete
RiskScore = 50
Annotation = {"mitre_attack": ["T1070.004"], "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)"}
Query = (File.Path like r"%.AAA" or File.Path like r"%.ZZZ") and not File.Path like r"%\\Wireshark\\radius\\dictionary.alcatel-lucent.aaa"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects powershell scripts that import modules from suspicious directories
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = c31364f7-8be6-4b77-8483-dd2b5a7b69a3
RuleName = Import PowerShell Modules From Suspicious Directories - ProcCreation
EventType = Process.Start
Tag = proc-start-import-powershell-modules-from-suspicious-directories-proccreation
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Process.CommandLine like r"%Import-Module \"$Env:Temp\\%" or Process.CommandLine like r"%Import-Module '$Env:Temp\\%" or Process.CommandLine like r"%Import-Module $Env:Temp\\%" or Process.CommandLine like r"%Import-Module \"$Env:Appdata\\%" or Process.CommandLine like r"%Import-Module '$Env:Appdata\\%" or Process.CommandLine like r"%Import-Module $Env:Appdata\\%" or Process.CommandLine like r"%Import-Module C:\\Users\\Public\\%" or Process.CommandLine like r"%ipmo \"$Env:Temp\\%" or Process.CommandLine like r"%ipmo '$Env:Temp\\%" or Process.CommandLine like r"%ipmo $Env:Temp\\%" or Process.CommandLine like r"%ipmo \"$Env:Appdata\\%" or Process.CommandLine like r"%ipmo '$Env:Appdata\\%" or Process.CommandLine like r"%ipmo $Env:Appdata\\%" or Process.CommandLine like r"%ipmo C:\\Users\\Public\\%"


[ActivityMonitoringRule platform=Windows]
# Adversaries may search for private key certificate files on compromised systems for insecurely stored credential
# Author: frack113, Nasreddine Bencherchali (Nextron Systems)
RuleId = 213d6a77-3d55-4ce8-ba74-fcfef741974e
RuleName = Private Keys Reconnaissance Via CommandLine Tools
EventType = Process.Start
Tag = proc-start-private-keys-reconnaissance-via-commandline-tools
RiskScore = 50
Annotation = {"mitre_attack": ["T1552.004"], "author": "frack113, Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%.key%" or Process.CommandLine like r"%.pgp%" or Process.CommandLine like r"%.gpg%" or Process.CommandLine like r"%.ppk%" or Process.CommandLine like r"%.p12%" or Process.CommandLine like r"%.pem%" or Process.CommandLine like r"%.pfx%" or Process.CommandLine like r"%.cer%" or Process.CommandLine like r"%.p7b%" or Process.CommandLine like r"%.asc%") and ((Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and Process.CommandLine like r"%dir %" or (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and Process.CommandLine like r"%Get-ChildItem %" or Process.Path like r"%\\findstr.exe" or Process.Name == "FINDSTR.EXE")


[ActivityMonitoringRule platform=Windows]
# Detects the execution of netsh with the "trace" flag in order to start a network capture
# Author: Kutepov Anton, oscd.community
RuleId = d3c3861d-c504-4c77-ba55-224ba82d0118
RuleName = New Network Trace Capture Started Via Netsh.EXE
EventType = Process.Start
Tag = proc-start-new-network-trace-capture-started-via-netsh.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1040"], "author": "Kutepov Anton, oscd.community"}
Query = (Process.Path like r"%\\netsh.exe" or Process.Name == "netsh.exe") and Process.CommandLine like r"%trace%" and Process.CommandLine like r"%start%"


[ActivityMonitoringRule platform=Windows]
# Attackers can use print.exe for remote file copy
# Author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative
RuleId = bafac3d6-7de9-4dd9-8874-4a1194b493ed
RuleName = Abusing Print Executable
EventType = Process.Start
Tag = proc-start-abusing-print-executable
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative"}
Query = Process.Path like r"%\\print.exe" and Process.CommandLine like r"print%" and Process.CommandLine like r"%/D%" and Process.CommandLine like r"%.exe%" and not Process.CommandLine like r"%print.exe%"


[ActivityMonitoringRule platform=Windows]
# Detects creation of the Process Monitor driver by processes other than Process Monitor (procmon) itself.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = a05baa88-e922-4001-bc4d-8738135f27de
RuleName = Process Monitor Driver Creation By Non-Sysinternals Binary
EventType = File.Create
Tag = process-monitor-driver-creation-by-non-sysinternals-binary
RiskScore = 50
Annotation = {"mitre_attack": ["T1068"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = File.Path like r"%\\procmon%" and File.Path like r"%.sys" and not (Process.Path like r"%\\procmon.exe" or Process.Path like r"%\\procmon64.exe")
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
# These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
# Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
# Author: frack113
RuleId = fec96f39-988b-4586-b746-b93d59fd1922
RuleName = ScreenConnect Temporary Installation Artefact
EventType = File.Create
Tag = screenconnect-temporary-installation-artefact
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "frack113"}
Query = File.Path like r"%\\Bin\\ScreenConnect.%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects usage of "PresentationHost" which is a utility that runs ".xbap" (Browser Applications) files to download arbitrary files
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = b124ddf4-778d-418e-907f-6dd3fc0d31cd
RuleName = Arbitrary File Download Via PresentationHost.EXE
EventType = Process.Start
Tag = proc-start-arbitrary-file-download-via-presentationhost.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\presentationhost.exe" or Process.Name == "PresentationHost.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%ftp://%")


[ActivityMonitoringRule platform=Windows]
# Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.
# Author: @ROxPinTeddy
RuleId = fed85bf9-e075-4280-9159-fbe8a023d6fa
RuleName = Advanced IP Scanner - File Event
EventType = File.Create
Tag = advanced-ip-scanner-file-event
RiskScore = 50
Annotation = {"mitre_attack": ["T1046"], "author": "@ROxPinTeddy"}
Query = File.Path like r"%\\AppData\\Local\\Temp\\Advanced IP Scanner 2%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects a suspicious child process of userinit
# Author: Florian Roth (Nextron Systems), Samir Bousseaden (idea)
RuleId = b655a06a-31c0-477a-95c2-3726b83d649d
RuleName = Suspicious Userinit Child Process
EventType = Process.Start
Tag = proc-start-suspicious-userinit-child-process
RiskScore = 50
Annotation = {"mitre_attack": ["T1055"], "author": "Florian Roth (Nextron Systems), Samir Bousseaden (idea)"}
Query = Parent.Path like r"%\\userinit.exe" and not (Process.CommandLine like r"%\\netlogon\\%" or Process.Path like r"%\\explorer.exe" or Process.Name == "explorer.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine
# Author: James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger
RuleId = 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d
RuleName = Usage Of Web Request Commands And Cmdlets
EventType = Process.Start
Tag = proc-start-usage-of-web-request-commands-and-cmdlets
RiskScore = 50
Annotation = {"mitre_attack": ["T1059.001"], "author": "James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger"}
Query = Process.CommandLine like r"%[System.Net.WebRequest]::create%" or Process.CommandLine like r"%curl %" or Process.CommandLine like r"%Invoke-RestMethod%" or Process.CommandLine like r"%Invoke-WebRequest%" or Process.CommandLine like r"%iwr %" or Process.CommandLine like r"%Net.WebClient%" or Process.CommandLine like r"%Resume-BitsTransfer%" or Process.CommandLine like r"%Start-BitsTransfer%" or Process.CommandLine like r"%wget %" or Process.CommandLine like r"%WinHttp.WinHttpRequest%"


[ActivityMonitoringRule platform=Windows]
# Download and compress a remote file and store it in a cab file on local machine.
# Author: frack113
RuleId = 185d7418-f250-42d0-b72e-0c8b70661e93
RuleName = Suspicious Diantz Download and Compress Into a CAB File
EventType = Process.Start
Tag = proc-start-suspicious-diantz-download-and-compress-into-a-cab-file
RiskScore = 50
Annotation = {"mitre_attack": ["T1105"], "author": "frack113"}
Query = Process.CommandLine like r"%diantz.exe%" and Process.CommandLine like r"% \\\\%" and Process.CommandLine like r"%.cab%"


[ActivityMonitoringRule platform=Windows]
# Detects suspicious PowerShell invocation command parameters
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 536e2947-3729-478c-9903-745aaffe60d2
RuleName = Suspicious PowerShell Invocations - Specific - ProcessCreation
EventType = Process.Start
Tag = proc-start-suspicious-powershell-invocations-specific-processcreation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.CommandLine like r"%-nop%" and Process.CommandLine like r"% -w %" and Process.CommandLine like r"%hidden%" and Process.CommandLine like r"% -c %" and Process.CommandLine like r"%[Convert]::FromBase64String%" or Process.CommandLine like r"% -w %" and Process.CommandLine like r"%hidden%" and Process.CommandLine like r"%-noni%" and Process.CommandLine like r"%-nop%" and Process.CommandLine like r"% -c %" and Process.CommandLine like r"%iex%" and Process.CommandLine like r"%New-Object%" or Process.CommandLine like r"% -w %" and Process.CommandLine like r"%hidden%" and Process.CommandLine like r"%-ep%" and Process.CommandLine like r"%bypass%" and Process.CommandLine like r"%-Enc%" or Process.CommandLine like r"%powershell%" and Process.CommandLine like r"%reg%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%\\software\\%" or Process.CommandLine like r"%bypass%" and Process.CommandLine like r"%-noprofile%" and Process.CommandLine like r"%-windowstyle%" and Process.CommandLine like r"%hidden%" and Process.CommandLine like r"%new-object%" and Process.CommandLine like r"%system.net.webclient%" and Process.CommandLine like r"%.download%" or Process.CommandLine like r"%iex%" and Process.CommandLine like r"%New-Object%" and Process.CommandLine like r"%Net.WebClient%" and Process.CommandLine like r"%.Download%") and not (Process.CommandLine like r"%(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1%" or Process.CommandLine like r"%Write-ChocolateyWarning%")


[ActivityMonitoringRule platform=Windows]
# Detects a "regsvr32" execution where the DLL doesn't contain a common file extension.
# Author: Florian Roth (Nextron Systems)
RuleId = 50919691-7302-437f-8e10-1fe088afa145
RuleName = Regsvr32 DLL Execution With Uncommon Extension
EventType = Process.Start
Tag = proc-start-regsvr32-dll-execution-with-uncommon-extension
RiskScore = 50
Annotation = {"mitre_attack": ["T1574"], "author": "Florian Roth (Nextron Systems)"}
Query = (Process.Path like r"%\\regsvr32.exe" or Process.Name == "REGSVR32.EXE") and not (Process.CommandLine like r"%.ax%" or Process.CommandLine like r"%.cpl%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.ocx%" or isnull(Process.CommandLine) or Process.CommandLine == "") and not (Process.CommandLine like r"%.ppl%" or Process.CommandLine like r"%.bav%")


[ActivityMonitoringRule platform=Windows]
# VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules.
# Author: Christopher Peacock @SecurePeacock, SCYTHE @scythe_io
RuleId = b30a8bc5-e21b-4ca2-9420-0a94019ac56a
RuleName = Use of VisualUiaVerifyNative.exe
EventType = Process.Start
Tag = proc-start-use-of-visualuiaverifynative.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io"}
Query = Process.Path like r"%\\VisualUiaVerifyNative.exe" or Process.Name == "VisualUiaVerifyNative.exe"


[ActivityMonitoringRule platform=Windows]
# Detects potential "ShellDispatch.dll" functionality abuse to execute arbitrary binaries via "ShellExecute"
# Author: X__Junior (Nextron Systems)
RuleId = 82343930-652f-43f5-ab70-2ee9fdd6d5e9
RuleName = Potential ShellDispatch.DLL Functionality Abuse
EventType = Process.Start
Tag = proc-start-potential-shelldispatch.dll-functionality-abuse
RiskScore = 50
Annotation = {"author": "X__Junior (Nextron Systems)"}
Query = (Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%RunDll\_ShellExecuteW%"


[ActivityMonitoringRule platform=Windows]
# Detects potentially suspicious child processes of "Diskshadow.exe". This could be an attempt to bypass parent/child relationship detection or application whitelisting rules.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 9f546b25-5f12-4c8d-8532-5893dcb1e4b8
RuleName = Potentially Suspicious Child Process Of DiskShadow.EXE
EventType = Process.Start
Tag = proc-start-potentially-suspicious-child-process-of-diskshadow.exe
RiskScore = 50
Annotation = {"mitre_attack": ["T1218"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = Parent.Path like r"%\\diskshadow.exe" and (Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\wscript.exe")
GenericProperty1 = Parent.Path


[ActivityMonitoringRule platform=Windows]
# Detects execution of ruby using the "-e" flag. This is could be used as a way to launch a reverse shell or execute live ruby code.
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 20a5ffa1-3848-4584-b6f8-c7c7fd9f69c8
RuleName = Ruby Inline Command Execution
EventType = Process.Start
Tag = proc-start-ruby-inline-command-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\ruby.exe" or Process.Name == "ruby.exe") and Process.CommandLine like r"% -e%"


[ActivityMonitoringRule platform=Windows]
# Detects the creation of a schedule task that runs weekly and execute the "shutdown /l /f" command.
# This behavior was observed being used by KamiKakaBot samples in order to achieve persistence on a system.
# Author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
RuleId = fe9e8ba9-4419-41e6-a574-bd9f7b3af961
RuleName = Potential KamiKakaBot Activity - Shutdown Schedule Task Creation
EventType = Process.Start
Tag = proc-start-potential-kamikakabot-activity-shutdown-schedule-task-creation
RiskScore = 50
Annotation = {"author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)"}
Query = Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"% /create %" and Process.CommandLine like r"%shutdown /l /f%" and Process.CommandLine like r"%WEEKLY%" and not (Process.User like r"%AUTHORI%" or Process.User like r"%AUTORI%")
GenericProperty1 = Process.User


[ActivityMonitoringRule platform=Windows]
# An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
# These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
# Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
# Author: Nasreddine Bencherchali (Nextron Systems)
RuleId = 95e60a2b-4705-444b-b7da-ba0ea81a3ee2
RuleName = Remote Access Tool - Simple Help Execution
EventType = Process.Start
Tag = proc-start-remote-access-tool-simple-help-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "Nasreddine Bencherchali (Nextron Systems)"}
Query = (Process.Path like r"%\\JWrapper-Remote Access\\%" or Process.Path like r"%\\JWrapper-Remote Support\\%") and Process.Path like r"%\\SimpleService.exe"


[ActivityMonitoringRule platform=Windows]
# Detects use of chcp to look up the system locale value as part of host discovery
# Author: _pete_0, TheDFIRReport
RuleId = 7090adee-82e2-4269-bd59-80691e7c6338
RuleName = Console CodePage Lookup Via CHCP
EventType = Process.Start
Tag = proc-start-console-codepage-lookup-via-chcp
RiskScore = 50
Annotation = {"mitre_attack": ["T1614.001"], "author": "_pete_0, TheDFIRReport"}
Query = Parent.Path like r"%\\cmd.exe" and (Parent.CommandLine like r"% -c %" or Parent.CommandLine like r"% /c %" or Parent.CommandLine like r"% -r %" or Parent.CommandLine like r"% /r %" or Parent.CommandLine like r"% -k %" or Parent.CommandLine like r"% /k %") and Process.Path like r"%\\chcp.com" and (Process.CommandLine like r"%chcp" or Process.CommandLine like r"%chcp " or Process.CommandLine like r"%chcp  ")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine


[ActivityMonitoringRule platform=Windows]
# An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
# These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
# Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
# Author: frack113, Connor Martin
RuleId = 4d07b1f4-cb00-4470-b9f8-b0191d48ff52
RuleName = DNS Query To Remote Access Software Domain From Non-Browser App
EventType = Dns.Query
Tag = dns-query-to-remote-access-software-domain-from-non-browser-app
RiskScore = 50
Annotation = {"mitre_attack": ["T1219"], "author": "frack113, Connor Martin"}
Query = (Dns.QueryRequest like r"%agent.jumpcloud.com" or Dns.QueryRequest like r"%agentreporting.atera.com" or Dns.QueryRequest like r"%ammyy.com" or Dns.QueryRequest like r"%api.parsec.app" or Dns.QueryRequest like r"%api.playanext.com" or Dns.QueryRequest like r"%api.splashtop.com" or Dns.QueryRequest like r"%app.atera.com" or Dns.QueryRequest like r"%assist.zoho.com" or Dns.QueryRequest like r"%authentication.logmeininc.com" or Dns.QueryRequest like r"%beyondtrustcloud.com" or Dns.QueryRequest like r"%cdn.kaseya.net" or Dns.QueryRequest like r"%client.teamviewer.com" or Dns.QueryRequest like r"%comserver.corporate.beanywhere.com" or Dns.QueryRequest like r"%control.connectwise.com" or Dns.QueryRequest like r"%downloads.zohocdn.com" or Dns.QueryRequest like r"%dwservice.net" or Dns.QueryRequest like r"%express.gotoassist.com" or Dns.QueryRequest like r"%getgo.com" or Dns.QueryRequest like r"%integratedchat.teamviewer.com" or Dns.QueryRequest like r"%join.zoho.com" or Dns.QueryRequest like r"%kickstart.jumpcloud.com" or Dns.QueryRequest like r"%license.bomgar.com" or Dns.QueryRequest like r"%logmein-gateway.com" or Dns.QueryRequest like r"%logmein.com" or Dns.QueryRequest like r"%logmeincdn.http.internapcdn.net" or Dns.QueryRequest like r"%n-able.com" or Dns.QueryRequest like r"%net.anydesk.com" or Dns.QueryRequest like r"%netsupportsoftware.com" or Dns.QueryRequest like r"%parsecusercontent.com" or Dns.QueryRequest like r"%pubsub.atera.com" or Dns.QueryRequest like r"%relay.kaseya.net" or Dns.QueryRequest like r"%relay.screenconnect.com" or Dns.QueryRequest like r"%relay.splashtop.com" or Dns.QueryRequest like r"%remotedesktop-pa.googleapis.com" or Dns.QueryRequest like r"%remoteutilities.com" or Dns.QueryRequest like r"%secure.logmeinrescue.com" or Dns.QueryRequest like r"%services.vnc.com" or Dns.QueryRequest like r"%static.remotepc.com" or Dns.QueryRequest like r"%swi-rc.com" or Dns.QueryRequest like r"%swi-tc.com" or Dns.QueryRequest like r"%telemetry.servers.qetqo.com" or Dns.QueryRequest like r"%tmate.io" or Dns.QueryRequest like r"%zohoassist.com" or Dns.QueryRequest like r"%.rustdesk.com" and Dns.QueryRequest like r"rs-%") and not (Process.Path in ["C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"] or Process.Path in ["C:\\Program Files\\Mozilla Firefox\\firefox.exe", "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"] or Process.Path in ["C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe", "C:\\Program Files\\Internet Explorer\\iexplore.exe"] or Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\%" or Process.Path like r"%\\WindowsApps\\MicrosoftEdge.exe" or Process.Path in ["C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe", "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"] or (Process.Path like r"C:\\Program Files (x86)\\Microsoft\\EdgeCore\\%" or Process.Path like r"C:\\Program Files\\Microsoft\\EdgeCore\\%") and (Process.Path like r"%\\msedge.exe" or Process.Path like r"%\\msedgewebview2.exe") or Process.Path like r"%\\safari.exe" or Process.Path like r"%\\MsMpEng.exe" or Process.Path like r"%\\MsSense.exe" or Process.Path like r"%\\brave.exe" and Process.Path like r"C:\\Program Files\\BraveSoftware\\%" or Process.Path like r"%\\AppData\\Local\\Maxthon\\%" and Process.Path like r"%\\maxthon.exe" or Process.Path like r"%\\AppData\\Local\\Programs\\Opera\\%" and Process.Path like r"%\\opera.exe" or (Process.Path like r"C:\\Program Files\\SeaMonkey\\%" or Process.Path like r"C:\\Program Files (x86)\\SeaMonkey\\%") and Process.Path like r"%\\seamonkey.exe" or Process.Path like r"%\\AppData\\Local\\Vivaldi\\%" and Process.Path like r"%\\vivaldi.exe" or (Process.Path like r"C:\\Program Files\\Naver\\Naver Whale\\%" or Process.Path like r"C:\\Program Files (x86)\\Naver\\Naver Whale\\%") and Process.Path like r"%\\whale.exe" or Process.Path like r"%\\Tor Browser\\%" or (Process.Path like r"C:\\Program Files\\Waterfox\\%" or Process.Path like r"C:\\Program Files (x86)\\Waterfox\\%") and Process.Path like r"%\\Waterfox.exe" or Process.Path like r"%\\AppData\\Local\\Programs\\midori-ng\\%" and Process.Path like r"%\\Midori Next Generation.exe" or (Process.Path like r"C:\\Program Files\\SlimBrowser\\%" or Process.Path like r"C:\\Program Files (x86)\\SlimBrowser\\%") and Process.Path like r"%\\slimbrowser.exe" or Process.Path like r"%\\AppData\\Local\\Flock\\%" and Process.Path like r"%\\Flock.exe" or Process.Path like r"%\\AppData\\Local\\Phoebe\\%" and Process.Path like r"%\\Phoebe.exe" or (Process.Path like r"C:\\Program Files\\Falkon\\%" or Process.Path like r"C:\\Program Files (x86)\\Falkon\\%") and Process.Path like r"%\\falkon.exe" or (Process.Path like r"C:\\Program Files (x86)\\Avant Browser\\%" or Process.Path like r"C:\\Program Files\\Avant Browser\\%") and Process.Path like r"%\\avant.exe")
GenericProperty1 = Dns.QueryRequest


[ActivityMonitoringRule platform=Windows]
# The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.
# Author: Christopher Peacock @SecurePeacock, SCYTHE @scythe_io
RuleId = b96b2031-7c17-4473-afe7-a30ce714db29
RuleName = Use of FSharp Interpreters
EventType = Process.Start
Tag = proc-start-use-of-fsharp-interpreters
RiskScore = 50
Annotation = {"mitre_attack": ["T1059"], "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io"}
Query = Process.Path like r"%\\fsianycpu.exe" or Process.Name == "fsianycpu.exe" or Process.Path like r"%\\fsi.exe" or Process.Name == "fsi.exe"


[ActivityMonitoringRule platform=Windows]
# Detects modification of autostart extensibility point (ASEP) in registry.
# Author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)
RuleId = 18f2065c-d36c-464a-a748-bcf909acb2e3
RuleName = Wow6432Node Classes Autorun Keys Modification
EventType = Reg.Any
Tag = wow6432node-classes-autorun-keys-modification
RiskScore = 50
Annotation = {"mitre_attack": ["T1547.001"], "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"}
Query = Reg.TargetObject like r"%\\Software\\Wow6432Node\\Classes%" and (Reg.TargetObject like r"%\\Folder\\ShellEx\\ExtShellFolderViews%" or Reg.TargetObject like r"%\\Folder\\ShellEx\\DragDropHandlers%" or Reg.TargetObject like r"%\\Folder\\ShellEx\\ColumnHandlers%" or Reg.TargetObject like r"%\\Directory\\Shellex\\DragDropHandlers%" or Reg.TargetObject like r"%\\Directory\\Shellex\\CopyHookHandlers%" or Reg.TargetObject like r"%\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance%" or Reg.TargetObject like r"%\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance%" or Reg.TargetObject like r"%\\AllFileSystemObjects\\ShellEx\\DragDropHandlers%" or Reg.TargetObject like r"%\\ShellEx\\PropertySheetHandlers%" or Reg.TargetObject like r"%\\ShellEx\\ContextMenuHandlers%") and not Reg.Value.Data == "(Empty)"
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
# Author: Matthew Green @mgreen27, Ecco, James Pemberton @4A616D6573, oscd.community, Andreas Hunkeler (@Karneades)
RuleId = 36480ae1-a1cb-4eaa-a0d6-29801d7e9142
RuleName = Potential Defense Evasion Via Binary Rename
EventType = Process.Start
Tag = proc-start-potential-defense-evasion-via-binary-rename
RiskScore = 50
Annotation = {"mitre_attack": ["T1036.003"], "author": "Matthew Green @mgreen27, Ecco, James Pemberton @4A616D6573, oscd.community, Andreas Hunkeler (@Karneades)"}
Query = (Process.Name in ["Cmd.Exe", "CONHOST.EXE", "7z.exe", "WinRAR.exe", "wevtutil.exe", "net.exe", "net1.exe", "netsh.exe", "InstallUtil.exe"]) and not (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\conhost.exe" or Process.Path like r"%\\7z.exe" or Process.Path like r"%\\WinRAR.exe" or Process.Path like r"%\\wevtutil.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Path like r"%\\netsh.exe" or Process.Path like r"%\\InstallUtil.exe")


[ActivityMonitoringRule platform=Windows]
# Detects potential COM object hijacking leveraging the COM Search Order
# Author: Maxime Thiebaut (@0xThiebaut), oscd.community, Cédric Hien
RuleId = a0ff33d8-79e4-4cef-b4f3-9dc4133ccd12
RuleName = Potential Persistence Via COM Search Order Hijacking
EventType = Reg.Any
Tag = potential-persistence-via-com-search-order-hijacking
RiskScore = 50
Annotation = {"mitre_attack": ["T1546.015"], "author": "Maxime Thiebaut (@0xThiebaut), oscd.community, C\u00e9dric Hien"}
Query = Reg.TargetObject like r"%\\CLSID\\%" and Reg.TargetObject like r"%\\InprocServer32\\(Default)" and not (Reg.Value.Data like r"%\%\%systemroot\%\%\\system32\\%" or Reg.Value.Data like r"%\%\%systemroot\%\%\\SysWow64\\%" or Reg.Value.Data like r"%\\AppData\\Local\\Microsoft\\OneDrive\\%" or Reg.Value.Data like r"%\\FileCoAuthLib64.dll%" or Reg.Value.Data like r"%\\FileSyncShell64.dll%" or Reg.Value.Data like r"%\\FileSyncApi64.dll%" or Process.Path like r"%:\\WINDOWS\\system32\\SecurityHealthService.exe" or Reg.Value.Data like r"%\\AppData\\Local\\Microsoft\\TeamsMeetingAddin\\%" and Reg.Value.Data like r"%\\Microsoft.Teams.AddinLoader.dll%" or Reg.Value.Data like r"%\\AppData\\Roaming\\Dropbox\\%" and Reg.Value.Data like r"%\\DropboxExt64.%.dll%" or Reg.Value.Data like r"%TmopIEPlg.dll" or Process.Path like r"%:\\WINDOWS\\system32\\wuauclt.exe" or Process.Path like r"%:\\WINDOWS\\system32\\svchost.exe" or (Process.Path like r"%:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\%" or Process.Path like r"%:\\Program Files\\Windows Defender\\%") and Process.Path like r"%\\MsMpEng.exe" or Reg.Value.Data like r"%\\FileRepository\\nvmdi.inf%" or Process.Path like r"%\\MicrosoftEdgeUpdateComRegisterShell64.exe" or Process.Path like r"%:\\WINDOWS\\SYSTEM32\\dxdiag.exe" or Reg.Value.Data like r"%:\\Windows\\pyshellext.amd64.dll" or Reg.Value.Data like r"%:\\Windows\\pyshellext.dll" or Reg.Value.Data like r"%:\\Windows\\system32\\dnssdX.dll" or Reg.Value.Data like r"%:\\Windows\\SysWOW64\\dnssdX.dll" or Reg.Value.Data like r"%:\\Windows\\system32\\spool\\drivers\\x64\\3\\PrintConfig.dll" or Reg.Value.Data like r"%:\\Program Files\\%" or Reg.Value.Data like r"%:\\Program Files (x86)\\%" or Reg.Value.Data like r"%:\\ProgramData\\Microsoft\\%" or Reg.Value.Data like r"%:\\WINDOWS\\system32\\GamingServicesProxy.dll%" or Process.Path like r"%:\\Windows\\System32\\poqexec.exe" and Reg.Value.Data like r"%:\\Windows\\System32\\Autopilot.dll%" or Process.Path like r"%:\\Windows\\system32\\SecurityHealthService.exe" and Reg.Value.Data like r"%:\\Windows\\System32\\SecurityHealth%" or (Process.Path like r"%:\\Windows\\System32\\poqexec.exe" or Process.Path like r"%:\\Windows\\System32\\regsvr32.exe") and Reg.TargetObject like r"%\\InProcServer32\\(Default)")
Hive = HKLM,HKU
GenericProperty1 = Reg.TargetObject
GenericProperty2 = Reg.Value.Data


[ActivityMonitoringRule platform=Windows]
# This detects file modifications to ASPX and ASHX files within the root of the App_Extensions directory, which is allowed by a ZipSlip vulnerability in versions prior to 23.9.8. This occurs during exploitation of CVE-2024-1708.
# Author: Matt Anderson, Andrew Schwartz, Caleb Stewart, Huntress
RuleId = 44d7af7e-88e6-4490-be11-55f7ff4d9fc1
RuleName = CVE-2024-1708 - ScreenConnect Path Traversal Exploitation
EventType = File.Create
Tag = cve-2024-1708-screenconnect-path-traversal-exploitation
RiskScore = 50
Annotation = {"author": "Matt Anderson, Andrew Schwartz, Caleb Stewart, Huntress"}
Query = Process.Path like r"%\\ScreenConnect.Service.exe" and (File.Path like r"%ScreenConnect\\App\_Extensions\\%.ashx" or File.Path like r"%ScreenConnect\\App\_Extensions\\%.aspx") and not File.Path like r"%ScreenConnect\\App\_Extensions\\%\\%"
GenericProperty1 = File.Path


[ActivityMonitoringRule platform=Windows]
# Detects creation of an ad-hoc Cloudflare Quick Tunnel, which can be used to tunnel local services such as HTTP, RDP, SSH and SMB.
# The free TryCloudflare Quick Tunnel will generate a random subdomain on trycloudflare[.]com, following a call to api[.]trycloudflare[.]com.
# The tool has been observed in use by threat groups including Akira ransomware.
# Author: Sajid Nawaz Khan
RuleId = 222129f7-f4dc-4568-b0d2-22440a9639ba
RuleName = Cloudflared Quick Tunnel Execution
EventType = Process.Start
Tag = proc-start-cloudflared-quick-tunnel-execution
RiskScore = 50
Annotation = {"mitre_attack": ["T1090.001"], "author": "Sajid Nawaz Khan"}
Query = (Process.Path like r"%\\cloudflared.exe" or Process.Path like r"%\\cloudflared-windows-386.exe" or Process.Path like r"%\\cloudflared-windows-amd64.exe" or Process.Hashes like r"%SHA256=2fb6c04c4f95fb8d158af94c137f90ac820716deaf88d8ebec956254e046cb29%" or Process.Hashes like r"%SHA256=b3d21940a10fdef5e415ad70331ce257c24fe3bcf7722262302e0421791f87e8%" or Process.Hashes like r"%SHA256=1fbd8362b2d2d2e6a5750ae3db69cd1815e6c1d31da48a98b796450971a8e039%" or Process.Hashes like r"%SHA256=0409c9b12f9d0eda86e461ed9bdabeefb00172b26322079681a0bdf48e68dc28%" or Process.Hashes like r"%SHA256=7cfb411d04bac42ef93d1f0c93c0a481e38c6f4612b97ae89d4702595988edc7%" or Process.Hashes like r"%SHA256=5b3c2d846ab162dc6bc595cce3a49de5731afde5d6060be7066d21b013a28373%" or Process.Hashes like r"%SHA256=ce95df7f69664c3df19b76028e115931919a71517b776da7b42d353e2ff4a670%" or Process.Hashes like r"%SHA256=1293525a19cfe3bc8296b62fbfe19f083632ed644a1c18c10b045a1d3030d81a%" or Process.Hashes like r"%SHA256=af2b9161cfcb654b16408cd6b098afe9d1fb61a037d18d7090a119d4c0c8e0f0%" or Process.Hashes like r"%SHA256=39ddceb56a15798826a5fc4892fa2b474c444bb4d7a8bf2fa95e41cab10fa7a1%" or Process.Hashes like r"%SHA256=ccd11f2328023a0e7929e845d5b6e7bc783fb4650d65faef3ae090239d4bbce2%" or Process.Hashes like r"%SHA256=b6e5c5d2567ae8c69cc012ebcae30e6c9b5359d64a58d17ba75ec89f8bce71ac%" or Process.Hashes like r"%SHA256=f813484ea441404f18caad96f28138e8aaf0cb256163c09c2ab8a3acab87f69f%" or Process.Hashes like r"%SHA256=fc4a0802ab9c7409b892ca00636bec61e2acfc911bccfdeb9978b8ab5a2f828d%" or Process.Hashes like r"%SHA256=083150724b49604c8765c1ba19541fa260b133be0acb0647fcd936d81f054499%" or Process.Hashes like r"%SHA256=44303d6572956f28a0f2e4b188934fb9874f2584f5c81fa431a463cfbf28083b%" or Process.Hashes like r"%SHA256=5d38c46032a58e28ae5f7d174d8761ec3d64d186677f3ec53af5f51afb9bfd2f%" or Process.Hashes like r"%SHA256=e1e70fa42059911bc6685fafef957f9a73fc66f214d0704a9b932683a5204032%" or Process.Hashes like r"%SHA256=c01356092a365b84f84f0e66870bd1a05ba3feb53cafd973fa5fea2534bee234%" or Process.Hashes like r"%SHA256=b3f9c06151e30ee43d39e788a79cd918a314f24e04fe87f3de8272a2057b624f%" or Process.Hashes like r"%SHA256=cd81b2792f0739f473c31c9cb7cf2313154bfa28b839975802b90e8790bb5058%" or Process.Hashes like r"%SHA256=9ec7e6c8e1bfd883663d8d9d62c9e4f9ae373b731407181e32491b27a7218a2c%" or Process.Hashes like r"%SHA256=c2cfd23fdc6c0e1b1ffa0e545cbe556f18d11b362b4a89ba0713f6ab01c4827f%" or Process.Hashes like r"%SHA256=53f8adbd76c0eb16f5e43cadde422474d8a06f9c8f959389c1930042ad8beaa5%" or Process.Hashes like r"%SHA256=648c8d2f8001c113d2986dd00b7bbd181593d462bef73522cee212c4f71f95b3%" or Process.Hashes like r"%SHA256=ae047e2095e46c3f9c518b2be67ec753f4f0aad23b261a361fcb6144dcdb63b4%" or Process.Hashes like r"%SHA256=3153d2baa462978dd22ab33d1c2274ecc88c200225d6a3327f98d5b752d08f5c%" or Process.Hashes like r"%SHA256=f49cde976e628012c9db73e1c8d76081944ecf2297cdafeb78bb13290da274c4%" or Process.Hashes like r"%SHA256=d2513e58bb03ccc83affde685c6ef987924c37ce6707d8e9857e2524b0d7e90f%" or Process.Hashes like r"%SHA256=bb67c7623ba92fe64ffd9816b8d5b3b1ea3013960a30bd4cf6e295b3eb5b1bad%" or Process.Hashes like r"%SHA256=b34b3c3a91e3165d1481f0b3ec23eab93a1cfba94345a6cbfe5b18ddbd48eac7%" or Process.Hashes like r"%SHA256=f7848034e010d55f15e474ca998f96391e320ff29b00cfcc4c5e536529703e75%" or Process.Hashes like r"%SHA256=b6fc9493778cbe3bfc062d73f5cc604bc0ff058bc5e5dc6aac87f3a4008b54b6%" or Process.Hashes like r"%SHA256=f5c5e962577e2293c4ad10603816dce7cc273585969615fbf4e4bfa9eaff1688%" or Process.Hashes like r"%SHA256=d14c52d9220b606f428a8fe9f7c108b0d6f14cf71e7384749e98e6a95962e68f%" or Process.Hashes like r"%SHA256=d3a0e1a79158f3985cd49607ebe0cdfcc49cb9af96b8f43aefd0cdfe2f22e663%" or Process.Hashes like r"%SHA256=2fbbfc8299537ff80cadf9d0e27c223fe0ccb9052bf9d8763ad717bbfa521c77%" or Process.Hashes like r"%SHA256=19074674c6fbdaa573b3081745e5e26144fdf7a086d14e0e220d1814f1f13078%") and (Process.CommandLine like r"%-url%" and Process.CommandLine like r"%tunnel%" or Process.CommandLine like r"%.exe -url%" or Process.CommandLine like r"%.exe --url%") or Process.CommandLine like r"%-url%" and Process.CommandLine like r"%-no-autoupdate%"
GenericProperty1 = Process.Hashes

